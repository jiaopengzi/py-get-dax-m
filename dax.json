{
    "APPROXIMATEDISTINCTCOUNT": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/approximate-distinctcount-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/approximate-distinctcount-function-dax",
        "description-en-us": "Returns an estimated count of unique values in a column. This function invokes a corresponding aggregation operation in the data source, which is optimized for query performance, but with slightly reduced accuracy. This function can be used with the following data sources: Azure SQL, Azure SQL Data Warehouse, BigQuery, Databricks, and Snowflake. This function requires DirectQuery mode. Import mode and dual storage mode are not supported.",
        "category-en-us": "Aggregation functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/aggregation-functions-dax",
        "category-zh-cn": "聚合函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/aggregation-functions-dax",
        "description-zh-cn": "在列中返回唯一值的估计计数。 此函数在数据源中调用相应聚合操作，该操作针对查询性能进行了优化，但准确性略有降低。 此函数可用于以下数据源：Azure SQL、Azure SQL Data Warehouse、BigQuery、Databricks 和 Snowflake。 此函数需要 DirectQuery 模式。 不支持导入模式和双重存储模式。",
        "url-dax-guide": "https://dax.guide/approximatedistinctcount/"
    },
    "AVERAGE": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/average-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/average-function-dax",
        "description-en-us": "Returns the average (arithmetic mean) of all the numbers in a column.\nThis function takes the specified column as an argument and finds the average of the values in that column. If you want to find the average of an expression that evaluates to a set of numbers, use the AVERAGEX function instead.\n\nNonnumeric values in the column are handled as follows:\n\nIf the column contains text, no aggregation can be performed, and the functions returns blanks.\nIf the column contains logical values or empty cells, those values are ignored.\nCells with the value zero are included.\n\n\nWhen you average cells, you must keep in mind the difference between an empty cell and a cell that contains the value 0 (zero). When a cell contains 0, it is added to the sum of numbers and the row is counted among the number of rows used as the divisor. However, when a cell contains a blank, the row is not counted.\n\nWhenever there are no rows to aggregate, the function returns a blank. However, if there are rows, but none of them meet the specified criteria, the function returns 0. Excel also returns a zero if no rows are found that meet the conditions.\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Aggregation functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/aggregation-functions-dax",
        "category-zh-cn": "聚合函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/aggregation-functions-dax",
        "description-zh-cn": "返回列中所有数字的平均值（算术平均值）。\n此函数采用指定列作为参数，并查找该列中的值的平均值。 如果要查找计算结果为一组数字的表达式的平均值，请改用 AVERAGEX 函数。\n\n列中的非数字值按如下方式处理：\n\n如果该列包含文本，则不能执行任何聚合操作，并且函数将返回空白。\n如果该列包含逻辑值或空单元格，则会忽略这些值。\n值为零的单元格会包含在内。\n\n\n计算单元格的平均值时，必须记住空单元格与包含值为 0（零）的单元格之间的差异。 如果某一单元格包含 0，则将其添加到数字的总和，并将该行计入用作除数的行数。 但是，当某一单元格包含空白时，则不对该行进行计数。\n\n如果没有要聚合的行，函数将返回空白。 但是，如果存在行，但没有一行符合指定的条件，函数则会返回 0。 如果找不到满足条件的行，Excel 也会返回零。\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/average/"
    },
    "AVERAGEA": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/averagea-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/averagea-function-dax",
        "description-en-us": "Returns the average (arithmetic mean) of the values in a column. Handles text and non-numeric values.\nThe AVERAGEA function takes a column and averages the numbers in it, but also handles non-numeric data types according to the following rules:\n\nValues that evaluates to TRUE count as 1.\nValues that evaluate to FALSE count as 0 (zero).\nValues that contain non-numeric text count as 0 (zero).\nEmpty text (\"\") counts as 0 (zero).\n\n\nIf you do not want to include logical values and text representations of numbers in a reference as part of the calculation, use the AVERAGE function.\n\nWhenever there are no rows to aggregate, the function returns a blank.  However, if there are rows, but none of them meet the specified criteria, the function returns 0. Microsoft Excel also returns a zero if no rows are found that meet the conditions.\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Aggregation functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/aggregation-functions-dax",
        "category-zh-cn": "聚合函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/aggregation-functions-dax",
        "description-zh-cn": "返回列中值的平均值（算术平均值）。 处理文本和非数字值。\nAVERAGEA 函数会取一列并计算其中数字的平均值，但同时还会根据以下规则处理非数字数据类型：\n\n计算结果为 TRUE 的值计为 1。\n计算结果为 FALSE 的值计为 0（零）。\n包含非数字文本的值计为 0（零）。\n空文本 (\"\") 计为 0（零）。\n\n\n如果不想在引用中包含逻辑值和数字的文本表示作为计算的一部分，请使用 AVERAGE 函数。\n\n如果没有要聚合的行，函数将返回空白。  但是，如果存在行，但没有一行符合指定的条件，函数则会返回 0。 如果找不到满足条件的行，Microsoft Excel 也会返回零。\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/averagea/"
    },
    "AVERAGEX": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/averagex-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/averagex-function-dax",
        "description-en-us": "Calculates the average (arithmetic mean) of a set of expressions evaluated over a table.\nThe AVERAGEX function enables you to evaluate expressions for each row of a table, and then take the resulting set of values and calculate its arithmetic mean. Therefore, the function takes a table as its first argument, and an expression as the second argument.\n\nIn all other respects, AVERAGEX follows the same rules as AVERAGE. You cannot include non-numeric or null cells. Both the table and expression arguments are required.\n\nWhen there are no rows to aggregate, the function returns a blank.  When there are rows, but none of them meet the specified criteria, then the function returns 0.\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Aggregation functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/aggregation-functions-dax",
        "category-zh-cn": "聚合函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/aggregation-functions-dax",
        "description-zh-cn": "计算针对表进行计算的一组表达式的平均值（算术平均值）。\nAVERAGEX 函数使你能够为表的每一行计算表达式，然后获取结果值集并计算其算术平均值。 因此，函数将表作为第一个参数，将表达式作为第二个参数。\n\n在所有其他方面，AVERAGEX 遵循与 AVERAGE 相同的规则。 不能包含非数值或 null 单元格。 表参数和表达式参数都是必需的。\n\n如果没有要聚合的行，该函数将返回空白。  当存在行，但没有一行符合指定的条件，则函数返回 0。\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/averagex/"
    },
    "COUNT": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/count-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/count-function-dax",
        "description-en-us": "Counts the number of rows in the specified column that contain non-blank values.\nThe only argument allowed to this function is a column. The COUNT function counts rows that contain the following kinds of values:\n\nNumbers\nDates\nStrings\n\n\nWhen the function finds no rows to count, it returns a blank.\n\nBlank values are skipped. TRUE/FALSE values are not supported.\n\nIf you want to evaluate a column of TRUE/FALSE values, use the COUNTA function.\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\nFor best practices when using COUNT, see Use COUNTROWS instead of COUNT.\n\n",
        "category-en-us": "Aggregation functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/aggregation-functions-dax",
        "category-zh-cn": "聚合函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/aggregation-functions-dax",
        "description-zh-cn": "计算指定列中包含非空值的行数。\n列是此函数的唯一参数。 COUNT 函数对包含以下类型的值的行进行计数：\n\n数字\n日期\n字符串\n\n\n如果该函数未找到任何要计数的行，则返回空白。\n\n将跳过空白值。 不支持 TRUE/FALSE 值。\n\n如果要计算 TRUE/FALSE 值的列，请使用 COUNTA 函数。\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n有关使用 COUNT 时的最佳做法，请参阅使用 COUNTROWS 而不是 COUNT。\n\n",
        "url-dax-guide": "https://dax.guide/count/"
    },
    "COUNTA": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/counta-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/counta-function-dax",
        "description-en-us": "Counts the number of rows in the specified column that contain non-blank values.\nWhen the function does not find any rows to count, the function returns a blank.\n\nUnlike COUNT, COUNTA supports Boolean data type.\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Aggregation functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/aggregation-functions-dax",
        "category-zh-cn": "聚合函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/aggregation-functions-dax",
        "description-zh-cn": "计算指定列中包含非空值的行数。\n如果函数未找到任何可计数的行，则该函数将返回空白。\n\n与 COUNT 不同，COUNTA 支持布尔数据类型。\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/counta/"
    },
    "COUNTAX": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/countax-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/countax-function-dax",
        "description-en-us": "The COUNTAX function counts non-blank results when evaluating the result of an expression over a table. That is, it works just like the COUNTA function, but is used to iterate through the rows in a table and count rows where the specified expressions results in a non-blank result.\nLike the COUNTA function, the COUNTAX function counts cells containing any type of information, including other expressions. For example, if the column contains an expression that evaluates to an empty string, the COUNTAX function treats that result as non-blank. Usually the COUNTAX function does not count empty cells but in this case the cell contains a formula, so it is counted.\n\nWhenever the function finds no rows to aggregate, the function returns a blank.\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Aggregation functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/aggregation-functions-dax",
        "category-zh-cn": "聚合函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/aggregation-functions-dax",
        "description-zh-cn": "COUNTAX 在针对表计算表达式的结果时对非空白结果进行计数。 也就是说，它的工作原理与 COUNTA 函数类似，但它用于循环访问表中的行，并对指定表达式生成非空结果的行进行计数。\n与 COUNTA 函数类似，COUNTAX 函数对包含任何类型信息（包括其他表达式）的单元进行计数。 例如，如果列中包含的表达式的计算结果为空字符串，则 COUNTAX 函数会将该结果视为非空白。 通常，COUNTAX 函数不会对空单元进行计数，但在这种情况下，单元包含一个公式，因此将对其进行计数。\n\n如果函数发现没有要聚合的行，该函数将返回空白。\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/countax/"
    },
    "COUNTBLANK": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/countblank-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/countblank-function-dax",
        "description-en-us": "Counts the number of blank cells in a column.\nThe only argument allowed to this function is a column. You can use columns containing any type of data, but only blank cells are counted. Cells that have the value zero (0) are not counted, as zero is considered a numeric value and not a blank.\n\nWhenever there are no rows to aggregate, the function returns a blank.  However, if there are rows, but none of them meet the specified criteria, the function returns 0. Microsoft Excel also returns a zero if no rows are found that meet the conditions.\n\nIn other words, if the COUNTBLANK function finds no blanks, the result will be zero, but if there are no rows to check, the result will be blank.\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Aggregation functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/aggregation-functions-dax",
        "category-zh-cn": "聚合函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/aggregation-functions-dax",
        "description-zh-cn": "对列中的空白单元格数目进行计数。\n列是此函数的唯一参数。 可使用包含任何数据类型的列，但只对空白单元格计数。 不对值为零 (0) 的单元格计数，因为零是数值而非空白。\n\n如果没有要聚合的行，函数将返回空白。  但是，如果存在行，但没有一行符合指定的条件，函数则会返回 0。 如果找不到满足条件的行，Microsoft Excel 也会返回零。\n\n换言之，如果 COUNTBLANK 函数未找到任何空白，则结果将为零，但如果没有要检查的行，则结果将为空白。\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/countblank/"
    },
    "COUNTROWS": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/countrows-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/countrows-function-dax",
        "description-en-us": "The COUNTROWS function counts the number of rows in the specified table, or in a table defined by an expression.\nThis function can be used to count the number of rows in a base table, but more often is used to count the number of rows that result from filtering a table, or applying context to a table.\n\nWhenever there are no rows to aggregate, the function returns a blank.  However, if there are rows, but none of them meet the specified criteria, the function returns 0. Microsoft Excel also returns a zero if no rows are found that meet the conditions.\n\nTo learn more about best practices when using COUNT and COUNTROWS, see Use COUNTROWS instead of COUNT in DAX.\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Aggregation functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/aggregation-functions-dax",
        "category-zh-cn": "聚合函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/aggregation-functions-dax",
        "description-zh-cn": "COUNTROWS 函数对指定表或表达式定义的表中的行数目进行计数。\n此函数可用于计算基表中的行数，但更常用于计算通过筛选表或者将上下文应用于表而得出的行数。\n\n如果没有要聚合的行，函数将返回空白。  但是，如果存在行，但没有一行符合指定的条件，函数则会返回 0。 如果找不到满足条件的行，Microsoft Excel 也会返回零。\n\n若要详细了解使用 COUNT 和 COUNTROWS 时的最佳做法，请参阅使用 COUNTROWS 而不是 DAX 中的 COUNT。\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/countrows/"
    },
    "COUNTX": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/countx-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/countx-function-dax",
        "description-en-us": "Counts the number of rows that contain a non-blank value or an expression that evaluates to a non-blank value, when evaluating an expression over a table.\nThe COUNTX function takes two arguments. The first argument must always be a table, or any expression that returns a table. The second argument is the column or expression that is searched by COUNTX.\n\nThe COUNTX function counts only values, dates, or strings. If the function finds no rows to count, it returns a blank.\n\nIf you want to count logical values, use the COUNTAX function.\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Aggregation functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/aggregation-functions-dax",
        "category-zh-cn": "聚合函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/aggregation-functions-dax",
        "description-zh-cn": "在对表上的表达式求值时，对包含非空白值的行数或计算结果为非空白值的表达式进行计数。\nCOUNTX 函数采用两个参数。 第一个参数必须始终是表，或者是任何返回表的表达式。 第二个参数是 COUNTX 搜索的列或表达式。\n\nCOUNTX 函数仅对值、日期或字符串进行计数。 如果该函数未找到任何要计数的行，则返回空白。\n\n若要对逻辑值进行计数，请使用 COUNTAX 函数。\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/countx/"
    },
    "DISTINCTCOUNT": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/distinctcount-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/distinctcount-function-dax",
        "description-en-us": "Counts the number of distinct values in a column.\nThe only argument allowed to this function is a column. You can use columns containing any type of data. When the function finds no rows to count, it returns a BLANK, otherwise it returns the count of distinct values.\n\nDISTINCTCOUNT function counts the BLANK value. To skip the BLANK value, use the DISTINCTCOUNTNOBLANK function.\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Aggregation functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/aggregation-functions-dax",
        "category-zh-cn": "聚合函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/aggregation-functions-dax",
        "description-zh-cn": "对列中的非重复值数目进行计数。\n列是此函数的唯一参数。 可使用包含任何数据类型的列。 如果找不到要计数的行，函数将返回空白，否则返回非重复值计数。\n\nDISTINCTCOUNT 函数包括空白值。 要跳过空白值，请使用 DISTINCTCOUNTNOBLANK 函数。\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/distinctcount/"
    },
    "DISTINCTCOUNTNOBLANK": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/distinctcountnoblank-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/distinctcountnoblank-function-dax",
        "description-en-us": "Counts the number of distinct values in a column.\nUnlike DISTINCTCOUNT function, DISTINCTCOUNTNOBLANK does not count the BLANK value.\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Aggregation functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/aggregation-functions-dax",
        "category-zh-cn": "聚合函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/aggregation-functions-dax",
        "description-zh-cn": "对列中的非重复值数目进行计数。\n与 DISTINCTCOUNT 函数不同，DISTINCTCOUNTNOBLANK 不包含 BLANK 值。\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/distinctcountnoblank/"
    },
    "MAX": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/max-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/max-function-dax",
        "description-en-us": "Returns the largest value in a column, or between two scalar expressions.\nWhen comparing two expressions, blank is treated as 0 when comparing. That is, Max(1, Blank() ) returns 1, and Max( -1, Blank() ) returns 0. If both arguments are blank, MAX returns a blank. If either expression returns a value which is not allowed, MAX returns an error.\n\nTRUE/FALSE values are not supported. If you want to evaluate a column of TRUE/FALSE values, use the MAXA function.\n\n",
        "category-en-us": "Aggregation functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/aggregation-functions-dax",
        "category-zh-cn": "聚合函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/aggregation-functions-dax",
        "description-zh-cn": "返回列中或两个标量表达式之间的最大值。\n在比较两个表达式时，空白将视为 0。 也就是说，Max(1, Blank() ) 会返回 1，Max( -1, Blank() ) 会返回 0。 如果两个参数都为空，则 MAX 返回空白。 如果任一表达式返回不允许的值，MAX 将返回一个错误。\n\n不支持 TRUE/FALSE 值。 如果要计算 TRUE/FALSE 值列，请使用 MAXA 函数。\n\n",
        "url-dax-guide": "https://dax.guide/max/"
    },
    "MAXA": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/maxa-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/maxa-function-dax",
        "description-en-us": "Returns the largest value in a column.\nThe MAXA function takes as argument a column, and looks for the largest value among the following types of values:\n\nNumbers\nDates\n\n\nLogical values, such as TRUE and FALSE. Rows that evaluate to TRUE count as 1; rows that evaluate to FALSE count as 0 (zero).\n\nEmpty cells are ignored. If the column contains no values that can be used, MAXA returns 0 (zero).\n\nIf you want to compare text values, use the MAX function.\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Aggregation functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/aggregation-functions-dax",
        "category-zh-cn": "聚合函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/aggregation-functions-dax",
        "description-zh-cn": "返回列中的最大值。\nMAXA 函数将列作为参数，并查找以下类型的值中的最大值：\n\n数字\n日期\n\n\n逻辑值，例如 TRUE 和 FALSE。 计算结果为 TRUE 的行计为 1；计算结果为 FALSE 的行计为 0（零）。\n\n空单元格会被忽略。 如果列中包含的值均不可用，MAXA 则将返回 0（零）。\n\n如果要比较文本值，请使用 MAX 函数。\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/maxa/"
    },
    "MAXX": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/maxx-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/maxx-function-dax",
        "description-en-us": "Evaluates an expression for each row of a table and returns the largest value.\nThe table argument to the MAXX function can be a table name, or an expression that evaluates to a table. The second argument indicates the expression to be evaluated for each row of the table.\n\nOf the values to evaluate, only the following are counted:\n\nNumbers\nTexts\nDates\n\n\nBlank values are skipped. TRUE/FALSE values are not supported.\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Aggregation functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/aggregation-functions-dax",
        "category-zh-cn": "聚合函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/aggregation-functions-dax",
        "description-zh-cn": "为表的每一行计算表达式，并返回最大值。\nMAXX 函数的表参数可以是表名称，也可以是以表为计算结果的表达式  。 第二个参数指示要为表的每一行计算的表达式。\n\n在要计算的值中，只计算以下值：\n\n数字\n文本\n日期\n\n\n将跳过空白值。 不支持 TRUE/FALSE 值。\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/maxx/"
    },
    "MIN": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/min-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/min-function-dax",
        "description-en-us": "Returns the smallest value in a column, or between two scalar expressions.\nThe MIN function takes a column or two expressions as an argument, and returns the smallest value. The following types of values in the columns are counted:\n\nNumbers\nTexts\nDates\nBlanks\n\n\nWhen comparing expressions, blank is treated as 0 when comparing. That is, Min(1,Blank() ) returns 0, and Min( -1, Blank() ) returns -1. If both arguments are blank, MIN returns a blank. If either expression returns a value which is not allowed, MIN returns an error.\n\nTRUE/FALSE values are not supported. If you want to evaluate a column of TRUE/FALSE values, use the MINA function.\n\n",
        "category-en-us": "Aggregation functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/aggregation-functions-dax",
        "category-zh-cn": "聚合函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/aggregation-functions-dax",
        "description-zh-cn": "返回列中或两个标量表达式之间的最小值。\nMIN 函数采用一个列或两个表达式作为参数，并返回最小值。 计算列中下列类型的值：\n\n数字\n文本\n日期\n空白\n\n\n比较表达式时，将空白视为 0。 也就是说，Min(1,Blank() ) 返回 0，Min( -1, Blank() ) 返回 -1。 如果两个参数都为空，则 MIN 返回空白。 如果任一表达式返回不允许的值，MIN 将返回一个错误。\n\n不支持 TRUE/FALSE 值。 如果要计算一列 TRUE/FALSE 值，请使用 MINA 函数。\n\n",
        "url-dax-guide": "https://dax.guide/min/"
    },
    "MINA": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/mina-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/mina-function-dax",
        "description-en-us": "Returns the smallest value in a column.\nThe MINA function takes as argument a column that contains numbers, and determines the smallest value as follows:\n\nIf the column contains no values, MINA returns 0 (zero).\nRows in the column that evaluates to logical values, such as TRUE and FALSE are treated as 1 if TRUE and 0 (zero) if FALSE.\nEmpty cells are ignored.\n\n\nIf you want to compare text values, use the MIN function.\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Aggregation functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/aggregation-functions-dax",
        "category-zh-cn": "聚合函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/aggregation-functions-dax",
        "description-zh-cn": "返回列中的最小值。\nMINA 函数将包含数字的列作为参数，并确定最小值，如下所示：\n\n如果此列不包含任何值，MINA 将返回 0（零）。\n在计算结果为逻辑值（例如 TRUE 和 FALSE）的列中，如果结果为 TRUE，该行则被视为 1，如果结果为 FALSE，则被视为 0（零）。\n空单元格会被忽略。\n\n\n如果要比较文本值，请使用 MIN 函数。\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/mina/"
    },
    "MINX": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/minx-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/minx-function-dax",
        "description-en-us": "Returns the smallest value that results from evaluating an expression for each row of a table.\nThe MINX function takes as its first argument a table, or an expression that returns a table. The second argument contains the expression that is evaluated for each row of the table.\n\nBlank values are skipped. TRUE/FALSE values are not supported.\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Aggregation functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/aggregation-functions-dax",
        "category-zh-cn": "聚合函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/aggregation-functions-dax",
        "description-zh-cn": "返回对表中每一行的表达式进行计算而得出的结果的最小值。\nMINX 函数将表或返回表的表达式作为其第一个参数。 第二个参数包含对表的每一行进行计算的表达式。\n\n将跳过空白值。 不支持 TRUE/FALSE 值。\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/minx/"
    },
    "PRODUCT": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/product-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/product-function-dax",
        "description-en-us": "Returns the product of the numbers in a column.\nTo return the product of an expression evaluated for each row in a table, use PRODUCTX function.\n\nOnly the numbers in the column are counted. Blanks, logical values, and text are ignored. For example,\nPRODUCT( Table[Column] ) is equivalent to PRODUCTX( Table, Table[Column] ).\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Aggregation functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/aggregation-functions-dax",
        "category-zh-cn": "聚合函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/aggregation-functions-dax",
        "description-zh-cn": "返回列中的数的乘积。\n要返回为表中的每一行计算的表达式的乘积，请使用 PRODUCTX 函数。\n\n仅对列中的数字进行计数。 空白、逻辑值和文本会被忽略。 例如，应用于对象的\nPRODUCT( Table[Column] ) 等效于 PRODUCTX( Table, Table[Column] )。\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/product/"
    },
    "PRODUCTX": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/productx-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/productx-function-dax",
        "description-en-us": "Returns the product of an expression evaluated for each row in a table.\nTo return the product of the numbers in a column, use PRODUCT.\n\nThe PRODUCTX function takes as its first argument a table, or an expression that returns a table. The second argument is a column that contains the numbers for which you want to compute the product, or an expression that evaluates to a column.\n\nOnly the numbers in the column are counted. Blanks, logical values, and text are ignored.\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Aggregation functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/aggregation-functions-dax",
        "category-zh-cn": "聚合函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/aggregation-functions-dax",
        "description-zh-cn": "返回为表中的每一行计算的表达式的积。\n要返回列中数字的乘积，请使用 PRODUCT。\n\nPRODUCTX 函数将表或返回表的表达式作为其第一个参数。 第二个参数是包含要计算积的数字的列，或计算结果为列的表达式。\n\n仅对列中的数字进行计数。 空白、逻辑值和文本会被忽略。\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/productx/"
    },
    "SUM": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/sum-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/sum-function-dax",
        "description-en-us": "Adds all the numbers in a column.",
        "category-en-us": "Aggregation functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/aggregation-functions-dax",
        "category-zh-cn": "聚合函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/aggregation-functions-dax",
        "description-zh-cn": "对某个列中的所有数值求和。",
        "url-dax-guide": "https://dax.guide/sum/"
    },
    "SUMX": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/sumx-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/sumx-function-dax",
        "description-en-us": "Returns the sum of an expression evaluated for each row in a table.\nThe SUMX function takes as its first argument a table, or an expression that returns a table. The second argument is a column that contains the numbers you want to sum, or an expression that evaluates to a column.\n\nOnly the numbers in the column are counted. Blanks, logical values, and text are ignored.\n\nFor more complex examples of SUMX in formulas, see ALL and CALCULATETABLE.\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Aggregation functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/aggregation-functions-dax",
        "category-zh-cn": "聚合函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/aggregation-functions-dax",
        "description-zh-cn": "返回为表中的每一行计算的表达式的和。\nSUMX 函数将表或返回表的表达式作为其第一个参数。 第二个参数是包含要计算总和的数字的列，或计算结果为列的表达式。\n\n仅对列中的数字进行计数。 空白、逻辑值和文本会被忽略。\n\n若要查看公式中 SUMX 的一些更复杂示例，请参阅 ALL 和 CALCULATETABLE。\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/sumx/"
    },
    "CALENDAR": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/calendar-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/calendar-function-dax",
        "description-en-us": "Returns a table with a single column named \"Date\" that contains a contiguous set of dates. The range of dates is from the specified start date to the specified end date, inclusive of those two dates.\nAn error is returned if start_date is greater than end_date.\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Date and time functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/date-and-time-functions-dax",
        "category-zh-cn": "日期和时间函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/date-and-time-functions-dax",
        "description-zh-cn": "返回一个表，其中有一个包含一组连续日期的名为“Date”的列。 日期范围从指定的开始日期到指定的结束日期（这两个日期包含在内）。\n如果 start_date 大于 end_date，则返回错误。\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/calendar/"
    },
    "CALENDARAUTO": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/calendarauto-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/calendarauto-function-dax",
        "description-en-us": "Returns a table with a single column named \"Date\" that contains a contiguous set of dates. The range of dates is calculated automatically based on data in the model.\nThe date range is calculated as follows:\n\nThe earliest date in the model which is not in a calculated column or calculated table is taken as the MinDate.\nThe latest date in the model which is not in a calculated column or calculated table is taken as the MaxDate.\nThe date range returned is dates between the beginning of the fiscal year associated with MinDate and the end of the fiscal year associated with MaxDate.\n\n\nAn error is returned if the model does not contain any datetime values which are not in calculated columns or calculated tables.\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Date and time functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/date-and-time-functions-dax",
        "category-zh-cn": "日期和时间函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/date-and-time-functions-dax",
        "description-zh-cn": "返回一个表，其中有一个包含一组连续日期的名为“Date”的列。 日期范围基于模型中的数据自动计算。\n日期范围的计算方式如下：\n\n模型中不在计算列或计算表中的最早日期被视为 MinDate。\n模型中不在计算列或计算表中的最新日期被视为 MaxDate。\n返回的日期范围是与 MinDate 关联的财政年度第一天和与 MaxDate 关联的财政年度最后一天之间的日期。\n\n\n如果该模型不包含任何不在计算列或计算表中的日期时间值，则会返回错误。\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/calendarauto/"
    },
    "DATE": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/date-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/date-function-dax",
        "description-en-us": "Returns the specified date in datetime format.\nThe DATE function takes the integers that are input as arguments, and generates the corresponding date. The DATE function is most useful in situations where the year, month, and day are supplied by formulas. For example, the underlying data might contain dates in a format that is not recognized as a date, such as YYYYMMDD. You can use the DATE function in conjunction with other functions to convert the dates to a number that can be recognized as a date.\n\nIn contrast to Microsoft Excel, which stores dates as a serial number, DAX date functions always return a datetime data type. However, you can use formatting to display dates as serial numbers if you want.\n\nDate and datetime can also be specified as a literal in the format dt\"YYYY-MM-DD\", dt\"YYYY-MM-DDThh:mm:ss\", or dt\"YYYY-MM-DD hh:mm:ss\". When specified as a literal, using the DATE function in the expression is not necessary. To learn more, see DAX Syntax | Date and time.\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Date and time functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/date-and-time-functions-dax",
        "category-zh-cn": "日期和时间函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/date-and-time-functions-dax",
        "description-zh-cn": "以日期/时间格式返回指定的日期  。\nDATE 函数将输入的整数作为参数，并生成相应的日期。 在公式提供年、月、日的情况下，DATE 函数最为有用。 例如，基础数据可能包含格式不能识别为日期的日期，如 YYYYMMDD。 可以将 DATE 函数与其他函数一起使用，将日期转换为可识别为日期的数字。\n\n与 Microsoft Excel（将日期存储为序列号）不同，DAX 日期函数始终返回“日期时间”数据类型。 但是，如果需要，可以使用格式将日期显示为序列号。\n\n还可以将日期和日期/时间指定为 dt\"YYYY-MM-DD\"、dt\"YYYY-MM-DDThh:mm:ss\" 或 dt\"YYYY-MM-DD hh:mm:ss\" 格式的文本。 如果指定为文本，则不需要在表达式中使用 DATE 函数。 有关详细信息，请参阅 DAX 语法 | 日期和时间。\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/date/"
    },
    "DATEDIFF": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/datediff-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/datediff-function-dax",
        "description-en-us": "Returns the number of interval boundaries between two dates.",
        "category-en-us": "Date and time functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/date-and-time-functions-dax",
        "category-zh-cn": "日期和时间函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/date-and-time-functions-dax",
        "description-zh-cn": "返回两个日期之间的间隔边界的计数。",
        "url-dax-guide": "https://dax.guide/datediff/"
    },
    "DATEVALUE": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/datevalue-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/datevalue-function-dax",
        "description-en-us": "Converts a date in text format to a date in datetime format.\nWhen converting, DATEVALUE uses the locale and date/time settings of the model to determine a date value. If the model date/time settings represent dates in the format of Month/Day/Year, then the string, \"1/8/2009\", is converted to a datetime value equivalent to January 8th of 2009. However, if the model date/time settings represent dates in the format of Day/Month/Year, the same string is converted as a datetime value equivalent to August 1st of 2009.\n\nIf conversion using the locale and date/time settings of the model fails, DATEVALUE will attempt to use other date formats. In this case, some rows may be converted using one format and other rows are converted using a different format. For example, \"5/4/2018\" may convert to May 4th of 2018, and \"20/4/2018\" may convert to April 20th.\n\nIf the year portion of the date_text argument is omitted, the DATEVALUE function uses the current year from your computer's built-in clock. Time information in the date_text argument is ignored.\n\nModel locale and data/time settings are initially determined by the application and computer when the model is created.\n\nDate and datetime can also be specified as a literal in the format dt\"YYYY-MM-DD\", dt\"YYYY-MM-DDThh:mm:ss\", or dt\"YYYY-MM-DD hh:mm:ss\". When specified as a literal, using the DATEVALUE function in the expression is not necessary. To learn more, see DAX Syntax | Date and time.\n\n",
        "category-en-us": "Date and time functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/date-and-time-functions-dax",
        "category-zh-cn": "日期和时间函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/date-and-time-functions-dax",
        "description-zh-cn": "将文本格式的日期转换为日期/时间格式的日期。\n执行转换时，DATEVALUE 使用模型的区域设置和日期/时间设置来确定日期值。 如果模型的日期/时间设置以月/日/年格式表示日期，则字符串“1/8/2009”被转换为等效于 2009 年 1 月 8 日的“datetime”值。 然而，如果模型的日期/时间设置以日/月/年的格式表示日期，那么同一字符串将被转换为等效于 2009 年 8 月 1 日的“datetime”值。\n\n如果使用模型的区域设置和日期/时间设置执行的转换失败，DATEVALUE 将尝试使用其他日期格式。 在这种情况下，可能会使用其中一种格式转换一部分行，并使用另一种格式转换其他行。 例如，“5/4/2018”可能转换为 2018 年 5 月 4 日，“20/4/2018”可能转换为 4 月 20 日。\n\n如果省略了 date_text 参数的年份部分，DATEVALUE 函数则将使用计算机内置时钟的当前年份。 date_text 参数中的时间信息将被忽略。\n\n模型的区域设置和日期/时间设置最初由应用程序和计算机在创建模型时确定。\n\n还可以将日期和日期/时间指定为 dt\"YYYY-MM-DD\"、dt\"YYYY-MM-DDThh:mm:ss\" 或 dt\"YYYY-MM-DD hh:mm:ss\" 格式的文本。 如果指定为文本，则不需要在表达式中使用 DATEVALUE 函数。 有关详细信息，请参阅 DAX 语法 | 日期和时间。\n\n",
        "url-dax-guide": "https://dax.guide/datevalue/"
    },
    "DAY": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/day-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/day-function-dax",
        "description-en-us": "Returns the day of the month, a number from 1 to 31.\nThe DAY function takes as an argument the date of the day you are trying to find. Dates can be provided to the function by using another date function, by using an expression that returns a date, or by typing a date in a datetime format. You can also type a date in one of the accepted string formats for dates.\n\nValues returned by the YEAR, MONTH and DAY functions will be Gregorian values regardless of the display format for the supplied date value. For example, if the display format of the supplied date is Hijri, the returned values for the YEAR, MONTH and DAY functions will be values associated with the equivalent Gregorian date.\n\nWhen the date argument is a text representation of the date, the day function uses the locale and date/time settings of the client computer to understand the text value in order to perform the conversion. If the current date/time settings represent dates in the format of Month/Day/Year, then the string, \"1/8/2009\", is interpreted as a datetime value equivalent to January 8th of 2009, and the function returns 8. However, if the current date/time settings represent dates in the format of Day/Month/Year, the same string would be interpreted as a datetime value equivalent to August 1st of 2009, and the function returns 1.\n\n",
        "category-en-us": "Date and time functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/date-and-time-functions-dax",
        "category-zh-cn": "日期和时间函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/date-and-time-functions-dax",
        "description-zh-cn": "返回一月中的日期，1 到 31 之间的数字。\nDAY 函数将你要查找的日期作为参数。 可以通过使用另一个日期函数、使用返回日期的表达式或以 datetime 格式键入日期来向该函数提供日期  。 也可以使用一种可接受的日期字符串格式输入日期。\n\n无论提供的日期值的显示格式如何，YEAR、MONTH 和 DAY 函数都返回公历日期值。 例如，如果提供的日期的显示格式为回历，则 YEAR、MONTH 和 DAY 函数的返回值将是与相应公历日期关联的值。\n\ndate 参数是日期的文本表示形式时，该 day 函数使用客户端计算机的区域设置和日期/时间设置来理解文本值以执行转换。 如果当前日期/时间设置以月/日/年格式表示日期，则字符串“1/8/2009”将解释为等于 2009 年 1 月 8 日的 datetime 值，并且该函数返回 8  。 但是，如果当前日期/时间设置以日/月/年的格式表示日期，那么同一字符串将被解释为等于 2009 年 8 月 1 日的 datetime 值，并且该函数返回 1  。\n\n",
        "url-dax-guide": "https://dax.guide/day/"
    },
    "EDATE": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/edate-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/edate-function-dax",
        "description-en-us": "Returns the date that is the indicated number of months before or after the start date. Use EDATE to calculate maturity dates or due dates that fall on the same day of the month as the date of issue.\nIn contrast to Microsoft Excel, which stores dates as sequential serial numbers, DAX works with dates in a datetime format. Dates stored in other formats are converted implicitly.\n\nIf start_date is not a valid date, EDATE returns an error. Make sure that the column reference or date that you supply as the first argument is a date.\n\nIf months is not an integer, it is truncated.\n\nWhen the date argument is a text representation of the date, the EDATE function uses the locale and date time settings of the client computer to understand the text value in order to perform the conversion. If the current date time settings represent a date in the format of Month/Day/Year, then the following string \"1/8/2009\" is interpreted as a datetime value equivalent to January 8th of 2009. However, if the current date time settings represent a date in the format of Day/Month/Year, the same string would be interpreted as a datetime value equivalent to August 1st of 2009.\n\nIf the requested date is past the last day of the corresponding month, then the last day of the month is returned. For example, the following functions: EDATE(\"2009-01-29\", 1), EDATE(\"2009-01-30\", 1), EDATE(\"2009-01-31\", 1) return February 28th of 2009; that corresponds to one month after the start date.\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Date and time functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/date-and-time-functions-dax",
        "category-zh-cn": "日期和时间函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/date-and-time-functions-dax",
        "description-zh-cn": "返回在开始日期之前或之后指定月份数的日期。 使用 EDATE 来计算与发行日期在当月的同一天的到期日期或截止日期。\n与将日期存储为序列号的 Microsoft Excel 相比，DAX 使用日期/时间格式处理日期  。 以其他格式存储的日期将被隐式转换。\n\n如果 start_date 不是有效日期，EDATE 返回错误。 确保作为第一个参数提供的列引用或日期是一个日期。\n\n如果 months 不为整数，则截断该值。\n\n日期参数是日期的文本表示形式时，EDATE 函数使用客户端计算机的区域设置和日期时间设置来理解文本值以执行转换。 如果当前日期时间设置以“月/日/年”格式表示日期，则以下字符串“1/8/2009”将被解释为等于 2009 年 1 月 8 日的日期/时间值。 但是，如果当前日期/时间设置以“日/月/年”格式表示日期，那么同一字符串将被解释为等效于 2009 年 8 月 1 日的日期/时间值。\n\n如果请求的日期超过了相应月份的最后一天，则返回该月的最后一天。 例如，以下函数 EDATE(\"2009-01-29\", 1)、EDATE(\"2009-01-30\", 1)、EDATE(\"2009-01-31\", 1) 返回 2009 年 2 月 28 日，它对应于开始日期之后的一个月。\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/edate/"
    },
    "EOMONTH": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/eomonth-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/eomonth-function-dax",
        "description-en-us": "Returns the date in datetime format of the last day of the month, before or after a specified number of months. Use EOMONTH to calculate maturity dates or due dates that fall on the last day of the month.\nIn contrast to Microsoft Excel, which stores dates as sequential serial numbers, DAX works with dates in a datetime format. The EOMONTH function can accept dates in other formats, with the following restrictions:\n\nIf start_date is not a valid date, EOMONTH returns an error.\n\nIf start_date is a numeric value that is not in a datetime format, EOMONTH will convert the number to a date. To avoid unexpected results, convert the number to a datetime format before using the EOMONTH function.\n\nIf start_date plus months yields an invalid date, EOMONTH returns an error. Dates before March 1st of 1900 and after December 31st of 9999 are invalid.\n\nWhen the date argument is a text representation of the date, the EDATE function uses the locale and date time settings, of the client computer, to understand the text value in order to perform the conversion. If current date time settings represent a date in the format of Month/Day/Year, then the following string \"1/8/2009\" is interpreted as a datetime value equivalent to January 8th of 2009. However, if the current date time settings represent a date in the format of Day/Month/Year, the same string would be interpreted as a datetime value equivalent to August 1st of 2009.\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Date and time functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/date-and-time-functions-dax",
        "category-zh-cn": "日期和时间函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/date-and-time-functions-dax",
        "description-zh-cn": "以日期/时间格式返回指定月份数之前或之后的月份的最后一天的日期  。 使用 EOMONTH 来计算适逢当月最后一天的到期日期或截止日期。\n与将日期存储为序列号的 Microsoft Excel 相比，DAX 使用日期/时间格式处理日期  。 EOMONTH 函数可以接受其他格式的日期，但存在以下限制：\n\n如果 start_date 不是有效日期，EOMONTH 将返回错误  。\n\n如果 start_date 是非日期/时间格式的数字值，EOMONTH 会将该数字转换为一个日期   。 为避免出现意外的结果，请在使用 EOMONTH 函数之前将数字转换为日期/时间格式  。\n\n如果 start_date 加上月份数得出的是无效日期，EOMONTH 将返回错误  。 1900 年 3 月 1 日之前和 9999 年 12 月 31 日之后的日期无效。\n\n当日期参数是日期的文本表示形式时，EDATE 函数将使用客户端计算机的区域设置和日期时间设置来理解文本值，以便执行转换。 如果当前日期/时间设置以“月/日/年”格式表示日期，则以下字符串“1/8/2009”将被解释为等效于 2009 年 1 月 8 日的日期/时间值。 但是，如果当前日期/时间设置以“日/月/年”格式表示日期，那么同一字符串将被解释为等效于 2009 年 8 月 1 日的日期/时间值。\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/eomonth/"
    },
    "HOUR": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/hour-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/hour-function-dax",
        "description-en-us": "Returns the hour as a number from 0 (12:00 A.M.) to 23 (11:00 P.M.).\nThe HOUR function takes as argument the time that contains the hour you want to find. You can supply the time by using a date/time function, an expression that returns a datetime, or by typing the value directly in one of the accepted time formats. Times can also be entered as any accepted text representation of a time.\n\nWhen the datetime argument is a text representation of the date and time, the function uses the locale and date/time settings of the client computer to understand the text value in order to perform the conversion. Most locales use the colon (:) as the time separator and any input text using colons as time separators will parse correctly. Review your locale settings to understand your results.\n\n",
        "category-en-us": "Date and time functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/date-and-time-functions-dax",
        "category-zh-cn": "日期和时间函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/date-and-time-functions-dax",
        "description-zh-cn": "以数字形式返回小时值，0 (12:00 A.M.) 到 23 (11:00 P.M.) 之间的数字。\nHOUR 函数采用包含要查找的小时的时间作为参数。 可以通过使用日期/时间函数（可返回“日期时间”的表达式）或以接受的时间格式之一直接键入值来提供时间  。 “时间”中可输入某个时间的任何可接受的文本表示形式。\n\n当 datetime 参数是日期和时间的文本表示形式时，此函数使用客户端计算机的区域设置和日期/时间设置来理解文本值以执行转换  。 大多数区域设置使用冒号 (:) 作为时间分隔符，使用冒号作为时间分隔符的任何输入文本都将正确解析。 查看你的区域设置以了解结果。\n\n",
        "url-dax-guide": "https://dax.guide/hour/"
    },
    "MINUTE": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/minute-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/minute-function-dax",
        "description-en-us": "Returns the minute as a number from 0 to 59, given a date and time value.\nIn contrast to Microsoft Excel, which stores dates and times in a serial numeric format, DAX uses a datetime data type for dates and times. You can provide the datetime value to the MINUTE function by referencing a column that stores dates and times, by using a date/time function, or by using an expression that returns a date and time.\n\nWhen the datetime argument is a text representation of the date and time, the function uses the locale and date/time settings of the client computer to understand the text value in order to perform the conversion. Most locales use the colon (:) as the time separator and any input text using colons as time separators will parse correctly. Verify your locale settings to understand your results.\n\n",
        "category-en-us": "Date and time functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/date-and-time-functions-dax",
        "category-zh-cn": "日期和时间函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/date-and-time-functions-dax",
        "description-zh-cn": "给定日期和时间值，以数字形式返回分钟值，0 到 59 之间的数字。\n与将日期和时间存储为序列数字格式的 Microsoft Excel 相比，DAX 使用 datetime 数据类型作为日期和时间  。 可以通过引用存储日期和时间的列、使用日期/时间函数或使用返回日期和时间的表达式来为 MINUTE 函数提供 datetime 值  。\n\n当 datetime 参数是日期和时间的文本表示形式时，此函数使用客户端计算机的区域设置和日期/时间设置来理解文本值以执行转换  。 大多数区域设置使用冒号 (:) 作为时间分隔符，使用冒号作为时间分隔符的任何输入文本都将正确解析。 查看你的区域设置以了解结果。\n\n",
        "url-dax-guide": "https://dax.guide/minute/"
    },
    "MONTH": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/month-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/month-function-dax",
        "description-en-us": "Returns the month as a number from 1 (January) to 12 (December).\nIn contrast to Microsoft Excel, which stores dates as serial numbers, DAX uses a datetime format when working with dates. You can enter the date used as argument to the MONTH function by typing an accepted datetime format, by providing a reference to a column that contains dates, or by using an expression that returns a date.\n\nValues returned by the YEAR, MONTH and DAY functions will be Gregorian values regardless of the display format for the supplied date value. For example, if the display format of the supplied date is Hijri, the returned values for the YEAR, MONTH and DAY functions will be values associated with the equivalent Gregorian date.\n\nWhen the date argument is a text representation of the date, the function uses the locale and date time settings of the client computer to understand the text value in order to perform the conversion. If the current date time settings represent a date in the format of Month/Day/Year, then the following string \"1/8/2009\" is interpreted as a datetime value equivalent to January 8th of 2009, and the function yields a result of 1. However, if the current date time settings represent a date in the format of Day/Month/Year, then the same string would be interpreted as a datetime value equivalent to August 1st of 2009, and the function yields a result of 8.\n\nIf the text representation of the date cannot be correctly converted to a datetime value, the function returns an error.\n\n",
        "category-en-us": "Date and time functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/date-and-time-functions-dax",
        "category-zh-cn": "日期和时间函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/date-and-time-functions-dax",
        "description-zh-cn": "以数字形式返回月份值，1（一月）到 12（十二月）之间的数字。\n与将日期存储为序列号的 Microsoft Excel 相比，DAX 处理日期时使用的是 datetime 格式  。 通过键入可接受的 datetime 格式、通过提供对包含日期的列的引用，或通过使用返回日期的表达式，可以输入用作 MONTH 函数参数的日期  。\n\n无论提供的日期值的显示格式如何，YEAR、MONTH 和 DAY 函数都返回公历日期值。 例如，如果提供的日期的显示格式为回历，则 YEAR、MONTH 和 DAY 函数的返回值将是与相应公历日期关联的值。\n\n当日期参数是日期的文本表示形式时，此函数将使用客户端计算机的区域设置和日期时间设置来理解文本值，以便执行转换。 如果当前日期/时间设置以 Month/Day/Year 格式表示日期，则以下字符串“1/8/2009”将被解释为等于 2009 年 1 月 8 日的日期/时间值，并且此函数会产生结果 1。 但是，如果当前日期/时间设置以“日/月/年”的格式表示日期，那么同一字符串将被解释为等效于 2009 年 8 月 1 日的日期/时间值，并且此函数会产生结果 8。\n\n如果日期的文本表示形式不能被正确转换为日期/时间值，此函数则返回错误。\n\n",
        "url-dax-guide": "https://dax.guide/month/"
    },
    "NETWORKDAYS": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/networkdays-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/networkdays-dax",
        "description-en-us": "Returns the number of whole workdays between two dates (inclusive). Parameters specify which and how many days are weekend days. Weekend days and days specified as holidays are not considered as workdays.\nThis DAX function is similar to Excel NETWORKDAYS.INTL and NETWORKDAYS functions.\n\nIf start_date and end_date both are BLANK, the output value is also BLANK.\n\nIf either start_date or end_date is BLANK, the BLANK start_date or end_date will be treated as Date(1899, 12, 30).\n\nDates must be specified by using DATE function or as the result of another expression. For example, DATE ( 2022, 5, 30 ), specifies May 30th, 2022. Dates can also be specified as a literal in format, (dt”2022-05-30”). Do not specify dates as text.\n\n",
        "category-en-us": "Date and time functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/date-and-time-functions-dax",
        "category-zh-cn": "日期和时间函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/date-and-time-functions-dax",
        "description-zh-cn": "返回两个日期（含）之间的整个工作日数。 参数指定周末及其天数。 周末和节假日不被视为工作日。\n此 DAX 函数类似于 Excel NETWORKDAYS.INTL 和 NETWORKDAYS 函数。\n\n如果 start_date 和 end_date 均为 BLANK，则输出值也为 BLANK。\n\n如果 start_date 或 end_date 为 BLANK，则 BLANK start_date 或 end_date 将被视为 Date(1899, 12, 30)。\n\n必须使用 DATE 函数或另一个表达式的结果来指定日期。 例如，DATE ( 2022, 5, 30 ) 指定 2022 年 5 月 30 日。 日期也可以指定为 (dt”2022-05-30”) 格式的文本。 请勿将日期指定为文本。\n\n",
        "url-dax-guide": "https://dax.guide/networkdays/"
    },
    "NOW": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/now-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/now-function-dax",
        "description-en-us": "Returns the current date and time in datetime format.\nThe result of the NOW function changes only when the column that contains the formula is refreshed. It is not updated continuously.\n\nIn the Power BI Service, the result of the NOW function is always in the UTC timezone.\n\nThe TODAY function returns the same date but is not precise with regard to time; the time returned is always 12:00:00 AM and only the date is updated.\n\n",
        "category-en-us": "Date and time functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/date-and-time-functions-dax",
        "category-zh-cn": "日期和时间函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/date-and-time-functions-dax",
        "description-zh-cn": "以日期/时间格式返回当前日期和时间  。\n只有刷新包含公式的列后，NOW 函数的结果才会更改。 它不会连续更新。\n\n在 Power BI 服务中，NOW 函数的结果始终采用 UTC 时区表示。\n\nTODAY 函数返回相同的日期，但时间不精确；返回的时间始终是 12:00:00 AM，仅更新日期。\n\n",
        "url-dax-guide": "https://dax.guide/now/"
    },
    "QUARTER": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/quarter-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/quarter-function-dax",
        "description-en-us": "Returns the quarter as a number from 1 (January – March) to 4 (October – December).",
        "category-en-us": "Date and time functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/date-and-time-functions-dax",
        "category-zh-cn": "日期和时间函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/date-and-time-functions-dax",
        "description-zh-cn": "将季度返回为从 1（一月 - 三月）到 4（十月 - 十二月）之间的数值。",
        "url-dax-guide": "https://dax.guide/quarter/"
    },
    "SECOND": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/second-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/second-function-dax",
        "description-en-us": "Returns the seconds of a time value, as a number from 0 to 59.\nIn contrast to Microsoft Excel, which stores dates and times as serial numbers, DAX uses a datetime format when working with dates and times. If the source data is not in this format, DAX implicitly converts the data. You can use formatting to display the dates and times as a serial number of you need to.\n\nThe date/time value that you supply as an argument to the SECOND function can be entered as a text string within quotation marks (for example, \"6:45 PM\"). You can also provide a time value as the result of another expression, or as a reference to a column that contains times.\n\nIf you provide a numeric value of another data type, such as 13.60, the value is interpreted as a serial number and is represented as a datetime data type before extracting the value for seconds. To make it easier to understand your results, you might want to represent such numbers as dates before using them in the SECOND function. For example, if you use SECOND with a column that contains a numeric value such as, 25.56, the formula returns 24. That is because, when formatted as a date, the value 25.56 is equivalent to January 25, 1900, 1:26:24 PM.\n\nWhen the time argument is a text representation of a date and time, the function uses the locale and date/time settings of the client computer to understand the text value in order to perform the conversion. Most locales use the colon (:) as the time separator and any input text using colons as time separators will parse correctly. Review your locale settings to understand your results.\n\n",
        "category-en-us": "Date and time functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/date-and-time-functions-dax",
        "category-zh-cn": "日期和时间函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/date-and-time-functions-dax",
        "description-zh-cn": "以数字形式返回时间值的秒数，0 到 59 之间的数字。\n与将日期和时间存储为序列号的 Microsoft Excel 相比，DAX 处理日期和时间时使用的是“日期/时间”格式。 如果源数据未采用此格式，DAX 则会隐式转换此数据。 可以使用格式设置将日期和时间显示为所需的序列号。\n\n可以采用位于引号内的文本字符串形式来输入作为 SECOND 函数的参数提供的日期/时间值（例如 \"6:45 PM\"）。 还可以将时间值作为其他表达式的结果提供，或者作为对包含时间的列的引用提供。\n\n如果提供另一种数据类型的数值，例如 13.60，那么在提取秒的值之前，此值则会被解释为序列号，并表示为日期/时间数据类型。 为了便于理解结果，你可能需要将此类数字以日期的形式表示，然后再在 SECOND 函数中使用。 例如，如果将 SECOND 用于包含数字值（例如 25.56）的列，此公式则返回 24。 这是因为在设置为日期格式时，25.56 值等效于 1900 年 1 月 25 日下午 1:26:24。\n\n当 time 参数是日期和时间的文本表示形式时，此函数使用客户端计算机的区域设置和日期/时间设置来理解文本值以执行转换。 大多数区域设置使用冒号 (:) 作为时间分隔符，使用冒号作为时间分隔符的任何输入文本都将正确解析。 查看你的区域设置以了解结果。\n\n",
        "url-dax-guide": "https://dax.guide/second/"
    },
    "TIME": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/time-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/time-function-dax",
        "description-en-us": "Converts hours, minutes, and seconds given as numbers to a time in datetime format.\nIn contrast to Microsoft Excel, which stores dates and times as serial numbers, DAX works with date and time values in a datetime format. Numbers in other formats are implicitly converted when you use a date/time value in a DAX function. If you need to use serial numbers, you can use formatting to change the way that the numbers are displayed.\n\nTime values are a portion of a date value, and in the serial number system are represented by a decimal number. Therefore, the datetime value 12:00 PM is equivalent to 0.5, because it is half of a day.\n\nYou can supply the arguments to the TIME function as values that you type directly, as the result of another expression, or by a reference to a column that contains a numeric value.\n\nDate and datetime can also be specified as a literal in the format dt\"YYYY-MM-DD\", dt\"YYYY-MM-DDThh:mm:ss\", or dt\"YYYY-MM-DD hh:mm:ss\". When specified as a literal, using the TIME function in the expression is not necessary. To learn more, see DAX Syntax | Date and time.\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Date and time functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/date-and-time-functions-dax",
        "category-zh-cn": "日期和时间函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/date-and-time-functions-dax",
        "description-zh-cn": "将以数值形式给定的小时、分钟和秒值转换为日期/时间格式的时间  。\n与将日期和时间存储为序列号的 Microsoft Excel 相比，DAX 使用“datetime”格式处理日期和时间值  。 在 DAX 函数中使用日期/时间值时，会隐式转换其他格式的数字。 如果需要使用序列号，可以使用格式来更改数字的显示方式。\n\n时间值是日期值的一部分，在序列号系统中用十进制数字表示。 因此，“日期时间”值 12:00 PM 相当于 0.5，因为它是一天的中点  。\n\nTIME 函数的参数可以是直接键入的值、另一个表达式的结果或对包含数值的列的引用。\n\n还可以将日期和日期/时间指定为 dt\"YYYY-MM-DD\"、dt\"YYYY-MM-DDThh:mm:ss\" 或 dt\"YYYY-MM-DD hh:mm:ss\" 格式的文本。 如果指定为文本，则不需要在表达式中使用 TIME 函数。 有关详细信息，请参阅 DAX 语法 | 日期和时间。\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/time/"
    },
    "TIMEVALUE": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/timevalue-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/timevalue-function-dax",
        "description-en-us": "Converts a time in text format to a time in datetime format.\nTime values are a portion of a date value and represented by a decimal number. For example, 12:00 PM is represented as 0.5 because it is half of a day.\n\nWhen the time_text argument is a text representation of the date and time, the function uses the locale and date/time settings of the model to understand the text value in order to perform the conversion. Most locales use the colon (:) as the time separator, and any input text using colons as time separators will parse correctly. Review your locale settings to understand your results.\n\nDate and datetime can also be specified as a literal in the format dt\"YYYY-MM-DD\", dt\"YYYY-MM-DDThh:mm:ss\", or dt\"YYYY-MM-DD hh:mm:ss\". When specified as a literal, using the TIMEVALUE function in the expression is not necessary. To learn more, see DAX Syntax | Date and time.\n\n",
        "category-en-us": "Date and time functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/date-and-time-functions-dax",
        "category-zh-cn": "日期和时间函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/date-and-time-functions-dax",
        "description-zh-cn": "将文本格式的时间转换为日期/时间格式的时间。\n时间值是日期值的一部分，用小数表示。 例如，因为 12:00 PM 是一天的一半，所以它表示为 0.5。\n\n如果 time_text 参数是日期和时间的文本表示形式，此函数会使用模型的区域设置和日期/时间设置来理解文本值以执行转换。 大多数区域设置使用冒号 (:) 作为时间分隔符，使用冒号作为时间分隔符的任何输入文本都将正确解析。 查看你的区域设置以了解结果。\n\n还可以将日期和日期/时间指定为 dt\"YYYY-MM-DD\"、dt\"YYYY-MM-DDThh:mm:ss\" 或 dt\"YYYY-MM-DD hh:mm:ss\" 格式的文本。 如果指定为文本，则不需要在表达式中使用 TIMEVALUE 函数。 有关详细信息，请参阅 DAX 语法 | 日期和时间。\n\n",
        "url-dax-guide": "https://dax.guide/timevalue/"
    },
    "TODAY": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/today-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/today-function-dax",
        "description-en-us": "Returns the current date.\nThe TODAY function is useful when you need to have the current date displayed on a worksheet, regardless of when you open the workbook. It is also useful for calculating intervals.\n\nIf the TODAY function does not update the date when you expect it to, you might need to change the settings that control when the column or workbook is refreshed..\n\nThe NOW function is similar but returns the exact time, whereas TODAY returns the time value 12:00:00 PM for all dates.\n\n",
        "category-en-us": "Date and time functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/date-and-time-functions-dax",
        "category-zh-cn": "日期和时间函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/date-and-time-functions-dax",
        "description-zh-cn": "返回当前日期。\n当你需要在工作表上显示当前日期时，TODAY 函数会非常有用，且无需考虑何时打开工作簿。 它还有助于计算时间间隔。\n\n如果 TODAY 函数未按预期更新日期，则可能需要更改控制何时刷新列或工作簿的设置。\n\nNOW 函数类似，但返回准确的时间，而 TODAY 为所有日期返回时间值 12:00:00。\n\n",
        "url-dax-guide": "https://dax.guide/today/"
    },
    "UTCNOW": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/utcnow-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/utcnow-function-dax",
        "description-en-us": "Returns the current UTC date and time.",
        "category-en-us": "Date and time functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/date-and-time-functions-dax",
        "category-zh-cn": "日期和时间函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/date-and-time-functions-dax",
        "description-zh-cn": "返回当前的 UTC 日期和时间。",
        "url-dax-guide": "https://dax.guide/utcnow/"
    },
    "UTCTODAY": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/utctoday-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/utctoday-function-dax",
        "description-en-us": "Returns the current UTC date.\nUTCTODAY returns the time value 12:00:00 PM for all dates.\n\nThe UTCNOW function is similar but returns the exact time and date.\n\n",
        "category-en-us": "Date and time functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/date-and-time-functions-dax",
        "category-zh-cn": "日期和时间函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/date-and-time-functions-dax",
        "description-zh-cn": "返回当前的 UTC 日期。\nUTCTODAY 为所有日期返回时间值 12:00:00 PM。\n\nUTCNOW 函数与之类似，但会返回准确的时间和日期。\n\n",
        "url-dax-guide": "https://dax.guide/utctoday/"
    },
    "WEEKDAY": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/weekday-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/weekday-function-dax",
        "description-en-us": "Returns a number from 1 to 7 identifying the day of the week of a date. By default the day ranges from 1 (Sunday) to 7 (Saturday).\nIn contrast to Microsoft Excel, which stores dates as serial numbers, DAX works with dates and times in a datetime format. If you need to display dates as serial numbers, you can use the formatting options in Excel.\n\nYou can also type dates in an accepted text representation of a date, but to avoid unexpected results, it is best to convert the text date to a datetime format first.\n\nWhen the date argument is a text representation of the date, the function uses the locale and date/time settings of the client computer to understand the text value in order to perform the conversion. If the current date/time settings represent dates in the format of Month/Day/Year, then the string, \"1/8/2009\", is interpreted as a datetime value equivalent to January 8th of 2009. However, if the current date/time settings represent dates in the format of Day/Month/Year, then the same string would be interpreted as a datetime value equivalent to August 1st of 2009.\n\n",
        "category-en-us": "Date and time functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/date-and-time-functions-dax",
        "category-zh-cn": "日期和时间函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/date-and-time-functions-dax",
        "description-zh-cn": "返回指示日期属于星期几的数字，1 到 7 之间的数字。 默认情况下，日期范围是 1（星期日）到 7（星期六）。\n与将日期存储为序号的 Microsoft Excel 相比，DAX 使用 datetime 格式处理日期和时间。 如果需要将日期显示为序号，可以使用 Excel 中的格式设置选项。\n\n也可用接受的日期文本表示形式键入日期，但为了避免意外的结果，最好先将文本日期转换为 datetime 格式。\n\ndate 参数是日期的文本表示形式时，该函数使用客户端计算机的区域设置和日期/时间设置来理解文本值以执行转换。 如果当前日期/时间设置以月/日/年格式表示日期，则字符串“1/8/2009”将解释为等于 2009 年 1 月 8 日的 datetime 值。 但是，如果当前日期/时间设置以日/月/年的格式表示日期，那么同一字符串将被解释为等于 2009 年 8 月 1 日的 datetime 值。\n\n",
        "url-dax-guide": "https://dax.guide/weekday/"
    },
    "WEEKNUM": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/weeknum-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/weeknum-function-dax",
        "description-en-us": "Returns the week number for the given date according to the return_type value. The week number indicates where the week falls numerically within a year.\nSystem 1  -  The week containing January 1 is the first week of the year and is numbered week 1.\nSystem 2  -  The week containing the first Thursday of the year is the first week of the year and is numbered as week 1. This system is the methodology specified in ISO 8601, which is commonly known as the European week numbering system.\n",
        "category-en-us": "Date and time functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/date-and-time-functions-dax",
        "category-zh-cn": "日期和时间函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/date-and-time-functions-dax",
        "description-zh-cn": "根据 return_type 值返回给定日期的周数。 周数指示此周在一年中的数值。\n系统 1 -  包含 1 月 1 日的周是一年的第一周，编号为“第 1 周”。\n系统 2 - 包含一年第一个星期四的周是一年的第一周，编号为“第 1 周”。 此系统是 ISO 8601 中指定的方法，通常称为欧洲周编号系统。\n",
        "url-dax-guide": "https://dax.guide/weeknum/"
    },
    "YEAR": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/year-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/year-function-dax",
        "description-en-us": "Returns the year of a date as a four digit integer in the range 1900-9999.\nIn contrast to Microsoft Excel, which stores dates as serial numbers, DAX uses a datetime data type to work with dates and times.\n\nDates should be entered by using the DATE function, or as results of other formulas or functions. You can also enter dates in accepted text representations of a date, such as March 3, 2007, or Mar-3-2003.\n\nValues returned by the YEAR, MONTH, and DAY functions will be Gregorian values regardless of the display format for the supplied date value. For example, if the display format of the supplied date uses the Hijri calendar, the returned values for the YEAR, MONTH, and DAY functions will be values associated with the equivalent Gregorian date.\n\nWhen the date argument is a text representation of the date, the function uses the locale and date time settings of the client computer to understand the text value in order to perform the conversion. Errors may arise if the format of strings is incompatible with the current locale settings. For example, if your locale defines dates to be formatted as month/day/year, and the date is provided as day/month/year, then 25/1/2009 will not be interpreted as January 25th of 2009 but as an invalid date.\n\n",
        "category-en-us": "Date and time functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/date-and-time-functions-dax",
        "category-zh-cn": "日期和时间函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/date-and-time-functions-dax",
        "description-zh-cn": "返回日期的年份，1900 到 9999 之间的四位整数。\n与将日期存储为序列号的 Microsoft Excel 相比，DAX 使用“日期/时间”数据类型处理日期和时间  。\n\n应使用 DATE 函数输入日期，或应将日期作为其他公式或函数的结果输入。 也可以采用接受的日期文本表示形式（例如，March 3, 2007 或 Mar-3-2003）输入日期。\n\n无论提供的日期值的显示格式如何，YEAR、MONTH 和 DAY 函数都返回公历日期值。 例如，如果提供的日期的显示格式使用回历，则 YEAR、MONTH 和 DAY 函数的返回值将是与相应公历日期关联的值。\n\n当日期参数是日期的文本表示形式时，此函数将使用客户端计算机的区域设置和日期时间设置来理解文本值，以便执行转换。 如果字符串的格式与当前区域设置不兼容，可能会出现错误。 例如，如果区域设置将日期格式定义为月/日/年，而日期以日/月/年的格式提供，那么 25/1/2009 将不会解释为 2009 年 1 月 25 日，而是视为无效日期。\n\n",
        "url-dax-guide": "https://dax.guide/year/"
    },
    "YEARFRAC": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/yearfrac-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/yearfrac-function-dax",
        "description-en-us": "Calculates the fraction of the year represented by the number of whole days between two dates. Use the YEARFRAC worksheet function to identify the proportion of a whole year's benefits or obligations to assign to a specific term.\nIn contrast to Microsoft Excel, which stores dates as serial numbers, DAX uses a datetime format to work with dates and times. If you need to view dates as serial numbers, you can use the formatting options in Excel.\n\nIf start_date or end_date are not valid dates, YEARFRAC returns an error.\n\nIf basis < 0 or if basis > 4, YEARFRAC returns an error.\n\n",
        "category-en-us": "Date and time functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/date-and-time-functions-dax",
        "category-zh-cn": "日期和时间函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/date-and-time-functions-dax",
        "description-zh-cn": "计算由两个日期之间的整日数表示的年份分数。 使用 YEARFRAC 工作表函数可确定要分配给特定期限的全年权益或义务的比例。\n与将日期存储为序列号的 Microsoft Excel 相比，DAX 使用“日期/时间”格式处理日期和时间  。 如果需要以序列号的形式查看日期，则可以使用 Excel 中的格式设置选项。\n\n如果 start_date 或 end_date 是无效的日期，YEARFRAC 则将返回错误   。\n\n如果 basis < 0 或 basis > 4，YEARFRAC 则将返回错误。\n\n",
        "url-dax-guide": "https://dax.guide/yearfrac/"
    },
    "ALL": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/all-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/all-function-dax",
        "description-en-us": "Returns all the rows in a table, or all the values in a column, ignoring any filters that might have been applied. This function is useful for clearing filters and creating calculations on all the rows in a table.\nThis function is not used by itself, but serves as an intermediate function that can be used to change the set of results over which some other calculation is performed.\n\nThe normal behavior for DAX expressions containing the ALL() function is that any filters applied will be ignored. However, there are some scenarios where this is not the case because of auto-exist, a DAX technology that optimizes filtering in order to reduce the amount of processing required for certain DAX queries. An example where auto-exist and ALL() provide unexpected results is when filtering on two or more columns of the same table (like when using slicers), and there is a measure on that same table that uses ALL(). In this case, auto-exist will merge the multiple filters into one and will only filter on existing combinations of values. Because of this merge, the measure will be calculated on the existing combinations of values and the result will be based on filtered values instead of all values as expected. To learn more about auto-exist and its effect on calculations, see Microsoft MVP Alberto Ferrari's Understanding DAX Auto-Exist article on sql.bi.com.\n\nThe following table describes how you can use the ALL and ALLEXCEPT functions in different scenarios.\n\n\n\nFunction and usage\nDescription\n\n\n\n\nALL()\nRemoves all filters everywhere. ALL() can only be used to clear filters but not to return a table.\n\n\nALL(Table)\nRemoves all filters from the specified table. In effect, ALL(Table) returns all of the values in the table, removing any filters from the context that otherwise might have been applied. This function is useful when you are working with many levels of grouping, and want to create a calculation that creates a ratio of an aggregated value to the total value. The first example demonstrates this scenario.\n\n\nALL (Column[, Column[, …]])\nRemoves all filters from the specified columns in the table; all other filters on other columns in the table still apply. All column arguments must come from the same table. The ALL(Column) variant is useful when you want to remove the context filters for one or more specific columns and to keep all other context filters. The second and third examples demonstrate this scenario.\n\n\nALLEXCEPT(Table, Column1 [,Column2]...)\nRemoves all context filters in the table except filters that are applied to the specified columns. This is a convenient shortcut for situations in which you want to remove the filters on many, but not all, columns in a table.\n\n\n\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Filter functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/filter-functions-dax",
        "category-zh-cn": "筛选器函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/filter-functions-dax",
        "description-zh-cn": "返回表中的所有行或列中的所有值，同时忽略可能已应用的任何筛选器。 此函数对于清除表中所有行的筛选器以及创建针对表中所有行的计算非常有用。\n此函数不单独使用，而是用作中间函数，可用于更改执行过其他计算的结果集。\n\n包含 ALL() 函数的 DAX 表达式的正常行为是将忽略所应用的全部筛选器。 但在某些情况下，由于“自动存在”(auto-exist) 而不会忽略。“自动存在”是一种 DAX 技术，它可优化筛选，从而减少某些 DAX 查询所需的处理量。 “自动存在”和 ALL() 提供意料之外的结果的一个示例是，对同一张表的两列或更多列进行筛选（例如使用切片器时），而且该表上有一个度量值使用了 ALL()。 这样的话，“自动存在”会将多个筛选器合并成一个，且仅对值的现有组合进行筛选。 由于该合并，将针对值的现有组合计算度量值，且根据筛选后的值而非预期的所有值来得出结果。 要详细了解“自动存在”及其对计算的影响，请参阅 Microsoft MVP Alberto Ferrari 的 Understanding DAX Auto-Exist（了解 DAX 自动存在技术）文章 (sql.bi.com)。\n\n下表描述了如何在不同场景中使用 ALL 和 ALLEXCEPT 函数。\n\n\n\n函数和用法\n说明\n\n\n\n\nALL()\n删除所有筛选器。 ALL() 只能用于清除筛选器，不能返回表。\n\n\nALL(Table)\n从指定表删除所有筛选器。 实际上，ALL(Table) 返回表中的所有值，同时删除上下文中可能已以其他方式应用了的任何筛选器。 如果要处理多个级别的分组，并且想要创建一个计算来创建聚合值与总值的比率，此函数则很有用。 第一个示例演示了这种情况。\n\n\nALL (Column[, Column[, …]])\n删除表中指定列的所有筛选器；表中针对其他列的所有其他筛选器仍会应用。 所有列参数必须来自同一个表。 如果想要删除一个或多个特定列的上下文筛选器并保留所有其他上下文筛选器，ALL(Column) 变体则很有用。 第二个和第三个示例演示了这种情况。\n\n\nALLEXCEPT(Table, Column1 [,Column2]...)\n删除表中所有的上下文筛选器，应用于指定列的筛选器除外。 如果要删除表中多个（但不是所有）列的筛选器，这是一个快捷的方法。\n\n\n\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/all/"
    },
    "ALLCROSSFILTERED": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/allcrossfiltered-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/allcrossfiltered-function-dax",
        "description-en-us": "Clear all filters which are applied to a table.\nALLCROSSFILTERED can only be used to clear filters but not to return a table.\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Filter functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/filter-functions-dax",
        "category-zh-cn": "筛选器函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/filter-functions-dax",
        "description-zh-cn": "清除应用于表的所有筛选器。\nALLCROSSFILTERED 只能用于清除筛选器，不能返回表。\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/allcrossfiltered/"
    },
    "ALLEXCEPT": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/allexcept-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/allexcept-function-dax",
        "description-en-us": "Removes all context filters in the table except filters that have been applied to the specified columns.\nThis function is not used by itself, but serves as an intermediate function that can be used to change the set of results over which some other calculation is performed.\n\nALL and ALLEXCEPT can be used in different scenarios:\n\n\n\nFunction and usage\nDescription\n\n\n\n\nALL(Table)\nRemoves all filters from the specified table. In effect, ALL(Table) returns all of the values in the table, removing any filters from the context that otherwise might have been applied. This function is useful when you are working with many levels of grouping, and want to create a calculation that creates a ratio of an aggregated value to the total value.\n\n\nALL (Column[, Column[, …]])\nRemoves all filters from the specified columns in the table; all other filters on other columns in the table still apply. All column arguments must come from the same table. The ALL(Column) variant is useful when you want to remove the context filters for one or more specific columns and to keep all other context filters.\n\n\nALLEXCEPT(Table, Column1 [,Column2]...)\nRemoves all context filters in the table except filters that are applied to the specified columns. This is a convenient shortcut for situations in which you want to remove the filters on many, but not all, columns in a table.\n\n\n\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Filter functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/filter-functions-dax",
        "category-zh-cn": "筛选器函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/filter-functions-dax",
        "description-zh-cn": "删除表中所有上下文筛选器，已应用于指定列的筛选器除外。\n此函数不单独使用，而是用作中间函数，可用于更改执行过其他计算的结果集。\n\n可以在不同的方案中使用 ALL 和 ALLEXCEPT：\n\n\n\n函数和用法\n说明\n\n\n\n\nALL(Table)\n从指定表删除所有筛选器。 实际上，ALL(Table) 返回表中的所有值，同时删除上下文中可能已以其他方式应用了的任何筛选器。 如果要处理多个级别的分组，并且想要创建一个计算来创建聚合值与总值的比率，此函数则很有用。\n\n\nALL (Column[, Column[, …]])\n删除表中指定列的所有筛选器；表中针对其他列的所有其他筛选器仍会应用。 所有列参数必须来自同一个表。 如果想要删除一个或多个特定列的上下文筛选器并保留所有其他上下文筛选器，ALL(Column) 变体则很有用。\n\n\nALLEXCEPT(Table, Column1 [,Column2]...)\n删除表中所有的上下文筛选器，应用于指定列的筛选器除外。 如果要删除表中多个（但不是所有）列的筛选器，这是一个快捷的方法。\n\n\n\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/allexcept/"
    },
    "ALLNOBLANKROW": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/allnoblankrow-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/allnoblankrow-function-dax",
        "description-en-us": "From the parent table of a relationship, returns all rows but the blank row, or all distinct values of a column but the blank row, and disregards any context filters that might exist.\nThe ALLNOBLANKROW function only filters the blank row that a parent table, in a relationship, will show when there are one or more rows in the child table that have non-matching values to the parent column. See the example below for a thorough explanation.\n\nThe following table summarizes the variations of ALL that are provided in DAX, and their differences:\n\n\n\nFunction and usage\nDescription\n\n\n\n\nALL(Column)\nRemoves all filters from the specified column in the table; all other filters in the table, over other columns, still apply.\n\n\nALL(Table)\nRemoves all filters from the specified table.\n\n\nALLEXCEPT(Table,Col1,Col2...)\nOverrides all context filters in the table except over the specified columns.\n\n\nALLNOBLANK(table|column)\nFrom the parent table of a relationship, returns all rows but the blank row, or all distinct values of a column but the blank row, and disregards any context filters that might exist\n\n\n\nFor a general description of how the ALL function works, together with step-by-step examples that use ALL(Table) and ALL(Column), see ALL function.\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Filter functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/filter-functions-dax",
        "category-zh-cn": "筛选器函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/filter-functions-dax",
        "description-zh-cn": "从关系的父表中，返回除空白行之外的所有行或列的所有非重复值，并且忽略可能存在的所有上下文筛选器。\n当子表中的一行或多行没有与父列匹配的值时，ALLNOBLANKROW 函数仅筛选父表会在关系中显示的空白行。 有关详细说明，请参阅以下示例。\n\n下表总结了 DAX 中提供的 ALL 的变体及其区别：\n\n\n\n函数和用法\n说明\n\n\n\n\nALL(Column)\n删除表中指定列的所有筛选器；表中针对其他列的所有其他筛选器仍会应用。\n\n\nALL(Table)\n从指定表删除所有筛选器。\n\n\nALLEXCEPT(Table,Col1,Col2...)\n覆盖表中除了应用于指定列的上下文筛选器之外的所有上下文筛选器。\n\n\nALLNOBLANK(table|column)\n从关系的父表中，返回除空白行之外的所有行或列的所有非重复值，并且忽略可能存在的所有上下文筛选器\n\n\n\n有关 ALL 函数工作原理的一般说明以及使用 ALL(Table) 和 ALL(Column) 的分步示例，请参阅 ALL 函数。\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/allnoblankrow/"
    },
    "ALLSELECTED": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/allselected-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/allselected-function-dax",
        "description-en-us": "Removes context filters from columns and rows in the current query, while retaining all other context filters or explicit filters.\nIf there is one argument, the argument is either tableName or columnName. If there is more than one argument, they must be columns from the same table.\n\nThis function is different from ALL() because it retains all filters explicitly set within the query, and it retains all context filters other than row and column filters.\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Filter functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/filter-functions-dax",
        "category-zh-cn": "筛选器函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/filter-functions-dax",
        "description-zh-cn": "删除当前查询的列和行中的上下文筛选器，同时保留所有其他上下文筛选器或显式筛选器。\n如果有一个参数，则该参数为 tableName 或 columnName。 如果有多个参数，则它们必须是同一表中的列。\n\n此函数与 ALL() 不同，因为它保留了在查询中显式设置的所有筛选器，并且保留了除行和列筛选器之外的所有上下文筛选器。\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/allselected/"
    },
    "CALCULATE": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/calculate-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/calculate-function-dax",
        "description-en-us": "Evaluates an expression in a modified filter context.\nBoolean filter expressions\nTable filter expressions\nFilter modification functions\n",
        "category-en-us": "Filter functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/filter-functions-dax",
        "category-zh-cn": "筛选器函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/filter-functions-dax",
        "description-zh-cn": "在已修改的筛选器上下文中计算表达式。\n布尔筛选表达式\n表筛选表达式\n筛选器修改函数\n",
        "url-dax-guide": "https://dax.guide/calculate/"
    },
    "CALCULATETABLE": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/calculatetable-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/calculatetable-function-dax",
        "description-en-us": "Evaluates a table expression in a modified filter context.\nBoolean filter expressions\nTable filter expressions\nFilter modification functions\n",
        "category-en-us": "Filter functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/filter-functions-dax",
        "category-zh-cn": "筛选器函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/filter-functions-dax",
        "description-zh-cn": "在已修改的筛选器上下文中计算表表达式。\n布尔筛选表达式\n表筛选表达式\n筛选器修改函数\n",
        "url-dax-guide": "https://dax.guide/calculatetable/"
    },
    "EARLIER": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/earlier-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/earlier-function-dax",
        "description-en-us": "Returns the current value of the specified column in an outer evaluation pass of the mentioned column.\nEARLIER succeeds if there is a row context prior to the beginning of the table scan. Otherwise it returns an error.\n\nThe performance of EARLIER might be slow because theoretically, it might have to perform a number of operations that is close to the total number of rows (in the column) times the same number (depending on the syntax of the expression). For example if you have 10 rows in the column, approximately a 100 operations could be required; if you have 100 rows then close to 10,000 operations might be performed.\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Filter functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/filter-functions-dax",
        "category-zh-cn": "筛选器函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/filter-functions-dax",
        "description-zh-cn": "返回所述列的外部计算传递中指定列的当前值。\n如果在表扫描开始之前存在行上下文，EARLIER 则成功。 否则它将返回错误。\n\nEARLIER 的执行速度可能比较缓慢，因为从理论上讲，它可能需要执行大量操作，操作次数接近于总行数（列中）乘以相同数字（具体因表达式的语法而异）。 例如，如果列中有 10 行，则可能需要大约 100 次操作；如果有 100 行，则可能会执行接近 10,000 次操作。\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/earlier/"
    },
    "EARLIEST": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/earliest-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/earliest-function-dax",
        "description-en-us": "Returns the current value of the specified column in an outer evaluation pass of the specified column.\nThe EARLIEST function is similar to EARLIER, but lets you specify one additional level of recursion.\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Filter functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/filter-functions-dax",
        "category-zh-cn": "筛选器函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/filter-functions-dax",
        "description-zh-cn": "返回指定列的外部计算传递中指定列的当前值。\nEARLIEST 函数和 EARLIER 相似，但只能指定一个额外的递归层。\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/earliest/"
    },
    "FILTER": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/filter-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/filter-function-dax",
        "description-en-us": "Returns a table that represents a subset of another table or expression.\nYou can use FILTER to reduce the number of rows in the table that you are working with, and use only specific data in calculations. FILTER is not used independently, but as a function that is embedded in other functions that require a table as an argument.\n\nFor best practices when using FILTER, see Avoid using FILTER as a filter argument.\n\n",
        "category-en-us": "Filter functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/filter-functions-dax",
        "category-zh-cn": "筛选器函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/filter-functions-dax",
        "description-zh-cn": "返回一个表，用于表示另一个表或表达式的子集。\n可使用 FILTER 减少表中要使用的行数，并且在计算中仅使用特定数据。 FILTER 不可单独使用，而是用作嵌入到需要表作为参数的其他函数中的函数。\n\n有关使用 FILTER 时的最佳做法，请参阅避免使用 FILTER 作为筛选器参数。\n\n",
        "url-dax-guide": "https://dax.guide/filter/"
    },
    "INDEX": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/index-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/index-function-dax",
        "description-en-us": "Returns a row at an absolute position, specified by the position parameter, within the specified partition, sorted by the specified order. If the current partition can't be deduced to a single partition, multiple rows may be returned.\nIf there is exactly one corresponding outer column, its value is used.\nIf there is no corresponding outer column:\n\nINDEX will first determine all <partitionBy> columns that have no corresponding outer column.\nFor every combination of existing values for these columns in INDEX’s parent context, INDEX is evaluated and a row is returned.\nINDEX’s final output is a union of these rows.\n\n\nIf there is more than one corresponding outer column, an error is returned.\n",
        "category-en-us": "Filter functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/filter-functions-dax",
        "category-zh-cn": "筛选器函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/filter-functions-dax",
        "description-zh-cn": "在指定分区（按指定顺序排序）的绝对位置（由位置参数指定）处返回一行。 如果当前分区无法推导为单个分区，则可能会返回多个行。\n如果正好有一个对应的外部列，则使用其值。\n如果没有对应的外部列：\nINDEX 将首先确定没有对应外部列的所有 <partitionBy> 列。\n对于 INDEX 的父上下文中这些列的现有值的每个组合，将计算 INDEX 并返回一行。\nINDEX 的最终输出是这些行的并集。\n\n\n如果有多个对应的外部列，则会返回错误。\n",
        "url-dax-guide": "https://dax.guide/index/"
    },
    "KEEPFILTERS": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/keepfilters-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/keepfilters-function-dax",
        "description-en-us": "Modifies how filters are applied while evaluating a CALCULATE or CALCULATETABLE function.\nYou use KEEPFILTERS within the context CALCULATE and CALCULATETABLE functions, to override the standard behavior of those functions.\n\nBy default, filter arguments in functions such as CALCULATE are used as the context for evaluating the expression, and as such filter arguments for CALCULATE replace all existing filters over the same columns. The new context effected by the filter argument for CALCULATE affects only existing filters on columns mentioned as part of the filter argument. Filters on columns other than those mentioned in the arguments of CALCULATE or other related functions remain in effect and unaltered.\n\nThe KEEPFILTERS function allows you to modify this behavior. When you use KEEPFILTERS, any existing filters in the current context are compared with the columns in the filter arguments, and the intersection of those arguments is used as the context for evaluating the expression. The net effect over any one column is that both sets of arguments apply: both the filter arguments used in CALCULATE and the filters in the arguments of the KEEPFILTER function. In other words, whereas CALCULATE filters replace the current context, KEEPFILTERS adds filters to the current context.\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Filter functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/filter-functions-dax",
        "category-zh-cn": "筛选器函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/filter-functions-dax",
        "description-zh-cn": "计算 CALCULATE 或 CALCULATETABLE 函数时，修改应用筛选器的方式。\n可以在上下文 CALCULATE 和 CALCULATETABLE 函数中使用 KEEPFILTERS，以替代这些函数的标准行为。\n\n默认情况下，函数（例如 CALCULATE）中的筛选器参数用作用于计算表达式的上下文，因此 CALCULATE 的筛选器参数会替换同一列上的所有现有筛选器。 受 CALCULATE 的筛选器参数影响的新上下文只影响作为筛选器参数一部分提及的列上的现有筛选器。 除 CALCULATE 或其他相关函数的参数中提到的列以外，其他列上的筛选器仍然有效且未被更改。\n\n可使用 KEEPFILTERS 函数修改此行为。 使用 KEEPFILTERS 时，当前上下文中的任何现有筛选器都将与筛选器参数中的列进行比较，且这些参数的交集将用作计算表达式的上下文。 对任何一列的最终影响是，这两组参数都适用：CALCULATE 中使用的筛选器参数和 KEEPFILTER 函数的参数中的筛选器。 换言之，尽管 CALCULATE 筛选器替换了当前上下文，但 KEEPFILTERS 将筛选器添加到了当前上下文。\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/keepfilters/"
    },
    "LOOKUPVALUE": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/lookupvalue-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/lookupvalue-function-dax",
        "description-en-us": "Returns the value for the row that meets all criteria specified by one or more search conditions.\nIf there is a relationship between the result and search tables, in most cases, using RELATED function instead of LOOKUPVALUE is more efficient and provides better performance.\n\nThe search_value and alternateResult parameters are evaluated before the function iterates through the rows of the search table.\n\nAvoid using ISERROR or IFERROR functions to capture an error returned by LOOKUPVALUE. If some inputs to the function will result in an error when a single output value cannot be determined, providing an alternateResult parameter is the most reliable and highest performing way to handle the error.\n\nThe alternateResult parameter will throw an error if specified in a PowerPivot calculated column.\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Filter functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/filter-functions-dax",
        "category-zh-cn": "筛选器函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/filter-functions-dax",
        "description-zh-cn": "返回满足一个或多个搜索条件所指定的所有条件的行的值。\n如果“结果”和“搜索”表之间存在关系，则在大多数情况下，使用 RELATED 函数（而不是 LOOKUPVALUE）会更高效并可以提供更好的性能。\n\n在函数循环访问搜索表中的行之前，将计算 search_value 和 alternateResult 参数 。\n\n避免使用 ISERROR 或 IFERROR 函数来捕获 LOOKUPVALUE 返回的错误。 如果函数的某些输入在无法确定单个输出值时导致错误，则提供 alternateResult 参数是处理错误的最可靠、性能最高的方式。\n\n如果在 PowerPivot 计算列中指定了 alternateResult 参数，该参数将引发错误。\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/lookupvalue/"
    },
    "OFFSET": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/offset-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/offset-function-dax",
        "description-en-us": "Returns a single row that is positioned either before or after the current row within the same table, by a given offset. If the current row cannot be deduced to a single row, multiple rows may be returned.\nIf there is exactly one corresponding outer column, its value is used.\nIf there is no corresponding outer column, then:\n\nOFFSET will first determine all <orderBy> and <partitionBy> columns that have no corresponding outer column.\nFor every combination of existing values for these columns in OFFSET’s parent context, OFFSET is evaluated and a row is returned.\nOFFSET’s final output is a union of these rows.\n\n\nIf there is more than one corresponding outer column, an error is returned.\n",
        "category-en-us": "Filter functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/filter-functions-dax",
        "category-zh-cn": "筛选器函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/filter-functions-dax",
        "description-zh-cn": "返回一个行，该行位于同一表中的当前行之前或之后（按给定的偏移量）。 如果当前行无法推导为单行，则可能返回多行。\n如果正好有一个对应的外部列，则使用其值。\n如果没有对应的外部列，则：\nOFFSET 将首先确定没有相应外部列的所有 <orderBy> 和 <partitionBy> 列。\n对于 OFFSET 的父上下文中这些列的现有值的每个组合，将计算 OFFSET 并返回一行。\nOFFSET 的最终输出是这些行的并集。\n\n\n如果有多个对应的外部列，则会返回错误。\n",
        "url-dax-guide": "https://dax.guide/offset/"
    },
    "ORDERBY": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/orderby-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/orderby-function-dax",
        "description-en-us": "Defines the columns that determine the sort order within each of a window function’s partitions.",
        "category-en-us": "Filter functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/filter-functions-dax",
        "category-zh-cn": "筛选器函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/filter-functions-dax",
        "description-zh-cn": "定义用于确定每个窗口函数分区内排序顺序的列。",
        "url-dax-guide": "https://dax.guide/orderby/"
    },
    "PARTITIONBY": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/partitionby-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/partitionby-function-dax",
        "description-en-us": "Defines the columns that are used to partition a window function’s <relation> parameter.",
        "category-en-us": "Filter functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/filter-functions-dax",
        "category-zh-cn": "筛选器函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/filter-functions-dax",
        "description-zh-cn": "Defines the columns that are used to partition a window function’s <relation> parameter.",
        "url-dax-guide": "https://dax.guide/partitionby/"
    },
    "REMOVEFILTERS": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/removefilters-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/removefilters-function-dax",
        "description-en-us": "Clear filters from the specified tables or columns.\nREMOVEFILTERS can only be used to clear filters but not to return a table.\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Filter functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/filter-functions-dax",
        "category-zh-cn": "筛选器函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/filter-functions-dax",
        "description-zh-cn": "从指定表或列中清除筛选器。\nREMOVEFILTERS 只能用于清除筛选器，不能返回表。\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/removefilters/"
    },
    "SELECTEDVALUE": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/selectedvalue-function",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/selectedvalue-function",
        "description-en-us": "Returns the value when the context for columnName has been filtered down to one distinct value only. Otherwise returns alternateResult.\nAn equivalent expression for SELECTEDVALUE(<columnName>, <alternateResult>) is IF(HASONEVALUE(<columnName>), VALUES(<columnName>), <alternateResult>).\n\nTo learn more about best practices when using SELECTEDVALUE, see Use SELECTEDVALUE instead of VALUES in DAX.\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Filter functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/filter-functions-dax",
        "category-zh-cn": "筛选器函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/filter-functions-dax",
        "description-zh-cn": "如果筛选 columnName 的上下文后仅剩下一个非重复值，则返回该值。 否则，返回 alternateResult。\nIF(HASONEVALUE(<columnName>), VALUES(<columnName>), <alternateResult>) 是 SELECTEDVALUE(<columnName>, <alternateResult>) 的等效表达式。\n\n若要详细了解使用 SELECTEDVALUE 时的最佳做法，请参阅使用 SELECTEDVALUE 而不是 DAX 中的 VALUES。\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/selectedvalue/"
    },
    "WINDOW": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/window-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/window-function-dax",
        "description-en-us": "Returns multiple rows which are positioned within the given interval.\nIf there is exactly one corresponding outer column, its value is used.\nIf there is no corresponding outer column:\n\nWINDOW will first determine all <orderBy> and <partitionBy> columns that have no corresponding outer column.\nFor every combination of existing values for these columns in WINDOW’s parent context, WINDOW is evaluated, and the corresponding rows is returned.\nWINDOW final output is a union of these rows.\n\n\nIf there is more than one corresponding outer column, an error is returned.\n",
        "category-en-us": "Filter functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/filter-functions-dax",
        "category-zh-cn": "筛选器函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/filter-functions-dax",
        "description-zh-cn": "返回位于给定间隔内的多个行。\n如果正好有一个对应的外部列，则使用其值。\n如果没有对应的外部列：\nWINDOW 将首先确定没有相应外部列的所有 <orderBy> 和 <partitionBy> 列。\n对于 WINDOW 父上下文中这些列的现有值的每个组合，将计算 WINDOW，并返回相应的行。\nWINDOW 的最终输出是这些行的并集。\n\n\n如果有多个对应的外部列，则会返回错误。\n",
        "url-dax-guide": "https://dax.guide/window/"
    },
    "ACCRINT": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/accrint-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/accrint-function-dax",
        "description-en-us": "Returns the accrued interest for a security that pays periodic interest.\nDates are stored as sequential serial numbers so they can be used in calculations. In DAX, December 30, 1899 is day 0, and January 1, 2008 is 39448 because it is 39,448 days after December 30, 1899.\n\nACCRINT is calculated as follows:\n$$\\text{ACCRINT} = \\text{par} \\times \\frac{\\text{rate}}{\\text{frequency}} \\times \\sum^{\\text{NC}}_{i=1}\\frac{\\text{A}_{i}}{\\text{NL}_{i}}$$\nwhere:\n\n$\\text{A}_{i}$ = number of accrued days for the $i^{th}$ quasi-coupon period within odd period.\n$\\text{NC}$ = number of quasi-coupon periods that fit in odd period. If this number contains a fraction, raise it to the next whole number.\n$\\text{NL}_{i}$ = normal length in days of the quasi-coupon period within odd period.\n\n\nissue, first_interest, and settlement are truncated to integers.\n\nfrequency and basis are rounded to the nearest integer.\n\nAn error is returned if:\n\nissue, first_interest, or settlement is not a valid date.\nissue ≥ settlement.\nrate ≤ 0.\npar ≤ 0.\nfrequency is any number other than 1, 2, or 4.\nbasis < 0 or basis > 4.\n\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Financial functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/financial-functions-dax",
        "category-zh-cn": "财务函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/financial-functions-dax",
        "description-zh-cn": "返回支付定期利息的证券的应计利息。\n日期存储为连续的序列号，以便在计算中使用。 在 DAX 中，1899 年 12 月 30 日的序列号是 0，2008 年 1 月 1 日的序列号是 39448，这是因为它距 1899 年 12 月 30 日有 39,448 天。\n\nACCRINT 的计算公式如下：\n$$\\text{ACCRINT} = \\text{par} \\times \\frac{\\text{rate}}{\\text{frequency}} \\times \\sum^{\\text{NC}}_{i=1}\\frac{\\text{A}_{i}}{\\text{NL}_{i}}$$\n其中：\n\n$\\text{A}_{i}$ = 不固定息票期内第 $i^{th}$ 个准息票期的累计天数。\n$ \\text{NC} $ = 不固定息票期内的准息票期数。 如果此数字包含一个分数，则向上取最接近的一个整数。\n$\\text{NL}_{i}$ = 不固定息票期内准息票期的正常天数。\n\n\nissue、first_interest 和 settlement 将被截尾取整。\n\nfrequency 和 basis 舍入为最接近的整数。\n\n如果出现以下情况，则返回错误：\n\nissue、first_interest 或 settlement 不是有效日期。\nissue ≥ settlement。\nrate ≤ 0。\npar ≤ 0。\nfrequency 是除 1、2 和 4 之外的任何数字。\nbasis < 0 或者 basis > 4。\n\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/accrint/"
    },
    "ACCRINTM": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/accrintm-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/accrintm-function-dax",
        "description-en-us": "Returns the accrued interest for a security that pays interest at maturity.\nDates are stored as sequential serial numbers so they can be used in calculations. In DAX, December 30, 1899 is day 0, and January 1, 2008 is 39448 because it is 39,448 days after December 30, 1899.\n\nACCRINTM is calculated as follows:\n$$\\text{ACCRINTM} = \\text{par} \\times \\text{rate} \\times \\frac{\\text{A}}{\\text{D}}$$\nwhere:\n\n$\\text{A}$ = Number of accrued days counted according to a monthly basis. For interest at maturity items, the number of days from the issue date to the maturity date is used.\n$\\text{D}$ = Annual Year Basis.\n\n\nissue and maturity are truncated to integers.\n\nbasis is rounded to the nearest integer.\n\nAn error is returned if:\n\nissue or maturity is not a valid date.\nissue ≥ maturity.\nrate ≤ 0.\npar ≤ 0.\nbasis < 0 or basis > 4.\n\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Financial functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/financial-functions-dax",
        "category-zh-cn": "财务函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/financial-functions-dax",
        "description-zh-cn": "返回支付到期利息的证券的应计利息。\n日期存储为连续的序列号，以便在计算中使用。 在 DAX 中，1899 年 12 月 30 日的序列号是 0，2008 年 1 月 1 日的序列号是 39448，这是因为它距 1899 年 12 月 30 日有 39,448 天。\n\nACCRINTM 的计算公式如下：\n$$\\text{ACCRINTM} = \\text{par} \\times \\text{rate} \\times \\frac{\\text{A}}{\\text{D}}$$\n其中：\n\n$\\text{A}$ = 按月计算的累计天数。 对于到期项的利息，将使用从发行日到到期日的天数。\n$\\text{D}$ = 一年的天数。\n\n\nissue 和 maturity 将被截尾取整。\n\nbasis 舍入为最接近的整数。\n\n如果出现以下情况，则返回错误：\n\nissue 或 maturity 不是有效日期。\nissue ≥ maturity。\nrate ≤ 0。\npar ≤ 0。\nbasis < 0 或者 basis > 4。\n\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/accrintm/"
    },
    "AMORDEGRC": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/amordegrc-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/amordegrc-function-dax",
        "description-en-us": "Returns the depreciation for each accounting period. This function is provided for the French accounting system. If an asset is purchased in the middle of the accounting period, the prorated depreciation is taken into account. The function is similar to AMORLINC, except that a depreciation coefficient is applied in the calculation depending on the life of the assets.\nDates are stored as sequential serial numbers so they can be used in calculations. In DAX, December 30, 1899 is day 0, and January 1, 2008 is 39448 because it is 39,448 days after December 30, 1899.\n\nThis function will return the depreciation until the last period of the life of the assets or until the cumulated value of depreciation is greater than the cost of the assets minus the salvage value.\n\nThe depreciation coefficients are:\n\n\n\nLife of assets (1/rate)\nDepreciation coefficient\n\n\n\n\nBetween 3 and 4 years\n1.5\n\n\nBetween 5 and 6 years\n2\n\n\nMore than 6 years\n2.5\n\n\n\n\nThe depreciation rate will grow to 50 percent for the period preceding the last period and will grow to 100 percent for the last period.\n\nperiod and basis are rounded to the nearest integer.\n\nAn error is returned if:\n\ncost < 0.\nfirst_period or date_purchased is not a valid date.\ndate_purchased > first_period.\nsalvage < 0 or salvage > cost.\nperiod < 0.\nrate ≤ 0.\nThe life of assets is between 0 (zero) and 1, 1 and 2, 2 and 3, or 4 and 5.\nbasis is any number other than 0, 1, 3, or 4.\n\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Financial functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/financial-functions-dax",
        "category-zh-cn": "财务函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/financial-functions-dax",
        "description-zh-cn": "返回每个会计期间的折旧。 此函数是为法语记帐系统提供的。 如果资产是在会计期间中途购买的，则会考虑按比例折旧。 该函数类似于 AMORLINC，但根据资产的使用寿命在计算中应用了折旧系数。\n日期存储为连续的序列号，以便在计算中使用。 在 DAX 中，1899 年 12 月 30 日的序列号是 0，2008 年 1 月 1 日的序列号是 39448，这是因为它距 1899 年 12 月 30 日有 39,448 天。\n\n此函数将返回直至资产生命周期的最后一个期间的折旧，或直至折旧的累计值大于资产成本减去残值时的折旧。\n\n折旧系数如下：\n\n\n\n资产的生命周期（1/费率）\n折旧系数\n\n\n\n\n3 到 4 年之间\n1.5\n\n\n5 到 6 年之间\n2\n\n\n大于 6 年\n2.5\n\n\n\n\n对于最后一个期间之前的期间，折旧率将增长到 50%，并在最后一个期间增长到 100%。\n\nperiod 和 basis 舍入为最接近的整数。\n\n如果出现以下情况，则返回错误：\n\ncost < 0。\nfirst_period 或 date_purchased 不是有效日期。\ndate_purchased > first_period。\nsalvage < 0 或 salvage > cost。\nperiod < 0。\nrate ≤ 0。\n资产的生存期介于 0（零）到 1、1 到 2、2 到 3 或 4 到 5 之间。\nbasis 是除 0、1、3 和 4 之外的任何数字。\n\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/amordegrc/"
    },
    "AMORLINC": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/amorlinc-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/amorlinc-function-dax",
        "description-en-us": "Returns the depreciation for each accounting period. This function is provided for the French accounting system. If an asset is purchased in the middle of the accounting period, the prorated depreciation is taken into account.\nDates are stored as sequential serial numbers so they can be used in calculations. In DAX, December 30, 1899 is day 0, and January 1, 2008 is 39448 because it is 39,448 days after December 30, 1899.\n\nperiod and basis are rounded to the nearest integer.\n\nAn error is returned if:\n\ncost < 0.\nfirst_period or date_purchased is not a valid date.\ndate_purchased > first_period.\nsalvage < 0 or salvage > cost.\nperiod < 0.\nrate ≤ 0.\nbasis is any number other than 0, 1, 3, or 4.\n\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Financial functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/financial-functions-dax",
        "category-zh-cn": "财务函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/financial-functions-dax",
        "description-zh-cn": "返回每个会计期间的折旧。 此函数是为法语记帐系统提供的。 如果资产是在会计期间中途购买的，则会考虑按比例折旧。\n日期存储为连续的序列号，以便在计算中使用。 在 DAX 中，1899 年 12 月 30 日的序列号是 0，2008 年 1 月 1 日的序列号是 39448，这是因为它距 1899 年 12 月 30 日有 39,448 天。\n\nperiod 和 basis 舍入为最接近的整数。\n\n如果出现以下情况，则返回错误：\n\ncost < 0。\nfirst_period 或 date_purchased 不是有效日期。\ndate_purchased > first_period。\nsalvage < 0 或 salvage > cost。\nperiod < 0。\nrate ≤ 0。\nbasis 是除 0、1、3 和 4 之外的任何数字。\n\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/amorlinc/"
    },
    "COUPDAYBS": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/coupdaybs-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/coupdaybs-function-dax",
        "description-en-us": "Returns the number of days from the beginning of a coupon period until its settlement date.\nDates are stored as sequential serial numbers so they can be used in calculations. In DAX, December 30, 1899 is day 0, and January 1, 2008 is 39448 because it is 39,448 days after December 30, 1899.\n\nThe settlement date is the date a buyer purchases a coupon, such as a bond. The maturity date is the date when a coupon expires. For example, suppose a 30-year bond is issued on January 1, 2008, and is purchased by a buyer six months later. The issue date would be January 1, 2008, the settlement date would be July 1, 2008, and the maturity date would be January 1, 2038, 30 years after the January 1, 2008, issue date.\n\nsettlement and maturity are truncated to integers.\n\nfrequency and basis are rounded to the nearest integer.\n\nAn error is returned if:\n\nsettlement or maturity is not a valid date.\nsettlement ≥ maturity.\nfrequency is any number other than 1, 2, or 4.\nbasis < 0 or basis > 4.\n\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Financial functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/financial-functions-dax",
        "category-zh-cn": "财务函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/financial-functions-dax",
        "description-zh-cn": "返回从息票期开始到结算日之间的天数。\n日期存储为连续的序列号，以便在计算中使用。 在 DAX 中，1899 年 12 月 30 日的序列号是 0，2008 年 1 月 1 日的序列号是 39448，这是因为它距 1899 年 12 月 30 日有 39,448 天。\n\n结算日是指购买者买入息票（如债券）的日期。 到期日是指息票到期的日期。 例如，假设在 2008 年 1 月 1 日发行的 30 年期债券，6 个月后被购买者买走。 那么发行日为 2008 年 1 月 1 日，结算日为 2008 年 7 月 1 日，而到期日是在发行日 2008 年 1 月 1 日的 30 年后，即 2038 年 1 月 1 日。\n\nsettlement 和 maturity 将被截尾取整。\n\nfrequency 和 basis 舍入为最接近的整数。\n\n如果出现以下情况，则返回错误：\n\nsettlement 或 maturity 不是有效日期。\nsettlement ≥ maturity。\nfrequency 是除 1、2 和 4 之外的任何数字。\nbasis < 0 或者 basis > 4。\n\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/coupdaybs/"
    },
    "COUPDAYS": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/coupdays-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/coupdays-function-dax",
        "description-en-us": "Returns the number of days in the coupon period that contains the settlement date.\nDates are stored as sequential serial numbers so they can be used in calculations. In DAX, December 30, 1899 is day 0, and January 1, 2008 is 39448 because it is 39,448 days after December 30, 1899.\n\nThe settlement date is the date a buyer purchases a coupon, such as a bond. The maturity date is the date when a coupon expires. For example, suppose a 30-year bond is issued on January 1, 2008, and is purchased by a buyer six months later. The issue date would be January 1, 2008, the settlement date would be July 1, 2008, and the maturity date is January 1, 2038, 30 years after the January 1, 2008 issue date.\n\nsettlement and maturity are truncated to integers.\n\nfrequency and basis are rounded to the nearest integer.\n\nAn error is returned if:\n\nsettlement or maturity is not a valid date.\nsettlement ≥ maturity.\nfrequency is any number other than 1, 2, or 4.\nbasis < 0 or basis > 4.\n\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Financial functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/financial-functions-dax",
        "category-zh-cn": "财务函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/financial-functions-dax",
        "description-zh-cn": "返回包含结算日的息票期内的天数。\n日期存储为连续的序列号，以便在计算中使用。 在 DAX 中，1899 年 12 月 30 日的序列号是 0，2008 年 1 月 1 日的序列号是 39448，这是因为它距 1899 年 12 月 30 日有 39,448 天。\n\n结算日是指购买者买入息票（如债券）的日期。 到期日是指息票到期的日期。 例如，假设在 2008 年 1 月 1 日发行的 30 年期债券，6 个月后被购买者买走。 那么发行日为 2008 年 1 月 1 日，结算日为 2008 年 7 月 1 日，而到期日是在发行日 2008 年 1 月 1 日的 30 年后，即 2038 年 1 月 1 日。\n\nsettlement 和 maturity 将被截尾取整。\n\nfrequency 和 basis 舍入为最接近的整数。\n\n如果出现以下情况，则返回错误：\n\nsettlement 或 maturity 不是有效日期。\nsettlement ≥ maturity。\nfrequency 是除 1、2 和 4 之外的任何数字。\nbasis < 0 或者 basis > 4。\n\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/coupdays/"
    },
    "COUPDAYSNC": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/coupdaysnc-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/coupdaysnc-function-dax",
        "description-en-us": "Returns the number of days from the settlement date to the next coupon date.\nDates are stored as sequential serial numbers so they can be used in calculations. In DAX, December 30, 1899 is day 0, and January 1, 2008 is 39448 because it is 39,448 days after December 30, 1899.\n\nThe settlement date is the date a buyer purchases a coupon, such as a bond. The maturity date is the date when a coupon expires. For example, suppose a 30-year bond is issued on January 1, 2008, and is purchased by a buyer six months later. The issue date would be January 1, 2008, the settlement date would be July 1, 2008, and the maturity date would be January 1, 2038, which is 30 years after the January 1, 2008, issue date.\n\nsettlement and maturity are truncated to integers.\n\nfrequency and basis are rounded to the nearest integer.\n\nAn error is returned if:\n\nsettlement or maturity is not a valid date.\nsettlement ≥ maturity.\nfrequency is any number other than 1, 2, or 4.\nbasis < 0 or basis > 4.\n\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Financial functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/financial-functions-dax",
        "category-zh-cn": "财务函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/financial-functions-dax",
        "description-zh-cn": "返回从结算日到下一个息票日的天数。\n日期存储为连续的序列号，以便在计算中使用。 在 DAX 中，1899 年 12 月 30 日的序列号是 0，2008 年 1 月 1 日的序列号是 39448，这是因为它距 1899 年 12 月 30 日有 39,448 天。\n\n结算日是指购买者买入息票（如债券）的日期。 到期日是指息票到期的日期。 例如，假设在 2008 年 1 月 1 日发行的 30 年期债券，6 个月后被购买者买走。 那么发行日为 2008 年 1 月 1 日，结算日为 2008 年 7 月 1 日，而到期日是在发行日 2008 年 1 月 1 日的 30 年后，即 2038 年 1 月 1 日。\n\nsettlement 和 maturity 将被截尾取整。\n\nfrequency 和 basis 舍入为最接近的整数。\n\n如果出现以下情况，则返回错误：\n\nsettlement 或 maturity 不是有效日期。\nsettlement ≥ maturity。\nfrequency 是除 1、2 和 4 之外的任何数字。\nbasis < 0 或者 basis > 4。\n\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/coupdaysnc/"
    },
    "COUPNCD": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/coupncd-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/coupncd-function-dax",
        "description-en-us": "Returns the next coupon date after the settlement date.\nDates are stored as sequential serial numbers so they can be used in calculations. In DAX, December 30, 1899 is day 0, and January 1, 2008 is 39448 because it is 39,448 days after December 30, 1899.\n\nThe settlement date is the date a buyer purchases a coupon, such as a bond. The maturity date is the date when a coupon expires. For example, suppose a 30-year bond is issued on January 1, 2008, and is purchased by a buyer six months later. The issue date would be January 1, 2008, the settlement date would be July 1, 2008, and the maturity date is January 1, 2038, 30 years after the January 1, 2008 issue date.\n\nsettlement and maturity are truncated to integers.\n\nfrequency and basis are rounded to the nearest integer.\n\nAn error is returned if:\n\nsettlement or maturity is not a valid date.\nsettlement ≥ maturity.\nfrequency is any number other than 1, 2, or 4.\nbasis < 0 or basis > 4.\n\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Financial functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/financial-functions-dax",
        "category-zh-cn": "财务函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/financial-functions-dax",
        "description-zh-cn": "返回结算日之后的下一个息票日。\n日期存储为连续的序列号，以便在计算中使用。 在 DAX 中，1899 年 12 月 30 日的序列号是 0，2008 年 1 月 1 日的序列号是 39448，这是因为它距 1899 年 12 月 30 日有 39,448 天。\n\n结算日是指购买者买入息票（如债券）的日期。 到期日是指息票到期的日期。 例如，假设在 2008 年 1 月 1 日发行的 30 年期债券，6 个月后被购买者买走。 那么发行日为 2008 年 1 月 1 日，结算日为 2008 年 7 月 1 日，而到期日是在发行日 2008 年 1 月 1 日的 30 年后，即 2038 年 1 月 1 日。\n\nsettlement 和 maturity 将被截尾取整。\n\nfrequency 和 basis 舍入为最接近的整数。\n\n如果出现以下情况，则返回错误：\n\nsettlement 或 maturity 不是有效日期。\nsettlement ≥ maturity。\nfrequency 是除 1、2 和 4 之外的任何数字。\nbasis < 0 或者 basis > 4。\n\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/coupncd/"
    },
    "COUPNUM": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/coupnum-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/coupnum-function-dax",
        "description-en-us": "Returns the number of coupons payable between the settlement date and maturity date, rounded up to the nearest whole coupon.\nDates are stored as sequential serial numbers so they can be used in calculations. In DAX, December 30, 1899 is day 0, and January 1, 2008 is 39448 because it is 39,448 days after December 30, 1899.\n\nThe settlement date is the date a buyer purchases a coupon, such as a bond. The maturity date is the date when a coupon expires. For example, suppose a 30-year bond is issued on January 1, 2008, and is purchased by a buyer six months later. The issue date would be January 1, 2008, the settlement date would be July 1, 2008, and the maturity date would be January 1, 2038, which is 30 years after the January 1, 2008, issue date.\n\nsettlement and maturity are truncated to integers.\n\nfrequency and basis are rounded to the nearest integer.\n\nAn error is returned if:\n\nsettlement or maturity is not a valid date.\nsettlement ≥ maturity.\nfrequency is any number other than 1, 2, or 4.\nbasis < 0 or basis > 4.\n\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Financial functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/financial-functions-dax",
        "category-zh-cn": "财务函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/financial-functions-dax",
        "description-zh-cn": "返回结算日和到期日之间应付的息票数，舍入到最接近的整息票数。\n日期存储为连续的序列号，以便在计算中使用。 在 DAX 中，1899 年 12 月 30 日的序列号是 0，2008 年 1 月 1 日的序列号是 39448，这是因为它距 1899 年 12 月 30 日有 39,448 天。\n\n结算日是指购买者买入息票（如债券）的日期。 到期日是指息票到期的日期。 例如，假设在 2008 年 1 月 1 日发行的 30 年期债券，6 个月后被购买者买走。 那么发行日为 2008 年 1 月 1 日，结算日为 2008 年 7 月 1 日，而到期日是在发行日 2008 年 1 月 1 日的 30 年后，即 2038 年 1 月 1 日。\n\nsettlement 和 maturity 将被截尾取整。\n\nfrequency 和 basis 舍入为最接近的整数。\n\n如果出现以下情况，则返回错误：\n\nsettlement 或 maturity 不是有效日期。\nsettlement ≥ maturity。\nfrequency 是除 1、2 和 4 之外的任何数字。\nbasis < 0 或者 basis > 4。\n\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/coupnum/"
    },
    "COUPPCD": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/couppcd-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/couppcd-function-dax",
        "description-en-us": "Returns the previous coupon date before the settlement date.\nDates are stored as sequential serial numbers so they can be used in calculations. In DAX, December 30, 1899 is day 0, and January 1, 2008 is 39448 because it is 39,448 days after December 30, 1899.\n\nThe settlement date is the date a buyer purchases a coupon, such as a bond. The maturity date is the date when a coupon expires. For example, suppose a 30-year bond is issued on January 1, 2008, and is purchased by a buyer six months later. The issue date would be January 1, 2008, the settlement date would be July 1, 2008, and the maturity date would be January 1, 2038, which is 30 years after the January 1, 2008, issue date.\n\nsettlement and maturity are truncated to integers.\n\nfrequency and basis are rounded to the nearest integer.\n\nAn error is returned if:\n\nsettlement or maturity is not a valid date.\nsettlement ≥ maturity.\nfrequency is any number other than 1, 2, or 4.\nbasis < 0 or basis > 4.\n\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Financial functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/financial-functions-dax",
        "category-zh-cn": "财务函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/financial-functions-dax",
        "description-zh-cn": "返回结算日之前的上一个息票日。\n日期存储为连续的序列号，以便在计算中使用。 在 DAX 中，1899 年 12 月 30 日的序列号是 0，2008 年 1 月 1 日的序列号是 39448，这是因为它距 1899 年 12 月 30 日有 39,448 天。\n\n结算日是指购买者买入息票（如债券）的日期。 到期日是指息票到期的日期。 例如，假设在 2008 年 1 月 1 日发行的 30 年期债券，6 个月后被购买者买走。 那么发行日为 2008 年 1 月 1 日，结算日为 2008 年 7 月 1 日，而到期日是在发行日 2008 年 1 月 1 日的 30 年后，即 2038 年 1 月 1 日。\n\nsettlement 和 maturity 将被截尾取整。\n\nfrequency 和 basis 舍入为最接近的整数。\n\n如果出现以下情况，则返回错误：\n\nsettlement 或 maturity 不是有效日期。\nsettlement ≥ maturity。\nfrequency 是除 1、2 和 4 之外的任何数字。\nbasis < 0 或者 basis > 4。\n\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/couppcd/"
    },
    "CUMIPMT": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/cumipmt-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/cumipmt-function-dax",
        "description-en-us": "Returns the cumulative interest paid on a loan between start_period and end_period.\nMake sure that you are consistent about the units you use for specifying rate and nper. If you make monthly payments on a four-year loan at an annual interest rate of 10 percent, use 0.1/12 for rate and 4*12 for nper. If you make annual payments on the same loan, use 0.1 for rate and 4 for nper.\n\nstart_period, end_period, and type are rounded to the nearest integer.\n\nAn error is returned if:\n\nrate ≤ 0.\nnper < 1.\npv ≤ 0.\nstart_period < 1 or start_period > end_period.\nend_period < start_period or end_period > nper.\ntype is any number other than 0 or 1.\n\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Financial functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/financial-functions-dax",
        "category-zh-cn": "财务函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/financial-functions-dax",
        "description-zh-cn": "返回 start_period 和 end_period 之间为贷款支付的累计利息。\n确保用于指定 rate 和 nper 的单位是一致的。 如果你每月以 10% 的年利率偿还 4 年期贷款，则利率 rate 为 0.1/12，nper 为 4*12。 如果你每年偿还金额相同的贷款，则利率 rate 为 0.1，nper 为 4。\n\nstart_period、end_period 和 type 舍入为最接近的整数。\n\n如果出现以下情况，则返回错误：\n\nrate ≤ 0。\nnper < 1。\npv ≤ 0。\nstart_period < 1 或 start_period > end_period。\nend_period < start_period 或 end_period > nper。\ntype 是除 0 和 1 之外的任何数字。\n\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/cumipmt/"
    },
    "CUMPRINC": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/cumprinc-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/cumprinc-function-dax",
        "description-en-us": "Returns the cumulative principal paid on a loan between start_period and end_period.\nMake sure that you are consistent about the units you use for specifying rate and nper. If you make monthly payments on a four-year loan at an annual interest rate of 10 percent, use 0.1/12 for rate and 4*12 for nper. If you make annual payments on the same loan, use 0.1 for rate and 4 for nper.\n\nstart_period, end_period, and type are rounded to the nearest integer.\n\nAn error is returned if:\n\nrate ≤ 0.\nnper < 1.\npv ≤ 0.\nstart_period < 1 or start_period > end_period.\nend_period < start_period or end_period > nper.\ntype is any number other than 0 or 1.\n\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Financial functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/financial-functions-dax",
        "category-zh-cn": "财务函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/financial-functions-dax",
        "description-zh-cn": "返回 start_period 和 end_period 之间为贷款支付的累计本金。\n确保用于指定 rate 和 nper 的单位是一致的。 如果你每月以 10% 的年利率偿还 4 年期贷款，则利率 rate 为 0.1/12，nper 为 4*12。 如果你每年偿还金额相同的贷款，则利率 rate 为 0.1，nper 为 4。\n\nstart_period、end_period 和 type 舍入为最接近的整数。\n\n如果出现以下情况，则返回错误：\n\nrate ≤ 0。\nnper < 1。\npv ≤ 0。\nstart_period < 1 或 start_period > end_period。\nend_period < start_period 或 end_period > nper。\ntype 是除 0 和 1 之外的任何数字。\n\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/cumprinc/"
    },
    "DB": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/db-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/db-function-dax",
        "description-en-us": "Returns the depreciation of an asset for a specified period using the fixed-declining balance method.\nThe fixed-declining balance method computes depreciation at a fixed rate. DB uses the following formulas to calculate depreciation for a period:\n$$(\\text{cost} - \\text{total depreciation from prior periods}) \\times \\text{rate}$$\nwhere:\n\n$\\text{rate} = 1 - ((\\frac{\\text{salvage}}{\\text{cost}})^{(\\frac{1}{\\text{life}})})\\text{, rounded to three decimal places}$\n\n\nDepreciation for the first and last periods is a special case.\n\nFor the first period, DB uses this formula:\n$$\\frac{\\text{cost} \\times \\text{rate} \\times \\text{month}}{12}$$\n\nFor the last period, DB uses this formula:\n$$\\frac{(\\text{cost} - \\text{total depreciation from prior periods}) \\times \\text{rate} \\times (12 - \\text{month})}{12}$$\n\n\n\nperiod and month are rounded to the nearest integer.\n\nAn error is returned if:\n\ncost < 0.\nsalvage < 0.\nlife < 1.\nperiod < 1 or period > life.\nmonth < 1 or month > 12.\n\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Financial functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/financial-functions-dax",
        "category-zh-cn": "财务函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/financial-functions-dax",
        "description-zh-cn": "使用固定余额递减法返回指定期间资产的折旧。\n固定余额递减法以固定比率计算折旧。 DB 使用以下公式来计算周期的折旧：\n$$(\\text{cost} - \\text{total depreciation from prior periods}) \\times \\text{rate}$$\n其中：\n\n$\\text{rate} = 1 - ((\\frac{\\text{salvage}}{\\text{cost}})^{(\\frac{1}{\\text{life}})})\\text{, rounded to three decimal places}$\n\n\n首个及最后一个期间的折旧为特殊情况。\n\n对于首个周期，DB 使用以下公式：\n$$\\frac{\\text{cost} \\times \\text{rate} \\times \\text{month}}{12}$$\n\n对于最后一个周期，DB 使用以下公式：\n$$\\frac{(\\text{cost} - \\text{total depreciation from prior periods}) \\times \\text{rate} \\times (12 - \\text{month})}{12}$$\n\n\n\nperiod 和 month 舍入为最接近的整数。\n\n如果出现以下情况，则返回错误：\n\ncost < 0。\nsalvage < 0。\nlife < 1。\nperiod < 1 或 period > life。\nmonth < 1 或 month > 12。\n\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/db/"
    },
    "DDB": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/ddb-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/ddb-function-dax",
        "description-en-us": "Returns the depreciation of an asset for a specified period using the double-declining balance method or some other method you specify.\nThe double-declining balance method computes depreciation at an accelerated rate. Depreciation is highest in the first period and decreases in successive periods. DDB uses the following formula to calculate depreciation for a period:\n$$\\text{Min}((\\text{cost} - \\text{total depreciation from prior periods}) \\times (\\frac{\\text{factor}}{\\text{life}}),(\\text{cost} - \\text{salvage} - \\text{total depreciation from prior periods}))$$\n\nChange factor if you do not want to use the double-declining balance method.\n\nUse the VDB function if you want to switch to the straight-line depreciation method when depreciation is greater than the declining balance calculation.\n\nperiod is rounded to the nearest integer.\n\nAn error is returned if:\n\ncost < 0.\nsalvage < 0.\nlife < 1.\nperiod < 1 or period > life.\nfactor ≤ 0.\n\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Financial functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/financial-functions-dax",
        "category-zh-cn": "财务函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/financial-functions-dax",
        "description-zh-cn": "使用双倍余额递减法或你指定的一些其他方法返回指定期间的资产折旧。\n双倍余额递减法以加速比率计算折旧。 折旧在首个期间内最高，在随后的期间内降低。 DDB 使用以下公式来计算周期的折旧：\n$$\\text{Min}((\\text{cost} - \\text{total depreciation from prior periods}) \\times (\\frac{\\text{factor}}{\\text{life}}),(\\text{cost} - \\text{salvage} - \\text{total depreciation from prior periods}))$$\n\n如果不想使用双倍余额递减法，请更改 factor。\n\n如需在折旧大于余额递减计算时切换为直线折旧法，请使用 VDB 函数。\n\nperiod 舍入为最接近的整数。\n\n如果出现以下情况，则返回错误：\n\ncost < 0。\nsalvage < 0。\nlife < 1。\nperiod < 1 或 period > life。\nfactor ≤ 0。\n\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/ddb/"
    },
    "DISC": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/disc-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/disc-function-dax",
        "description-en-us": "Returns the discount rate for a security.\nDates are stored as sequential serial numbers so they can be used in calculations. In DAX, December 30, 1899 is day 0, and January 1, 2008 is 39448 because it is 39,448 days after December 30, 1899.\n\nThe settlement date is the date a buyer purchases a coupon, such as a bond. The maturity date is the date when a coupon expires. For example, suppose a 30-year bond is issued on January 1, 2018, and is purchased by a buyer six months later. The issue date would be January 1, 2018, the settlement date would be July 1, 2018, and the maturity date would be January 1, 2048, 30 years after the January 1, 2018, issue date.\n\nDISC is calculated as follows:\n$$\\text{DISC} = \\frac{\\text{redemption} - \\text{par}}{\\text{redemption}} \\times \\frac{\\text{B}}{\\text{DSM}}$$\nwhere:\n\n$\\text{B}$ = number of days in a year, depending on the year basis.\n\n$\\text{DSM}$ = number of days between settlement and maturity.\n\n\n\nsettlement and maturity are truncated to integers.\n\nbasis is rounded to the nearest integer.\n\nAn error is returned if:\n\nsettlement or maturity is not a valid date.\nsettlement ≥ maturity.\npr ≤ 0.\nredemption ≤ 0.\nbasis < 0 or basis > 4.\n\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Financial functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/financial-functions-dax",
        "category-zh-cn": "财务函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/financial-functions-dax",
        "description-zh-cn": "返回证券的贴现率。\n日期存储为连续的序列号，以便在计算中使用。 在 DAX 中，1899 年 12 月 30 日的序列号是 0，2008 年 1 月 1 日的序列号是 39448，这是因为它距 1899 年 12 月 30 日有 39,448 天。\n\n结算日是指购买者买入息票（如债券）的日期。 到期日是指息票到期的日期。 例如，假设在 2018 年 1 月 1 日发行的 30 年期债券，6 个月后被购买者买走。 那么发行日为 2018 年 1 月 1 日，结算日为 2018 年 7 月 1 日，而到期日是在发行日 2018 年 1 月 1 日的 30 年后，即 2048 年 1 月 1 日。\n\nDISC 的计算公式如下：\n$$\\text{DISC} = \\frac{\\text{redemption} - \\text{par}}{\\text{redemption}} \\times \\frac{\\text{B}}{\\text{DSM}}$$\n其中：\n\n$\\text{B}$ = 一年之中的天数，取决于具体年份。\n\n$\\text{DSM}$ = 结算日与到期日之间的天数。\n\n\n\nsettlement 和 maturity 将被截尾取整。\n\nbasis 舍入为最接近的整数。\n\n如果出现以下情况，则返回错误：\n\nsettlement 或 maturity 不是有效日期。\nsettlement ≥ maturity。\npr ≤ 0。\nredemption ≤ 0。\nbasis < 0 或者 basis > 4。\n\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/disc/"
    },
    "DOLLARDE": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/dollarde-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/dollarde-function-dax",
        "description-en-us": "Converts a dollar price expressed as an integer part and a fraction part, such as 1.02, into a dollar price expressed as a decimal number. Fractional dollar numbers are sometimes used for security prices.\nThe fraction part of the value is divided by an integer that you specify. For example, if you want your price to be expressed to a precision of 1/16 of a dollar, you divide the fraction part by 16. In this case, 1.02 represents \\$1.125 (\\$1 + 2/16 = \\$1.125).\n\nfraction is rounded to the nearest integer.\n\nAn error is returned if:\n\nfraction < 1.\n\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Financial functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/financial-functions-dax",
        "category-zh-cn": "财务函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/financial-functions-dax",
        "description-zh-cn": "将以整数部分加小数部分表示的美元价格（如 1.02）转换为以小数表示的美元价格。 证券价格有时会使用美元分数数字。\n值的小数部分除以你指定的整数。 例如，如果希望价格精确地表示为 1 美元的 1/16，可将小数部分除以 16。 本例中，1.02 表示 \\$1.125 (\\$1 + 2/16 = \\$1.125)。\n\nfraction 舍入为最接近的整数。\n\n如果出现以下情况，则返回错误：\n\nfraction < 1。\n\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/dollarde/"
    },
    "DOLLARFR": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/dollarfr-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/dollarfr-function-dax",
        "description-en-us": "Converts a dollar price expressed as a decimal number into a dollar price expressed as an integer part and a fraction part, such as 1.02. Fractional dollar numbers are sometimes used for security prices.\nfraction is rounded to the nearest integer.\n\nAn error is returned if:\n\nfraction < 1.\n\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Financial functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/financial-functions-dax",
        "category-zh-cn": "财务函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/financial-functions-dax",
        "description-zh-cn": "将以小数表示的美元价格转换为以整数部分加小数部分表示的美元价格（如 1.02）。 证券价格有时会使用美元分数数字。\nfraction 舍入为最接近的整数。\n\n如果出现以下情况，则返回错误：\n\nfraction < 1。\n\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/dollarfr/"
    },
    "DURATION": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/duration-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/duration-function-dax",
        "description-en-us": "Returns the Macauley duration for an assumed par value of \\$100. Duration is defined as the weighted average of the present value of cash flows, and is used as a measure of a bond price's response to changes in yield.\nDates are stored as sequential serial numbers so they can be used in calculations. In DAX, December 30, 1899 is day 0, and January 1, 2008 is 39448 because it is 39,448 days after December 30, 1899.\n\nThe settlement date is the date a buyer purchases a coupon, such as a bond. The maturity date is the date when a coupon expires. For example, suppose a 30-year bond is issued on January 1, 2008, and is purchased by a buyer six months later. The issue date would be January 1, 2008, the settlement date would be July 1, 2008, and the maturity date is January 1, 2038, which is 30 years after the January 1, 2008, issue date.\n\nsettlement and maturity are truncated to integers.\n\nfrequency, and basis are rounded to the nearest integer.\n\nAn error is returned if:\n\nsettlement or maturity is not a valid date.\nsettlement ≥ maturity.\ncoupon < 0.\nyld < 0\nfrequency is any number other than 1, 2, or 4.\nbasis < 0 or basis > 4.\n\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Financial functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/financial-functions-dax",
        "category-zh-cn": "财务函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/financial-functions-dax",
        "description-zh-cn": "返回假定面值为 \\$100 的麦考利久期。 麦考利久期定义为现金流现值的加权平均值，用于衡量收益变动时债券价格的变动情况。\n日期存储为连续的序列号，以便在计算中使用。 在 DAX 中，1899 年 12 月 30 日的序列号是 0，2008 年 1 月 1 日的序列号是 39448，这是因为它距 1899 年 12 月 30 日有 39,448 天。\n\n结算日是指购买者买入息票（如债券）的日期。 到期日是指息票到期的日期。 例如，假设在 2008 年 1 月 1 日发行的 30 年期债券，6 个月后被购买者买走。 那么发行日为 2008 年 1 月 1 日，结算日为 2008 年 7 月 1 日，而到期日是在发行日 2008 年 1 月 1 日的 30 年后，即 2038 年 1 月 1 日。\n\nsettlement 和 maturity 将被截尾取整。\n\nfrequency 和 basis 舍入为最接近的整数。\n\n如果出现以下情况，则返回错误：\n\nsettlement 或 maturity 不是有效日期。\nsettlement ≥ maturity。\ncoupon < 0。\nyld < 0\nfrequency 是除 1、2 和 4 之外的任何数字。\nbasis < 0 或者 basis > 4。\n\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/duration/"
    },
    "EFFECT": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/effect-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/effect-function-dax",
        "description-en-us": "Returns the effective annual interest rate, given the nominal annual interest rate and the number of compounding periods per year.\nEFFECT is calculated as follows:\n$$\\text{EFFECT} = \\bigg( 1 + \\frac{\\text{nominal_rate}}{\\text{npery}} \\bigg)^{\\text{npery}} - 1$$\n\nnpery is rounded to the nearest integer.\n\nAn error is returned if:\n\nnominal_rate ≤ 0.\nnpery < 1.\n\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Financial functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/financial-functions-dax",
        "category-zh-cn": "财务函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/financial-functions-dax",
        "description-zh-cn": "返回给定名义年利率和每年的复利期数下的实际年利率。\nEFFECT 的计算公式如下：\n$$\\text{EFFECT} = \\bigg( 1 + \\frac{\\text{nominal_rate}}{\\text{npery}} \\bigg)^{\\text{npery}} - 1$$\n\nnpery 舍入为最接近的整数。\n\n如果出现以下情况，则返回错误：\n\nnominal_rate ≤ 0。\nnpery < 1。\n\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/effect/"
    },
    "FV": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/fv-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/fv-function-dax",
        "description-en-us": "Calculates the future value of an investment based on a constant interest rate. You can use FV with either periodic, constant payments, and/or a single lump sum payment.\nMake sure that you are consistent about the units you use for specifying rate and nper. If you make monthly payments on a four-year loan at 12 percent annual interest, use 0.12/12 for rate and 4*12 for nper. If you make annual payments on the same loan, use 0.12 for rate and 4 for nper.\n\nFor all the arguments, cash you pay out, such as deposits to savings, is represented by negative numbers; cash you receive, such as dividend checks, is represented by positive numbers.\n\ntype is rounded to the nearest integer.\n\nAn error is returned if:\n\nnper < 1\n\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Financial functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/financial-functions-dax",
        "category-zh-cn": "财务函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/financial-functions-dax",
        "description-zh-cn": "根据固定利率计算投资的未来价值。 可以将 FV 与定期、固定付款和/或一次性付款一起使用。\n确保用于指定 rate 和 nper 的单位是一致的。 如果你每月以 12% 的年利率偿还一笔 4 年期贷款，则利率 rate 为 0.12/12，nper 为 4*12。 如果你每年偿还金额相同的贷款，则利率 rate 为 0.12，nper 为 4。\n\n对于所有的参数，你支付的现金（如储蓄存款）用负数表示；你收到的现金（如股息支票）用正数表示。\n\ntype 舍入为最接近的整数。\n\n如果出现以下情况，则返回错误：\n\nnper < 1\n\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/fv/"
    },
    "INTRATE": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/intrate-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/intrate-function-dax",
        "description-en-us": "Returns the interest rate for a fully invested security.\nDates are stored as sequential serial numbers so they can be used in calculations. In DAX, December 30, 1899 is day 0, and January 1, 2008 is 39448 because it is 39,448 days after December 30, 1899.\n\nThe settlement date is the date a buyer purchases a coupon, such as a bond. The maturity date is the date when a coupon expires. For example, suppose a 30-year bond is issued on January 1, 2008, and is purchased by a buyer six months later. The issue date would be January 1, 2008, the settlement date would be July 1, 2008, and the maturity date is January 1, 2038, which is 30 years after the January 1, 2008, issue date.\n\nINTRATE is calculated as follows:\n$$\\text{INTRATE} = \\frac{\\text{redemption} - \\text{investment}}{\\text{investment}} \\times \\frac{\\text{B}}{\\text{DIM}}$$\nwhere:\n\n$\\text{B}$ = number of days in a year, depending on the year basis.\n$\\text{DIM}$ = number of days from settlement to maturity.\n\n\nsettlement and maturity are truncated to integers.\n\nbasis is rounded to the nearest integer.\n\nAn error is returned if:\n\nsettlement or maturity is not a valid date.\nsettlement ≥ maturity.\ninvestment ≤ 0.\nredemption ≤ 0.\nbasis < 0 or basis > 4.\n\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Financial functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/financial-functions-dax",
        "category-zh-cn": "财务函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/financial-functions-dax",
        "description-zh-cn": "返回一次性付息的证券的利率。\n日期存储为连续的序列号，以便在计算中使用。 在 DAX 中，1899 年 12 月 30 日的序列号是 0，2008 年 1 月 1 日的序列号是 39448，这是因为它距 1899 年 12 月 30 日有 39,448 天。\n\n结算日是指购买者买入息票（如债券）的日期。 到期日是指息票到期的日期。 例如，假设在 2008 年 1 月 1 日发行的 30 年期债券，6 个月后被购买者买走。 那么发行日为 2008 年 1 月 1 日，结算日为 2008 年 7 月 1 日，而到期日是在发行日 2008 年 1 月 1 日的 30 年后，即 2038 年 1 月 1 日。\n\nINTRATE 的计算公式如下：\n$$\\text{INTRATE} = \\frac{\\text{redemption} - \\text{investment}}{\\text{investment}} \\times \\frac{\\text{B}}{\\text{DIM}}$$\n其中：\n\n$\\text{B}$ = 一年之中的天数，取决于具体年份。\n$\\text{DIM}$ = 结算日与到期日之间的天数。\n\n\nsettlement 和 maturity 将被截尾取整。\n\nbasis 舍入为最接近的整数。\n\n如果出现以下情况，则返回错误：\n\nsettlement 或 maturity 不是有效日期。\nsettlement ≥ maturity。\ninvestment ≤ 0。\nredemption ≤ 0。\nbasis < 0 或者 basis > 4。\n\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/intrate/"
    },
    "IPMT": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/ipmt-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/ipmt-function-dax",
        "description-en-us": "Returns the interest payment for a given period for an investment based on periodic, constant payments and a constant interest rate.\nMake sure that you are consistent about the units you use for specifying rate and nper. If you make monthly payments on a four-year loan at 12 percent annual interest, use 0.12/12 for rate and 4*12 for nper. If you make annual payments on the same loan, use 0.12 for rate and 4 for nper.\n\nFor all the arguments, cash you pay out, such as deposits to savings, is represented by negative numbers; cash you receive, such as dividend checks, is represented by positive numbers.\n\ntype is rounded to the nearest integer.\n\nAn error is returned if:\n\nper < 1 or per > nper\nnper < 1\n\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Financial functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/financial-functions-dax",
        "category-zh-cn": "财务函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/financial-functions-dax",
        "description-zh-cn": "返回基于定期固定付款和固定利率计算得出的给定投资周期内支付的利息。\n确保用于指定 rate 和 nper 的单位是一致的。 如果你每月以 12% 的年利率偿还一笔 4 年期贷款，则利率 rate 为 0.12/12，nper 为 4*12。 如果你每年偿还金额相同的贷款，则利率 rate 为 0.12，nper 为 4。\n\n对于所有的参数，你支付的现金（如储蓄存款）用负数表示；你收到的现金（如股息支票）用正数表示。\n\ntype 舍入为最接近的整数。\n\n如果出现以下情况，则返回错误：\n\nper < 1 或 per > nper\nnper < 1\n\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/ipmt/"
    },
    "ISPMT": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/ispmt-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/ispmt-function-dax",
        "description-en-us": "Calculates the interest paid (or received) for the specified period of a loan (or investment) with even principal payments.\nMake sure that you are consistent about the units you use for specifying rate and nper. If you make monthly payments on a four-year loan at an annual interest rate of 12 percent, use 0.12/12 for rate and 4*12 for nper. If you make annual payments on the same loan, use 0.12 for rate and 4 for nper.\n\nFor all the arguments, the cash you pay out, such as deposits to savings or other withdrawals, is represented by negative numbers; the cash you receive, such as dividend checks and other deposits, is represented by positive numbers.\n\nISPMT counts each period beginning with zero, not one.\n\nMost loans use a repayment schedule with even periodic payments. The IPMT function returns the interest payment for a given period for this type of loan.\n\nSome loans use a repayment schedule with even principal payments. The ISPMT function returns the interest payment for a given period for this type of loan.\n\nAn error is returned if:\n\nnper = 0.\n\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Financial functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/financial-functions-dax",
        "category-zh-cn": "财务函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/financial-functions-dax",
        "description-zh-cn": "按照等额本金计算贷款（或投资）在指定期限内支付（或收取）的利息。\n确保用于指定 rate 和 nper 的单位是一致的。 如果你每月以 12% 的年利率偿还 4 年期贷款，则利率 rate 为 0.12/12，nper 为 4*12。 如果你每年偿还金额相同的贷款，则利率 rate 为 0.12，nper 为 4。\n\n对于所有参数，你支付的现金（如储蓄存款或其他取款）用负数表示；你收到的现金（如股息支票和其他存款）用正数表示。\n\nISPMT 从 0 开始对每个周期进行计数（而不是从 1 开始）。\n\n大多数贷款都采用等额分期付款的还款计划。 IPMT 函数返回此类型贷款在给定期间的利息付款。\n\n有些贷款采用等额本金还款计划。 ISPMT 函数返回此类型贷款在给定期限内的利息付款。\n\n如果出现以下情况，则返回错误：\n\nnper = 0。\n\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/ispmt/"
    },
    "MDURATION": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/mduration-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/mduration-function-dax",
        "description-en-us": "Returns the modified Macauley duration for a security with an assumed par value of \\$100.\nDates are stored as sequential serial numbers so they can be used in calculations. In DAX, December 30, 1899 is day 0, and January 1, 2008 is 39448 because it is 39,448 days after December 30, 1899.\n\nThe settlement date is the date a buyer purchases a coupon, such as a bond. The maturity date is the date when a coupon expires. For example, suppose a 30-year bond is issued on January 1, 2008, and is purchased by a buyer six months later. The issue date would be January 1, 2008, the settlement date would be July 1, 2008, and the maturity date is January 1, 2038, which is 30 years after the January 1, 2008, issue date.\n\nModified duration is defined as follows:\n$$\\text{MDURATION} = \\frac{\\text{DURATION}}{1 + (\\frac{\\text{Market yield}}{\\text{Coupon payments per year}})}$$\n\nsettlement and maturity are truncated to integers.\n\nfrequency, and basis are rounded to the nearest integer.\n\nAn error is returned if:\n\nsettlement or maturity is not a valid date.\nsettlement ≥ maturity.\ncoupon < 0.\nyld < 0\nfrequency is any number other than 1, 2, or 4.\nbasis < 0 or basis > 4.\n\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Financial functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/financial-functions-dax",
        "category-zh-cn": "财务函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/financial-functions-dax",
        "description-zh-cn": "返回修改后的证券（假定面值为 \\$100）麦考利久期。\n日期存储为连续的序列号，以便在计算中使用。 在 DAX 中，1899 年 12 月 30 日的序列号是 0，2008 年 1 月 1 日的序列号是 39448，这是因为它距 1899 年 12 月 30 日有 39,448 天。\n\n结算日是指购买者买入息票（如债券）的日期。 到期日是指息票到期的日期。 例如，假设在 2008 年 1 月 1 日发行的 30 年期债券，6 个月后被购买者买走。 那么发行日为 2008 年 1 月 1 日，结算日为 2008 年 7 月 1 日，而到期日是在发行日 2008 年 1 月 1 日的 30 年后，即 2038 年 1 月 1 日。\n\n修改后的久期定义如下：\n$$\\text{MDURATION} = \\frac{\\text{DURATION}}{1 + (\\frac{\\text{Market yield}}{\\text{Coupon payments per year}})}$$\n\nsettlement 和 maturity 将被截尾取整。\n\nfrequency 和 basis 舍入为最接近的整数。\n\n如果出现以下情况，则返回错误：\n\nsettlement 或 maturity 不是有效日期。\nsettlement ≥ maturity。\ncoupon < 0。\nyld < 0\nfrequency 是除 1、2 和 4 之外的任何数字。\nbasis < 0 或者 basis > 4。\n\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/mduration/"
    },
    "NOMINAL": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/nominal-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/nominal-function-dax",
        "description-en-us": "Returns the nominal annual interest rate, given the effective rate and the number of compounding periods per year.\nThe relationship between NOMINAL and EFFECT is shown in the following equation:\n$$\\text{EFFECT} = \\Big( 1 + \\frac{\\text{nominal_rate}}{\\text{npery}} \\Big)^{\\text{npery}} - 1$$\n\nnpery is rounded to the nearest integer.\n\nAn error is returned if:\n\neffect_rate ≤ 0.\nnpery < 1.\n\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Financial functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/financial-functions-dax",
        "category-zh-cn": "财务函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/financial-functions-dax",
        "description-zh-cn": "返回在给定实际利率和每年复利期数的情况下的名义年利率。\n下面的公式显示了 NOMINAL 与 EFFECT 之间的关系：\n$$\\text{EFFECT} = \\Big( 1 + \\frac{\\text{nominal_rate}}{\\text{npery}} \\Big)^{\\text{npery}} - 1$$\n\nnpery 舍入为最接近的整数。\n\n如果出现以下情况，则返回错误：\n\neffect_rate ≤ 0。\nnpery < 1。\n\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/nominal/"
    },
    "NPER": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/nper-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/nper-function-dax",
        "description-en-us": "Returns the number of periods for an investment based on periodic, constant payments and a constant interest rate.\ntype is rounded to the nearest integer.\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Financial functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/financial-functions-dax",
        "category-zh-cn": "财务函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/financial-functions-dax",
        "description-zh-cn": "返回基于定期固定付款和固定利率计算得出的投资周期数。\ntype 舍入为最接近的整数。\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/nper/"
    },
    "ODDFPRICE": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/oddfprice-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/oddfprice-function-dax",
        "description-en-us": "Returns the price per \\$100 face value of a security having an odd (short or long) first period.\nDates are stored as sequential serial numbers so they can be used in calculations. In DAX, December 30, 1899 is day 0, and January 1, 2008 is 39448 because it is 39,448 days after December 30, 1899.\n\nThe settlement date is the date a buyer purchases a coupon, such as a bond. The maturity date is the date when a coupon expires. For example, suppose a 30-year bond is issued on January 1, 2008, and is purchased by a buyer six months later. The issue date would be January 1, 2008, the settlement date would be July 1, 2008, and the maturity date would be January 1, 2038, which is 30 years after the January 1, 2008, issue date.\n\nODDFPRICE is calculated as follows:\nOdd short first coupon:\n$$\\text{ODDFPRICE} = \\bigg[ \\frac{\\text{redemption}}{(1 + \\frac{\\text{yld}}{\\text{frequency}})^{(N - 1 + \\frac{\\text{DSC}}{\\text{E}})}} \\bigg] + \\bigg[ \\frac{100 \\times \\frac{\\text{rate}}{\\text{frequency}} \\times \\frac{\\text{DFC}}{\\text{E}}}{(1 + \\frac{\\text{yld}}{\\text{frequency}})^{(\\frac{\\text{DSC}}{\\text{E}})}} \\bigg] + \\bigg[ \\sum^{N}_{k=2} \\frac{100 \\times \\frac{\\text{rate}}{\\text{frequency}}}{(1 + \\frac{\\text{yld}}{\\text{frequency}})^{(k - 1 + \\frac{\\text{DSC}}{\\text{E}})}} \\bigg] - \\Big[ 100 \\times \\frac{\\text{rate}}{\\text{frequency}} \\times \\frac{\\text{A}}{\\text{E}} \\Big] $$\nwhere:\n\n$\\text{A}$ = number of days from the beginning of the coupon period to the settlement date (accrued days).\n$\\text{DSC}$ = number of days from the settlement to the next coupon date.\n$\\text{DFC}$ = number of days from the beginning of the odd first coupon to the first coupon date.\n$\\text{E}$ = number of days in the coupon period.\n$\\text{N}$ = number of coupons payable between the settlement date and the redemption date. (If this number contains a fraction, it is raised to the next whole number.)\n\nOdd long first coupon:\n$$\\text{ODDFPRICE} = \\bigg[ \\frac{\\text{redemption}}{(1 + \\frac{\\text{yld}}{\\text{frequency}})^{(\\text{N} + \\text{N}_{q} + \\frac{\\text{DSC}}{\\text{E}})}} \\bigg] + \\bigg[ \\frac{100 \\times \\frac{\\text{rate}}{\\text{frequency}} \\times \\Big[ \\sum^{\\text{NC}}_{i=1} \\frac{\\text{DC}_{i}}{\\text{NL}_{i}} \\Big]  }{(1 + \\frac{\\text{yld}}{\\text{frequency}})^{(\\text{N}_{q} + \\frac{\\text{DSC}}{\\text{E}})}} \\bigg] + \\bigg[ \\sum^{\\text{N}}_{k=1} \\frac{100 \\times \\frac{\\text{rate}}{\\text{frequency}}}{(1 + \\frac{\\text{yld}}{\\text{frequency}})^{(k - \\text{N}_{q} + \\frac{\\text{DSC}}{\\text{E}})}} \\bigg] - \\Big[ 100 \\times \\frac{\\text{rate}}{\\text{frequency}} \\times \\sum^{\\text{NC}}_{i=1} \\frac{\\text{A}_{i}}{\\text{NL}_{i}} \\Big]$$\nwhere:\n\n$\\text{A}_{i}$ = number of days from the beginning of the $i^{th}$, or last, quasi-coupon period within odd period.\n$\\text{DC}_{i}$ = number of days from dated date (or issue date) to first quasi-coupon ($i = 1$) or number of days in quasi-coupon ($i = 2$,..., $i = \\text{NC}$).\n$\\text{DSC}$ = number of days from settlement to next coupon date.\n$\\text{E}$ = number of days in coupon period.\n$\\text{N}$ = number of coupons payable between the first real coupon date and redemption date. (If this number contains a fraction, it is raised to the next whole number.)\n$\\text{NC}$ = number of quasi-coupon periods that fit in odd period. (If this number contains a fraction, it is raised to the next whole number.)\n$\\text{NL}_{i}$ = normal length in days of the full $i^{th}$, or last, quasi-coupon period within odd period.\n$\\text{N}_{q}$ = number of whole quasi-coupon periods between settlement date and first coupon.\n\n\nsettlement, maturity, issue, and first_coupon are truncated to integers.\n\nbasis and frequency are rounded to the nearest integer.\n\nAn error is returned if:\n\nsettlement, maturity, issue, or first_coupon is not a valid date.\nmaturity > first_coupon > settlement > issue is not satisfied.\nrate < 0.\nyld < 0.\nredemption ≤ 0.\nfrequency is any number other than 1, 2, or 4.\nbasis < 0 or basis > 4.\n\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Financial functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/financial-functions-dax",
        "category-zh-cn": "财务函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/financial-functions-dax",
        "description-zh-cn": "返回每 \\$100 面值的首期息票日不固定（短期或长期）的证券的价格。\n日期存储为连续的序列号，以便在计算中使用。 在 DAX 中，1899 年 12 月 30 日的序列号是 0，2008 年 1 月 1 日的序列号是 39448，这是因为它距 1899 年 12 月 30 日有 39,448 天。\n\n结算日是指购买者买入息票（如债券）的日期。 到期日是指息票到期的日期。 例如，假设在 2008 年 1 月 1 日发行的 30 年期债券，6 个月后被购买者买走。 那么发行日为 2008 年 1 月 1 日，结算日为 2008 年 7 月 1 日，而到期日是在发行日 2008 年 1 月 1 日的 30 年后，即 2038 年 1 月 1 日。\n\nODDFPRICE 的计算方式如下：\n短期首期不固定息票：\n$$\\text{ODDFPRICE} = \\bigg[ \\frac{\\text{redemption}}{(1 + \\frac{\\text{yld}}{\\text{frequency}})^{(N - 1 + \\frac{\\text{DSC}}{\\text{E}})}} \\bigg] + \\bigg[ \\frac{100 \\times \\frac{\\text{rate}}{\\text{frequency}} \\times \\frac{\\text{DFC}}{\\text{E}}}{(1 + \\frac{\\text{yld}}{\\text{frequency}})^{(\\frac{\\text{DSC}}{\\text{E}})}} \\bigg] + \\bigg[ \\sum^{N}_{k=2} \\frac{100 \\times \\frac{\\text{rate}}{\\text{frequency}}}{(1 + \\frac{\\text{yld}}{\\text{frequency}})^{(k - 1 + \\frac{\\text{DSC}}{\\text{E}})}} \\bigg] - \\Big[ 100 \\times \\frac{\\text{rate}}{\\text{frequency}} \\times \\frac{\\text{A}}{\\text{E}} \\Big] $$\n其中：\n\n$\\text{A}$ = 从息票期开始到结算日之间的天数（累计天数）。\n$\\text{DSC}$ = 结算日到下一个息票日之间天数。\n$\\text{DFC}$ = 从首期不固定息票开始到首期息票日之间的天数。\n$\\text{E}$ = 息票期的天数。\n$\\text{N}$ = 结算日与赎回日之间的应付息票数。 （如果此数字包含一个分数，则向上取最接近的一个整数。）\n\n长期首期不固定息票：\n$$\\text{ODDFPRICE} = \\bigg[ \\frac{\\text{redemption}}{(1 + \\frac{\\text{yld}}{\\text{frequency}})^{(\\text{N} + \\text{N}_{q} + \\frac{\\text{DSC}}{\\text{E}})}} \\bigg] + \\bigg[ \\frac{100 \\times \\frac{\\text{rate}}{\\text{frequency}} \\times \\Big[ \\sum^{\\text{NC}}_{i=1} \\frac{\\text{DC}_{i}}{\\text{NL}_{i}} \\Big] }{(1 + \\frac{\\text{yld}}{\\text{frequency}})^{(\\text{N}_{q} + \\frac{\\text{DSC}}{\\text{E}})}} \\bigg] + \\bigg[ \\sum^{\\text{N}}_{k=1} \\frac{100 \\times \\frac{\\text{rate}}{\\text{frequency}}}{(1 + \\frac{\\text{yld}}{\\text{frequency}})^{(k - \\text{N}_{q} + \\frac{\\text{DSC}}{\\text{E}})}} \\bigg] - \\Big[ 100 \\times \\frac{\\text{rate}}{\\text{frequency}} \\times \\sum^{\\text{NC}}_{i=1} \\frac{\\text{A}_{i}}{\\text{NL}_{i}} \\Big]$$\n其中：\n\n$\\text{A}_{i}$ = 不固定息票期内从第 $i^{th}$ 个或最后一个准息票期开始算起的天数。\n$\\text{DC}_{i}$ = 从起息日（或发行日）到首期准息票 ($i = 1$) 的天数，或者准息票 ($i = 2$,..., $i = \\text{NC}$) 中的天数。\n$\\text{DSC}$ = 结算日到下一个息票日的天数。\n$\\text{E}$ = 息票期的天数。\n$\\text{N}$ = 首个实际息票日与赎回日之间应息票票数。 （如果此数字包含一个分数，则向上取最接近的一个整数。）\n$ \\text{NC} $ = 不固定息票期内的准息票期数。 （如果此数字包含一个分数，则向上取最接近的一个整数。）\n$\\text{NL}_{i}$ = 不固定息票期内完整的第 $i^{th}$ 个或最后一个准息票期的正常天数。\n$\\text{N}_{q}$ = 结算日与首期息票日之间的整个准息票期数。\n\n\nsettlement、maturity、issue 和 first_coupon 将被截尾取整。\n\nbasis 和 frequency 舍入为最接近的整数。\n\n如果出现以下情况，则返回错误：\n\nsettlement、maturity、issue 或 first_coupon 不是有效日期。\n不满足 maturity > first_coupon > settlement > issue 这一条件。\nrate < 0。\nyld < 0。\nredemption ≤ 0。\nfrequency 是除 1、2 和 4 之外的任何数字。\nbasis < 0 或者 basis > 4。\n\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/oddfprice/"
    },
    "ODDFYIELD": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/oddfyield-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/oddfyield-function-dax",
        "description-en-us": "Returns the yield of a security that has an odd (short or long) first period.\nDates are stored as sequential serial numbers so they can be used in calculations. In DAX, December 30, 1899 is day 0, and January 1, 2008 is 39448 because it is 39,448 days after December 30, 1899.\n\nThe settlement date is the date a buyer purchases a coupon, such as a bond. The maturity date is the date when a coupon expires. For example, suppose a 30-year bond is issued on January 1, 2008, and is purchased by a buyer six months later. The issue date would be January 1, 2008, the settlement date would be July 1, 2008, and the maturity date would be January 1, 2038, which is 30 years after the January 1, 2008, issue date.\n\nODDFYIELD is calculated using an iterative method. It uses the Newton method based on the formula used for the function ODDFPRICE. The yield is changed through 100 iterations until the estimated price with the given yield is close to the price. See ODDFPRICE for the formula that ODDFYIELD uses.\n\nsettlement, maturity, issue, and first_coupon are truncated to integers.\n\nbasis and frequency are rounded to the nearest integer.\n\nAn error is returned if:\n\nsettlement, maturity, issue, or first_coupon is not a valid date.\nmaturity > first_coupon > settlement > issue is not satisfied.\nrate < 0.\npr ≤ 0.\nredemption ≤ 0.\nfrequency is any number other than 1, 2, or 4.\nbasis < 0 or basis > 4.\n\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Financial functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/financial-functions-dax",
        "category-zh-cn": "财务函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/financial-functions-dax",
        "description-zh-cn": "返回首期息票日不固定（长期或短期）的证券的收益率。\n日期存储为连续的序列号，以便在计算中使用。 在 DAX 中，1899 年 12 月 30 日的序列号是 0，2008 年 1 月 1 日的序列号是 39448，这是因为它距 1899 年 12 月 30 日有 39,448 天。\n\n结算日是指购买者买入息票（如债券）的日期。 到期日是指息票到期的日期。 例如，假设在 2008 年 1 月 1 日发行的 30 年期债券，6 个月后被购买者买走。 那么发行日为 2008 年 1 月 1 日，结算日为 2008 年 7 月 1 日，而到期日是在发行日 2008 年 1 月 1 日的 30 年后，即 2038 年 1 月 1 日。\n\nODDFYIELD 是使用迭代方法计算的。 它根据用于函数 ODDFPRICE 的公式使用牛顿迭代法。 通过 100 次迭代来改变收益率，直到给定收益率下的预估价格与实际价格接近。 有关 ODDFYIELD 使用的公式，请参阅 ODDFPRICE。\n\nsettlement、maturity、issue 和 first_coupon 将被截尾取整。\n\nbasis 和 frequency 舍入为最接近的整数。\n\n如果出现以下情况，则返回错误：\n\nsettlement、maturity、issue 或 first_coupon 不是有效日期。\n不满足 maturity > first_coupon > settlement > issue 这一条件。\nrate < 0。\npr ≤ 0。\nredemption ≤ 0。\nfrequency 是除 1、2 和 4 之外的任何数字。\nbasis < 0 或者 basis > 4。\n\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/oddfyield/"
    },
    "ODDLPRICE": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/oddlprice-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/oddlprice-function-dax",
        "description-en-us": "Returns the price per \\$100 face value of a security having an odd (short or long) last coupon period.\nDates are stored as sequential serial numbers so they can be used in calculations. In DAX, December 30, 1899 is day 0, and January 1, 2008 is 39448 because it is 39,448 days after December 30, 1899.\n\nThe settlement date is the date a buyer purchases a coupon, such as a bond. The maturity date is the date when a coupon expires. For example, suppose a 30-year bond is issued on January 1, 2008, and is purchased by a buyer six months later. The issue date would be January 1, 2008, the settlement date would be July 1, 2008, and the maturity date would be January 1, 2038, which is 30 years after the January 1, 2008, issue date.\n\nsettlement, maturity, and last_interest are truncated to integers.\n\nbasis and frequency are rounded to the nearest integer.\n\nAn error is returned if:\n\nsettlement, maturity, or last_interest is not a valid date.\nmaturity > settlement > last_interest is not satisfied.\nrate < 0.\nyld < 0.\nredemption ≤ 0.\nfrequency is any number other than 1, 2, or 4.\nbasis < 0 or basis > 4.\n\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Financial functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/financial-functions-dax",
        "category-zh-cn": "财务函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/financial-functions-dax",
        "description-zh-cn": "返回末期息票日不固定（长期或短期）的证券每 \\$100 面值的价格。\n日期存储为连续的序列号，以便在计算中使用。 在 DAX 中，1899 年 12 月 30 日的序列号是 0，2008 年 1 月 1 日的序列号是 39448，这是因为它距 1899 年 12 月 30 日有 39,448 天。\n\n结算日是指购买者买入息票（如债券）的日期。 到期日是指息票到期的日期。 例如，假设在 2008 年 1 月 1 日发行的 30 年期债券，6 个月后被购买者买走。 那么发行日为 2008 年 1 月 1 日，结算日为 2008 年 7 月 1 日，而到期日是在发行日 2008 年 1 月 1 日的 30 年后，即 2038 年 1 月 1 日。\n\nsettlement、maturity 和 last_interest 将被截尾取整。\n\nbasis 和 frequency 舍入为最接近的整数。\n\n如果出现以下情况，则返回错误：\n\nsettlement、maturity 或 last_interest 不是有效日期。\n不满足 maturity > settlement > last_interest。\nrate < 0。\nyld < 0。\nredemption ≤ 0。\nfrequency 是除 1、2 和 4 之外的任何数字。\nbasis < 0 或者 basis > 4。\n\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/oddlprice/"
    },
    "ODDLYIELD": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/oddlyield-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/oddlyield-function-dax",
        "description-en-us": "Returns the yield of a security that has an odd (short or long) last period.\nDates are stored as sequential serial numbers so they can be used in calculations. In DAX, December 30, 1899 is day 0, and January 1, 2008 is 39448 because it is 39,448 days after December 30, 1899.\n\nThe settlement date is the date a buyer purchases a coupon, such as a bond. The maturity date is the date when a coupon expires. For example, suppose a 30-year bond is issued on January 1, 2008, and is purchased by a buyer six months later. The issue date would be January 1, 2008, the settlement date would be July 1, 2008, and the maturity date would be January 1, 2038, which is 30 years after the January 1, 2008, issue date.\n\nODDLYIELD is calculated as follows:\n$$\\text{ODDLYIELD} = \\bigg[ \\frac{(\\text{redemption} + ((\\sum^{\\text{NC}}_{i=1} \\frac{\\text{DC}_{i}}{\\text{NL}_{i}}) \\times \\frac{100 \\times \\text{rate}}{\\text{frequency}})) - (\\text{par} + ((\\sum^{\\text{NC}}_{i=1} \\frac{\\text{A}_{i}}{\\text{NL}_{i}}) \\times \\frac{100 \\times \\text{rate}}{\\text{frequency}}))}{\\text{par} + ((\\sum^{\\text{NC}}_{i=1} \\frac{\\text{A}_{i}}{\\text{NL}_{i}}) \\times \\frac{100 \\times \\text{rate}}{\\text{frequency}})} \\bigg] \\times \\bigg[ \\frac{\\text{frequency}}{(\\sum^{\\text{NC}}_{i=1} \\frac{\\text{DSC}_{i}}{\\text{NL}_{i}})} \\bigg]$$\nwhere:\n\n$\\text{A}_{i}$ = number of accrued days for the $i^{th}$, or last, quasi-coupon period within odd period counting forward from last interest date before redemption.\n$\\text{DC}_{i}$ = number of days counted in the $i^{th}$, or last, quasi-coupon period as delimited by the length of the actual coupon period.\n$\\text{NC}$ = number of quasi-coupon periods that fit in odd period; if this number contains a fraction it will be raised to the next whole number.\n$\\text{NL}_{i}$ = normal length in days of the $i^{th}$, or last, quasi-coupon period within odd coupon period.\n\n\nsettlement, maturity, last_interest are truncated to integers.\n\nbasis and frequency are rounded to the nearest integer.\n\nAn error is returned if:\n\nsettlement, maturity, last_interest is not a valid date.\nmaturity > settlement > last_interest is not satisfied.\nrate < 0.\npr ≤ 0.\nredemption ≤ 0.\nfrequency is any number other than 1, 2, or 4.\nbasis < 0 or basis > 4.\n\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Financial functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/financial-functions-dax",
        "category-zh-cn": "财务函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/financial-functions-dax",
        "description-zh-cn": "返回末期息票日不固定（长期或短期）的证券的收益率。\n日期存储为连续的序列号，以便在计算中使用。 在 DAX 中，1899 年 12 月 30 日的序列号是 0，2008 年 1 月 1 日的序列号是 39448，这是因为它距 1899 年 12 月 30 日有 39,448 天。\n\n结算日是指购买者买入息票（如债券）的日期。 到期日是指息票到期的日期。 例如，假设在 2008 年 1 月 1 日发行的 30 年期债券，6 个月后被购买者买走。 那么发行日为 2008 年 1 月 1 日，结算日为 2008 年 7 月 1 日，而到期日是在发行日 2008 年 1 月 1 日的 30 年后，即 2038 年 1 月 1 日。\n\nODDLYIELD 的计算公式如下：\n$$\\text{ODDLYIELD} = \\bigg[ \\frac{(\\text{redemption} + ((\\sum^{\\text{NC}}_{i=1} \\frac{\\text{DC}_{i}}{\\text{NL}_{i}}) \\times \\frac{100 \\times \\text{rate}}{\\text{frequency}})) - (\\text{par} + ((\\sum^{\\text{NC}}_{i=1} \\frac{\\text{A}_{i}}{\\text{NL}_{i}}) \\times \\frac{100 \\times \\text{rate}}{\\text{frequency}}))}{\\text{par} + ((\\sum^{\\text{NC}}_{i=1} \\frac{\\text{A}_{i}}{\\text{NL}_{i}}) \\times \\frac{100 \\times \\text{rate}}{\\text{frequency}})} \\bigg] \\times \\bigg[ \\frac{\\text{frequency}}{(\\sum^{\\text{NC}}_{i=1} \\frac{\\text{DSC}_{i}}{\\text{NL}_{i}})} \\bigg]$$\n其中：\n\n$\\text{A}_{i}$ = 赎回前从最后一个付息日到不固定付息期内第 $i$ 个或最后一个准付息期的应计天数。\n$\\text{DC}_{i}$ = 按实际付息期划定的第 $i$ 个或最后一个准付息期的天数。\n$\\text{NC}$ = 在不固定付息期内的准付息期的期数（如果包含小数，则向上舍入为整数）。\n$\\text{NL}_{i}$ = 不固定付息期内第 $i$ 个或最后一个准付息期的正常天数。\n\n\nsettlement、maturity、last_interest 将被截尾取整。\n\nbasis 和 frequency 舍入为最接近的整数。\n\n如果出现以下情况，则返回错误：\n\nsettlement、maturity、last_interest 不是有效日期。\n不满足 maturity > settlement > last_interest。\nrate < 0。\npr ≤ 0。\nredemption ≤ 0。\nfrequency 是除 1、2 和 4 之外的任何数字。\nbasis < 0 或者 basis > 4。\n\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/oddlyield/"
    },
    "PDURATION": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/pduration-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/pduration-function-dax",
        "description-en-us": "Returns the number of periods required by an investment to reach a specified value.\nPDURATION uses the following equation:\n$$\\text{PDURATION} = \\frac{log(\\text{fv}) - log(\\text{pv})}{log(1 + \\text{rate})}$$\n\nAn error is returned if:\n\nrate ≤ 0.\npv ≤ 0.\nfv ≤ 0.\n\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Financial functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/financial-functions-dax",
        "category-zh-cn": "财务函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/financial-functions-dax",
        "description-zh-cn": "返回投资达到指定值所需的期数。\nPDURATION 使用以下公式：\n$$\\text{PDURATION} = \\frac{log(\\text{fv}) - log(\\text{pv})}{log(1 + \\text{rate})}$$\n\n如果出现以下情况，则返回错误：\n\nrate ≤ 0。\npv ≤ 0。\nfv ≤ 0。\n\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/pduration/"
    },
    "PMT": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/pmt-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/pmt-function-dax",
        "description-en-us": "Calculates the payment for a loan based on constant payments and a constant interest rate.\nThe payment returned by PMT includes principal and interest but no taxes, reserve payments, or fees sometimes associated with loans.\n\nMake sure that you are consistent about the units you use for specifying rate and nper. If you make monthly payments on a four-year loan at an annual interest rate of 12 percent, use 0.12/12 for rate and 4*12 for nper. If you make annual payments on the same loan, use 0.12 for rate and 4 for nper.\n\ntype is rounded to the nearest integer.\n\nAn error is returned if:\n\nnper < 1\n\n\n",
        "category-en-us": "Financial functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/financial-functions-dax",
        "category-zh-cn": "财务函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/financial-functions-dax",
        "description-zh-cn": "根据固定的付款期数和固定利率计算贷款的付款额。\nPMT 返回的付款额包含本金和利息，但不包含税款、保留支付或某些与贷款有关的费用。\n\n确保用于指定 rate 和 nper 的单位是一致的。 如果你每月以 12% 的年利率偿还 4 年期贷款，则利率 rate 为 0.12/12，nper 为 4*12。 如果你每年偿还金额相同的贷款，则利率 rate 为 0.12，nper 为 4。\n\ntype 舍入为最接近的整数。\n\n如果出现以下情况，则返回错误：\n\nnper < 1\n\n\n",
        "url-dax-guide": "https://dax.guide/pmt/"
    },
    "PPMT": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/ppmt-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/ppmt-function-dax",
        "description-en-us": "Returns the payment on the principal for a given period for an investment based on periodic, constant payments and a constant interest rate.\nMake sure that you are consistent about the units you use for specifying rate and nper. If you make monthly payments on a four-year loan at an annual interest rate of 12 percent, use 0.12/12 for rate and 4*12 for nper. If you make annual payments on the same loan, use 0.12 for rate and 4 for nper.\n\ntype is rounded to the nearest integer.\n\nAn error is returned if:\n\nper < 1 or per > nper\nnper < 1\n\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Financial functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/financial-functions-dax",
        "category-zh-cn": "财务函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/financial-functions-dax",
        "description-zh-cn": "返回基于定期固定付款和固定利率计算得出的给定投资周期的本金付款。\n确保用于指定 rate 和 nper 的单位是一致的。 如果你每月以 12% 的年利率偿还 4 年期贷款，则利率 rate 为 0.12/12，nper 为 4*12。 如果你每年偿还金额相同的贷款，则利率 rate 为 0.12，nper 为 4。\n\ntype 舍入为最接近的整数。\n\n如果出现以下情况，则返回错误：\n\nper < 1 或 per > nper\nnper < 1\n\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/ppmt/"
    },
    "PRICE": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/price-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/price-function-dax",
        "description-en-us": "Returns the price per \\$100 face value of a security that pays periodic interest.\nDates are stored as sequential serial numbers so they can be used in calculations. In DAX, December 30, 1899 is day 0, and January 1, 2008 is 39448 because it is 39,448 days after December 30, 1899.\n\nThe settlement date is the date a buyer purchases a coupon, such as a bond. The maturity date is the date when a coupon expires. For example, suppose a 30-year bond is issued on January 1, 2008, and is purchased by a buyer six months later. The issue date would be January 1, 2008, the settlement date would be July 1, 2008, and the maturity date would be January 1, 2038, which is 30 years after the January 1, 2008, issue date.\n\nsettlement and maturity are truncated to integers.\n\nbasis and frequency are rounded to the nearest integer.\n\nAn error is returned if:\n\nsettlement or maturity is not a valid date.\nsettlement ≥ maturity.\nrate < 0.\nyld < 0.\nredemption ≤ 0.\nfrequency is any number other than 1, 2, or 4.\nbasis < 0 or basis > 4.\n\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Financial functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/financial-functions-dax",
        "category-zh-cn": "财务函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/financial-functions-dax",
        "description-zh-cn": "返回支付定期利息的证券的每 \\$100 面值的价格。\n日期存储为连续的序列号，以便在计算中使用。 在 DAX 中，1899 年 12 月 30 日的序列号是 0，2008 年 1 月 1 日的序列号是 39448，这是因为它距 1899 年 12 月 30 日有 39,448 天。\n\n结算日是指购买者买入息票（如债券）的日期。 到期日是指息票到期的日期。 例如，假设在 2008 年 1 月 1 日发行的 30 年期债券，6 个月后被购买者买走。 那么发行日为 2008 年 1 月 1 日，结算日为 2008 年 7 月 1 日，而到期日是在发行日 2008 年 1 月 1 日的 30 年后，即 2038 年 1 月 1 日。\n\nsettlement 和 maturity 将被截尾取整。\n\nbasis 和 frequency 舍入为最接近的整数。\n\n如果出现以下情况，则返回错误：\n\nsettlement 或 maturity 不是有效日期。\nsettlement ≥ maturity。\nrate < 0。\nyld < 0。\nredemption ≤ 0。\nfrequency 是除 1、2 和 4 之外的任何数字。\nbasis < 0 或者 basis > 4。\n\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/price/"
    },
    "PRICEDISC": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/pricedisc-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/pricedisc-function-dax",
        "description-en-us": "Returns the price per \\$100 face value of a discounted security.\nDates are stored as sequential serial numbers so they can be used in calculations. In DAX, December 30, 1899 is day 0, and January 1, 2008 is 39448 because it is 39,448 days after December 30, 1899.\n\nThe settlement date is the date a buyer purchases a coupon, such as a bond. The maturity date is the date when a coupon expires. For example, suppose a 30-year bond is issued on January 1, 2018, and is purchased by a buyer six months later. The issue date would be January 1, 2018, the settlement date would be July 1, 2018, and the maturity date would be January 1, 2048, 30 years after the January 1, 2018, issue date.\n\nPRICEDISC is calculated as follows:\n$$\\text{PRICEDISC} = \\text{redemption} - \\text{discount} \\times \\text{redemption} \\times \\frac{\\text{DSM}}{\\text{B}}$$\nwhere:\n\n$\\text{B}$ = number of days in year, depending on year basis.\n$\\text{DSM}$ = number of days from settlement to maturity.\n\n\nsettlement and maturity are truncated to integers.\n\nbasis is rounded to the nearest integer.\n\nAn error is returned if:\n\nsettlement or maturity is not a valid date.\nsettlement ≥ maturity.\ndiscount ≤ 0.\nredemption ≤ 0.\nbasis < 0 or basis > 4.\n\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Financial functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/financial-functions-dax",
        "category-zh-cn": "财务函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/financial-functions-dax",
        "description-zh-cn": "返回每 \\$100 面值的贴现证券的价格。\n日期存储为连续的序列号，以便在计算中使用。 在 DAX 中，1899 年 12 月 30 日的序列号是 0，2008 年 1 月 1 日的序列号是 39448，这是因为它距 1899 年 12 月 30 日有 39,448 天。\n\n结算日是指购买者买入息票（如债券）的日期。 到期日是指息票到期的日期。 例如，假设在 2018 年 1 月 1 日发行的 30 年期债券，6 个月后被购买者买走。 那么发行日为 2018 年 1 月 1 日，结算日为 2018 年 7 月 1 日，而到期日是在发行日 2018 年 1 月 1 日的 30 年后，即 2048 年 1 月 1 日。\n\nPRICEDISC 的计算公式如下：\n$$\\text{PRICEDISC} = \\text{redemption} - \\text{discount} \\times \\text{redemption} \\times \\frac{\\text{DSM}}{\\text{B}}$$\n其中：\n\n$\\text{B}$ = 一年之中的天数，取决于具体年份。\n$\\text{DSM}$ = 结算日与到期日之间的天数。\n\n\nsettlement 和 maturity 将被截尾取整。\n\nbasis 舍入为最接近的整数。\n\n如果出现以下情况，则返回错误：\n\nsettlement 或 maturity 不是有效日期。\nsettlement ≥ maturity。\ndiscount ≤ 0。\nredemption ≤ 0。\nbasis < 0 或者 basis > 4。\n\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/pricedisc/"
    },
    "PRICEMAT": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/pricemat-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/pricemat-function-dax",
        "description-en-us": "Returns the price per \\$100 face value of a security that pays interest at maturity.\nDates are stored as sequential serial numbers so they can be used in calculations. In DAX, December 30, 1899 is day 0, and January 1, 2008 is 39448 because it is 39,448 days after December 30, 1899.\n\nThe settlement date is the date a buyer purchases a coupon, such as a bond. The maturity date is the date when a coupon expires. For example, suppose a 30-year bond is issued on January 1, 2008, and is purchased by a buyer six months later. The issue date would be January 1, 2008, the settlement date would be July 1, 2008, and the maturity date would be January 1, 2038, which is 30 years after the January 1, 2008, issue date.\n\nPRICEMAT is calculated as follows:\n$$\\text{PRICEMAT} = \\frac{100 + (\\frac{\\text{DIM}}{\\text{B}} \\times \\text{rate} \\times 100)}{1 + (\\frac{\\text{DSM}}{\\text{B}} \\times \\text{yld})} - (\\frac{\\text{A}}{\\text{B}} \\times \\text{rate} \\times 100)$$\nwhere:\n\n$\\text{B}$ = number of days in year, depending on year basis.\n$\\text{DSM}$ = number of days from settlement to maturity.\n$\\text{DIM}$ = number of days from issue to maturity.\n$\\text{A}$ = number of days from issue to settlement.\n\n\nsettlement, maturity, and issue are truncated to integers.\n\nbasis is rounded to the nearest integer.\n\nAn error is returned if:\n\nsettlement, maturity, or issue is not a valid date.\nmaturity > settlement > issue is not satisfied.\nrate < 0.\nyld < 0.\nbasis < 0 or basis > 4.\n\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Financial functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/financial-functions-dax",
        "category-zh-cn": "财务函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/financial-functions-dax",
        "description-zh-cn": "返回到期支付利息的每 \\$100 面值的证券的价格。\n日期存储为连续的序列号，以便在计算中使用。 在 DAX 中，1899 年 12 月 30 日的序列号是 0，2008 年 1 月 1 日的序列号是 39448，这是因为它距 1899 年 12 月 30 日有 39,448 天。\n\n结算日是指购买者买入息票（如债券）的日期。 到期日是指息票到期的日期。 例如，假设在 2008 年 1 月 1 日发行的 30 年期债券，6 个月后被购买者买走。 那么发行日为 2008 年 1 月 1 日，结算日为 2008 年 7 月 1 日，而到期日是在发行日 2008 年 1 月 1 日的 30 年后，即 2038 年 1 月 1 日。\n\nPRICEMAT 的计算公式如下：\n$$\\text{PRICEMAT} = \\frac{100 + (\\frac{\\text{DIM}}{\\text{B}} \\times \\text{rate} \\times 100)}{1 + (\\frac{\\text{DSM}}{\\text{B}} \\times \\text{yld})} - (\\frac{\\text{A}}{\\text{B}} \\times \\text{rate} \\times 100)$$\n其中：\n\n$\\text{B}$ = 一年之中的天数，取决于具体年份。\n$\\text{DSM}$ = 结算日与到期日之间的天数。\n$\\text{DIM}$ = 发行日与到期日之间的天数。\n$\\text{A}$ = 发行日与结算日之间的天数。\n\n\nsettlement、maturity 和 issue 将被截尾取整。\n\nbasis 舍入为最接近的整数。\n\n如果出现以下情况，则返回错误：\n\nsettlement、maturity 或 issue 不是有效日期。\n不满足 maturity > settlement > issue 这一条件。\nrate < 0。\nyld < 0。\nbasis < 0 或者 basis > 4。\n\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/pricemat/"
    },
    "PV": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/pv-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/pv-function-dax",
        "description-en-us": "Calculates the present value of a loan or an investment, based on a constant interest rate. You can use PV with either periodic, constant payments (such as a mortgage or other loan), and/or a future value that's your investment goal.\nMake sure that you are consistent about the units you use for specifying rate and nper. If you make monthly payments on a four-year loan at 12 percent annual interest, use 0.12/12 for rate and 4*12 for nper. If you make annual payments on the same loan, use 0.12 for rate and 4 for nper.\n\nThe following functions apply to annuities:\n\nCUMIPMT\nCUMPRINC\nFV\nIPMT\nPMT\nPPMT\nPV\nRATE\nXIRR\nXNPV\n\n\nAn annuity is a series of constant cash payments made over a continuous period. For example, a car loan or a mortgage is an annuity. For more information, see the description for each annuity function.\n\nIn annuity functions, cash you pay out, such as a deposit to savings, is represented by a negative number; cash you receive, such as a dividend check, is represented by a positive number. For example, a \\$1,000 deposit to the bank would be represented by the argument -1000 if you are the depositor and by the argument 1000 if you are the bank.\n\nOne financial argument is solved in terms of the others.\n\nIf rate is not 0, then:\n$$\\text{pv} \\times (1 + \\text{rate})^{\\text{nper}} + \\text{pmt}(1 + \\text{rate} \\times \\text{type}) \\times \\bigg( \\frac{(1 + \\text{rate})^{\\text{nper}} - 1}{\\text{rate}} \\bigg) + \\text{fv} = 0$$\n\nIf rate is 0, then:\n$$(\\text{pmt} \\times \\text{nper}) + \\text{pv} + \\text{fv} = 0$$\n\n\n\ntype is rounded to the nearest integer.\n\nAn error is returned if:\n\nnper < 1 or blank\n\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Financial functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/financial-functions-dax",
        "category-zh-cn": "财务函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/financial-functions-dax",
        "description-zh-cn": "根据固定利率计算贷款或投资的现值。 可将 PV 用于等额分期还款（比如抵押贷款或其他贷款）和/或投资的未来值目标。\n确保用于指定 rate 和 nper 的单位是一致的。 如果你每月以 12% 的年利率偿还一笔 4 年期贷款，则利率 rate 为 0.12/12，nper 为 4*12。 如果你每年偿还金额相同的贷款，则利率 rate 为 0.12，nper 为 4。\n\n年金可采用以下函数：\n\nCUMIPMT\nCUMPRINC\nFV\nIPMT\nPMT\nPPMT\nPV\nRATE\nXIRR\nXNPV\n\n\n年金是指在连续的一段时间内支付的一连串固定的现金。 例如，汽车贷款或抵押贷款就是一种年金。 有关详细信息，请查看每种年金函数的描述。\n\n在年金函数中，你支付的现金（例如储蓄存款）由负数表示；你收到的现金（例如股息支票）由正数表示。 例如，对于一笔 \\$1,000 的银行存款，如果你是存款人，则它用参数 -1000 来表示；如果你是银行，则用参数 1000 来表示。\n\n财务参数可依照其他参数求出。\n\n如果利率 rate 不为 0，则：\n$$\\text{pv} \\times (1 + \\text{rate})^{\\text{nper}} + \\text{pmt}(1 + \\text{rate} \\times \\text{type}) \\times \\bigg( \\frac{(1 + \\text{rate})^{\\text{nper}} - 1}{\\text{rate}} \\bigg) + \\text{fv} = 0$$\n\n如果利率 rate 为 0，则：\n$$(\\text{pmt} \\times \\text{nper}) + \\text{pv} + \\text{fv} = 0$$\n\n\n\ntype 舍入为最接近的整数。\n\n如果出现以下情况，则返回错误：\n\nnper < 1 或空白\n\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/pv/"
    },
    "RATE": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/rate-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/rate-function-dax",
        "description-en-us": "Returns the interest rate per period of an annuity. RATE is calculated by iteration and can have zero or more solutions. If the successive results of RATE do not converge to within 0.0000001 after 20 iterations, an error is returned.\nMake sure that you are consistent about the units you use for specifying guess and nper. If you make monthly payments on a four-year loan at 12 percent annual interest, use 0.12/12 for guess and 4*12 for nper. If you make annual payments on the same loan, use 0.12 for guess and 4 for nper.\n\ntype is rounded to the nearest integer.\n\nAn error is returned if:\n\nnper ≤ 0.\nRATE does not converge to within 0.0000001 after 20 iterations\n\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Financial functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/financial-functions-dax",
        "category-zh-cn": "财务函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/financial-functions-dax",
        "description-zh-cn": "返回年金的每个周期的利率。 RATE 通过迭代计算得出，可以有零个或多个解决方案。 如果 RATE 的连续结果在 20 次迭代后未收敛到 0.0000001 以内，则返回错误。\n请确保用于指定 guess 和 nper 的单位一致。 如果你每月以 12% 的年利率偿还一笔 4 年期贷款，则 guess 为 0.12/12，nper 为 4*12。 如果你每年偿还金额相同的贷款，则 guess 为 0.12，nper 为 4。\n\ntype 舍入为最接近的整数。\n\n如果出现以下情况，则返回错误：\n\nnper ≤ 0。\nRATE 在 20 次迭代后未收敛到 0.0000001 以内\n\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/rate/"
    },
    "RECEIVED": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/received-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/received-function-dax",
        "description-en-us": "Returns the amount received at maturity for a fully invested security.\nDates are stored as sequential serial numbers so they can be used in calculations. In DAX, December 30, 1899 is day 0, and January 1, 2008 is 39448 because it is 39,448 days after December 30, 1899.\n\nThe settlement date is the date a buyer purchases a coupon, such as a bond. The maturity date is the date when a coupon expires. For example, suppose a 30-year bond is issued on January 1, 2008, and is purchased by a buyer six months later. The issue date would be January 1, 2008, the settlement date would be July 1, 2008, and the maturity date would be January 1, 2038, which is 30 years after the January 1, 2008, issue date.\n\nRECEIVED is calculated as follows:\n$$\\text{RECEIVED} = \\frac{\\text{investment}}{1 - (\\text{discount} \\times \\frac{\\text{DIM}}{\\text{B}})}$$\nwhere:\n\n$\\text{B}$ = number of days in a year, depending on the year basis.\n$\\text{DIM}$ = number of days from issue to maturity.\n\n\nsettlement and maturity are truncated to integers.\n\nbasis is rounded to the nearest integer.\n\nAn error is returned if:\n\nsettlement or maturity is not a valid date.\nsettlement ≥ maturity.\ninvestment ≤ 0.\ndiscount ≤ 0.\nbasis < 0 or basis > 4.\n\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Financial functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/financial-functions-dax",
        "category-zh-cn": "财务函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/financial-functions-dax",
        "description-zh-cn": "返回一次性付息的证券到期收回的金额。\n日期存储为连续的序列号，以便在计算中使用。 在 DAX 中，1899 年 12 月 30 日的序列号是 0，2008 年 1 月 1 日的序列号是 39448，这是因为它距 1899 年 12 月 30 日有 39,448 天。\n\n结算日是指购买者买入息票（如债券）的日期。 到期日是指息票到期的日期。 例如，假设在 2008 年 1 月 1 日发行的 30 年期债券，6 个月后被购买者买走。 那么发行日为 2008 年 1 月 1 日，结算日为 2008 年 7 月 1 日，而到期日是在发行日 2008 年 1 月 1 日的 30 年后，即 2038 年 1 月 1 日。\n\nRECEIVED 的计算公式如下：\n$$\\text{RECEIVED} = \\frac{\\text{investment}}{1 - (\\text{discount} \\times \\frac{\\text{DIM}}{\\text{B}})}$$\n其中：\n\n$\\text{B}$ = 一年之中的天数，取决于具体年份。\n$\\text{DIM}$ = 发行日与到期日之间的天数。\n\n\nsettlement 和 maturity 将被截尾取整。\n\nbasis 舍入为最接近的整数。\n\n如果出现以下情况，则返回错误：\n\nsettlement 或 maturity 不是有效日期。\nsettlement ≥ maturity。\ninvestment ≤ 0。\ndiscount ≤ 0。\nbasis < 0 或者 basis > 4。\n\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/received/"
    },
    "RRI": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/rri-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/rri-function-dax",
        "description-en-us": "Returns an equivalent interest rate for the growth of an investment.\nRRI returns the interest rate given $\\text{nper}$ (the number of periods), $\\text{pv}$ (present value), and $\\text{fv}$ (future value), calculated by using the following equation:\n$$\\bigg( \\frac{\\text{fv}}{\\text{pv}} \\bigg)^{(\\frac{1}{\\text{}nper})} - 1$$\n\nAn error is returned if:\n\nnper ≤ 0.\n\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Financial functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/financial-functions-dax",
        "category-zh-cn": "财务函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/financial-functions-dax",
        "description-zh-cn": "返回投资增长的等效利率。\nRRI 返回给定 $\\text{nper}$（周期数）、$\\text{pv}$（现值）和 $\\text{fv}$（未来值）的利率，该利率使用以下公式进行计算：\n$$\\bigg( \\frac{\\text{fv}}{\\text{pv}} \\bigg)^{(\\frac{1}{\\text{}nper})} - 1$$\n\n如果出现以下情况，则返回错误：\n\nnper ≤ 0。\n\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/rri/"
    },
    "SLN": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/sln-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/sln-function-dax",
        "description-en-us": "Returns the straight-line depreciation of an asset for one period.\nAn error is returned if:\nlife = 0.\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Financial functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/financial-functions-dax",
        "category-zh-cn": "财务函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/financial-functions-dax",
        "description-zh-cn": "返回一段时间内资产的直线折旧。\n如果出现以下情况，则返回错误：\nlife = 0。\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/sln/"
    },
    "SYD": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/syd-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/syd-function-dax",
        "description-en-us": "Returns the sum-of-years' digits depreciation of an asset for a specified period.\nSYD is calculated as follows:\n$$\\text{SYD} = \\frac{(\\text{cost} - \\text{salvage}) \\times (\\text{life} - \\text{per} + 1) \\times 2}{(\\text{life}) \\times (\\text{life} + 1)}$$\n\nAn error is returned if:\n\nlife < 1.\nper < 1 or per > life.\n\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Financial functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/financial-functions-dax",
        "category-zh-cn": "财务函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/financial-functions-dax",
        "description-zh-cn": "返回指定期间内资产的年限总额折旧。\nSYD 的计算公式如下：\n$$\\text{SYD} = \\frac{(\\text{cost} - \\text{salvage}) \\times (\\text{life} - \\text{per} + 1) \\times 2}{(\\text{life}) \\times (\\text{life} + 1)}$$\n\n如果出现以下情况，则返回错误：\n\nlife < 1。\nper < 1 或 per > life。\n\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/syd/"
    },
    "TBILLEQ": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/tbilleq-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/tbilleq-function-dax",
        "description-en-us": "Returns the bond-equivalent yield for a Treasury bill.\nDates are stored as sequential serial numbers so they can be used in calculations. In DAX, December 30, 1899 is day 0, and January 1, 2008 is 39448 because it is 39,448 days after December 30, 1899.\n\nTBILLEQ is calculated as:\n$$\\text{TBILLEQ} = \\frac{365 \\times \\text{discount}}{360 - (\\text{discount} \\times \\text{DSM})}$$\nwhere:\n\n$\\text{DSM}$ is the number of days between settlement and maturity computed according to the 360 days per year basis.\n\n\nsettlement and maturity are truncated to integers.\n\nAn error is returned if:\n\nsettlement or maturity is not a valid date.\nsettlement ≥ maturity or maturity is more than one year after settlement.\ndiscount ≤ 0.\n\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Financial functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/financial-functions-dax",
        "category-zh-cn": "财务函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/financial-functions-dax",
        "description-zh-cn": "返回国库券的债券等值收益率。\n日期存储为连续的序列号，以便在计算中使用。 在 DAX 中，1899 年 12 月 30 日的序列号是 0，2008 年 1 月 1 日的序列号是 39448，这是因为它距 1899 年 12 月 30 日有 39,448 天。\n\nTBILLEQ 计算如下：\n$$\\text{TBILLEQ} = \\frac{365 \\times \\text{discount}}{360 - (\\text{discount} \\times \\text{DSM})}$$\n其中：\n\n$\\text{DSM}$ 是根据每年 360 天计算的从结算日至到期日之间的天数。\n\n\nsettlement 和 maturity 将被截尾取整。\n\n如果出现以下情况，则返回错误：\n\nsettlement 或 maturity 不是有效日期。\nsettlement ≥ maturity，或者到期日为结算日起一年之后。\ndiscount ≤ 0。\n\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/tbilleq/"
    },
    "TBILLPRICE": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/tbillprice-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/tbillprice-function-dax",
        "description-en-us": "Returns the price per \\$100 face value for a Treasury bill.\nDates are stored as sequential serial numbers so they can be used in calculations. In DAX, December 30, 1899 is day 0, and January 1, 2008 is 39448 because it is 39,448 days after December 30, 1899.\n\nTBILLPRICE is calculated as follows:\n$$\\text{TBILLPRICE} = 100 \\times (1 - \\frac{\\text{discount} \\times \\text{DSM}}{360})$$\nwhere:\n\n$\\text{DSM}$ = number of days from settlement to maturity, excluding any maturity date that is more than one calendar year after the settlement date.\n\n\nsettlement and maturity are truncated to integers.\n\nAn error is returned if:\n\nsettlement or maturity is not a valid date.\nsettlement ≥ maturity or maturity is more than one year after settlement.\ndiscount ≤ 0.\n\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Financial functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/financial-functions-dax",
        "category-zh-cn": "财务函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/financial-functions-dax",
        "description-zh-cn": "返回每 \\$100 面值的国库券的价格。\n日期存储为连续的序列号，以便在计算中使用。 在 DAX 中，1899 年 12 月 30 日的序列号是 0，2008 年 1 月 1 日的序列号是 39448，这是因为它距 1899 年 12 月 30 日有 39,448 天。\n\nTBILLPRICE 的计算公式如下：\n$$\\text{TBILLPRICE} = 100 \\times (1 - \\frac{\\text{discount} \\times \\text{DSM}}{360})$$\n其中：\n\n$\\text{DSM}$ = 结算日至到期日的天数，不包括结算日后超过一个日历年的任何到期日。\n\n\nsettlement 和 maturity 将被截尾取整。\n\n如果出现以下情况，则返回错误：\n\nsettlement 或 maturity 不是有效日期。\nsettlement ≥ maturity，或者到期日为结算日起一年之后。\ndiscount ≤ 0。\n\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/tbillprice/"
    },
    "TBILLYIELD": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/tbillyield-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/tbillyield-function-dax",
        "description-en-us": "Returns the yield for a Treasury bill.\nDates are stored as sequential serial numbers so they can be used in calculations. In DAX, December 30, 1899 is day 0, and January 1, 2008 is 39448 because it is 39,448 days after December 30, 1899.\n\nTBILLYIELD is calculated as follows:\n$$\\text{TBILLYIELD} = \\frac{100 - \\text{pr}}{\\text{pr}} \\times \\frac{360}{\\text{DSM}}$$\nwhere:\n\n$\\text{DSM}$ = number of days from settlement to maturity, excluding any maturity date that is more than one calendar year after the settlement date.\n\n\nsettlement and maturity are truncated to integers.\n\nAn error is returned if:\n\nsettlement or maturity is not a valid date.\nsettlement ≥ maturity or maturity is more than one year after settlement.\npr ≤ 0.\n\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Financial functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/financial-functions-dax",
        "category-zh-cn": "财务函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/financial-functions-dax",
        "description-zh-cn": "返回国库券的收益率。\n日期存储为连续的序列号，以便在计算中使用。 在 DAX 中，1899 年 12 月 30 日的序列号是 0，2008 年 1 月 1 日的序列号是 39448，这是因为它距 1899 年 12 月 30 日有 39,448 天。\n\nTBILLYIELD 的计算公式如下：\n$$\\text{TBILLYIELD} = \\frac{100 - \\text{pr}}{\\text{pr}} \\times \\frac{360}{\\text{DSM}}$$\n其中：\n\n$\\text{DSM}$ = 结算日至到期日的天数，不包括结算日后超过一个日历年的任何到期日。\n\n\nsettlement 和 maturity 将被截尾取整。\n\n如果出现以下情况，则返回错误：\n\nsettlement 或 maturity 不是有效日期。\nsettlement ≥ maturity，或者到期日为结算日起一年之后。\npr ≤ 0。\n\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/tbillyield/"
    },
    "VDB": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/vdb-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/vdb-function-dax",
        "description-en-us": "Returns the depreciation of an asset for any period you specify, including partial periods, using the double-declining balance method or some other method you specify. VDB stands for variable declining balance.\nAn error is returned if:\n\ncost < 0.\nsalvage < 0.\nlife < 1.\nstart_period < 1 or start_period > end_period.\nend_period < start_period or end_period > life.\nfactor < 0.\nno_switch does not evaluate to either TRUE or FALSE.\n\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Financial functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/financial-functions-dax",
        "category-zh-cn": "财务函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/financial-functions-dax",
        "description-zh-cn": "使用双倍余额递减法或你指定的其他一些方法，返回你指定的任何期间（包括部分期间）的资产折旧。 VDB 表示可变余额递减。\n如果出现以下情况，则返回错误：\n\ncost < 0。\nsalvage < 0。\nlife < 1。\nstart_period < 1 或 start_period > end_period。\nend_period < start_period 或 end_period > life。\nfactor < 0。\nno_switch 的计算结果不为 TRUE 或 FALSE。\n\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/vdb/"
    },
    "XIRR": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/xirr-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/xirr-function-dax",
        "description-en-us": "Returns the internal rate of return for a schedule of cash flows that is not necessarily periodic.\nThe value is calculated as the rate that satisfies the following function:\n$$\\sum^{N}_{j=1} \\frac{P_{j}}{(1 + \\text{rate})^{\\frac{d_{j} - d_{1}}{365}}}$$\nWhere:\n\n$P_{j}$ is the $j^{th}$ payment\n$d_{j}$ is the $j^{th}$ payment date\n$d_{1}$ is the first payment date\n\n\nThe series of cash flow values must contain at least one positive number and one negative number.\n\nAvoid using ISERROR or IFERROR functions to capture an error returned by XIRR. If some inputs to the function may result in a no solution error, providing an alternateResult parameter is the most reliable and highest performing way to handle the error.\n\nTo learn more about using the alternateResult parameter, be to check out this video.\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Financial functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/financial-functions-dax",
        "category-zh-cn": "财务函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/financial-functions-dax",
        "description-zh-cn": "返回不一定具有周期性的现金流时间表的内部收益率。\n值计算为满足以下函数的比率：\n$$\\sum^{N}_{j=1} \\frac{P_{j}}{(1 + \\text{rate})^{\\frac{d_{j} - d_{1}}{365}}}$$\n其中：\n\n$P_{j}$ 是第 $j$ 期付款\n$d_{j}$ 是第 $j$ 个付款日\n$d_{1}$ 是第一个付款日\n\n\n一系列现金流值必须包含至少一个正数和一个负数。\n\n避免使用 ISERROR 或 IFERROR 函数来捕获 XIRR 返回的错误。 如果函数的一些输入可能会导致无解决方案错误，则提供 alternateResult 参数是处理错误的最可靠且性能最高的方法。\n\n若要详细了解如何使用 alternateResult 参数，请观看此视频。\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/xirr/"
    },
    "XNPV": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/xnpv-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/xnpv-function-dax",
        "description-en-us": "Returns the present value for a schedule of cash flows that is not necessarily periodic.\nThe value is calculated as the following summation:\n$$\\sum^{N}_{j=1} \\frac{P_{j}}{(1 + \\text{rate})^{\\frac{d_{j} - d_{1}}{365}}}$$\nWhere:\n\n$P_{j}$ is the $j^{th}$ payment\n$d_{j}$ is the $j^{th}$ payment date\n$d_{1}$ is the first payment date\n\n\nThe series of cash flow values must contain at least one positive number and one negative number.\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Financial functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/financial-functions-dax",
        "category-zh-cn": "财务函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/financial-functions-dax",
        "description-zh-cn": "返回不一定具有周期性的现金流时间表的现值。\n此值的计算公式如下：\n$$\\sum^{N}_{j=1} \\frac{P_{j}}{(1 + \\text{rate})^{\\frac{d_{j} - d_{1}}{365}}}$$\n其中：\n\n$P_{j}$ 是第 $j$ 期付款\n$d_{j}$ 是第 $j$ 个付款日\n$d_{1}$ 是第一个付款日\n\n\n一系列现金流值必须包含至少一个正数和一个负数。\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/xnpv/"
    },
    "YIELD": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/yield-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/yield-function-dax",
        "description-en-us": "Returns the yield on a security that pays periodic interest. Use YIELD to calculate bond yield.\nDates are stored as sequential serial numbers so they can be used in calculations. In DAX, December 30, 1899 is day 0, and January 1, 2008 is 39448 because it is 39,448 days after December 30, 1899.\n\nThe settlement date is the date a buyer purchases a coupon, such as a bond. The maturity date is the date when a coupon expires. For example, suppose a 30-year bond is issued on January 1, 2008, and is purchased by a buyer six months later. The issue date would be January 1, 2008, the settlement date would be July 1, 2008, and the maturity date would be January 1, 2038, which is 30 years after the January 1, 2008, issue date.\n\nIf there is one coupon period or less until redemption, YIELD is calculated as follows:\n$$\\text{YIELD} = \\frac{(\\frac{\\text{redemption}}{100} + \\frac{\\text{rate}}{\\text{frequency}}) - (\\frac{\\text{par}}{100} + (\\frac{\\text{A}}{\\text{E}} \\times \\frac{\\text{rate}}{\\text{frequency}}))}{\\frac{\\text{par}}{100} + (\\frac{\\text{A}}{\\text{E}} \\times \\frac{\\text{rate}}{\\text{frequency}})} \\times \\frac{\\text{frequency} \\times \\text{E}}{\\text{DSR}}$$\nwhere:\n\n$\\text{A}$ = number of days from the beginning of the coupon period to the settlement date (accrued days).\n$\\text{DSR}$ = number of days from the settlement date to the redemption date.\n$\\text{E}$ = number of days in the coupon period.\n\n\nIf there is more than one coupon period until redemption, YIELD is calculated through a hundred iterations. The resolution uses the Newton method, based on the formula used for the function PRICE. The yield is changed until the estimated price given the yield is close to price.\n\nsettlement and maturity are truncated to integers.\n\nfrequency, and basis are rounded to the nearest integer.\n\nAn error is returned if:\n\nsettlement or maturity is not a valid date.\nsettlement ≥ maturity.\nrate < 0.\npr ≤ 0.\nredemption ≤ 0.\nfrequency is any number other than 1, 2, or 4.\nbasis < 0 or basis > 4.\n\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Financial functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/financial-functions-dax",
        "category-zh-cn": "财务函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/financial-functions-dax",
        "description-zh-cn": "返回支付定期利息的证券的收益率。 使用 YIELD 计算债券收益率。\n日期存储为连续的序列号，以便在计算中使用。 在 DAX 中，1899 年 12 月 30 日的序列号是 0，2008 年 1 月 1 日的序列号是 39448，这是因为它距 1899 年 12 月 30 日有 39,448 天。\n\n结算日是指购买者买入息票（如债券）的日期。 到期日是指息票到期的日期。 例如，假设在 2008 年 1 月 1 日发行的 30 年期债券，6 个月后被购买者买走。 那么发行日为 2008 年 1 月 1 日，结算日为 2008 年 7 月 1 日，而到期日是在发行日 2008 年 1 月 1 日的 30 年后，即 2038 年 1 月 1 日。\n\n如果在赎回前有一个或更短的息票期，YIELD 的计算公式如下：\n$$\\text{YIELD} = \\frac{(\\frac{\\text{redemption}}{100} + \\frac{\\text{rate}}{\\text{frequency}}) - (\\frac{\\text{par}}{100} + (\\frac{\\text{A}}{\\text{E}} \\times \\frac{\\text{rate}}{\\text{frequency}}))}{\\frac{\\text{par}}{100} + (\\frac{\\text{A}}{\\text{E}} \\times \\frac{\\text{rate}}{\\text{frequency}})} \\times \\frac{\\text{frequency} \\times \\text{E}}{\\text{DSR}}$$\n其中：\n\n$\\text{A}$ = 从息票期开始到结算日之间的天数（累计天数）。\n$\\text{DSR}$ = 结算日与赎回日之间的天数。\n$\\text{E}$ = 息票期的天数。\n\n\n如果在赎回之前有一个以上的息票期，则通过 100 次迭代计算 YIELD。 该求解根据用于函数 PRICE 的公式使用牛顿迭代法。 收益率会一直变化，直到给定收益率的估计价格与价格接近。\n\nsettlement 和 maturity 将被截尾取整。\n\nfrequency 和 basis 舍入为最接近的整数。\n\n如果出现以下情况，则返回错误：\n\nsettlement 或 maturity 不是有效日期。\nsettlement ≥ maturity。\nrate < 0。\npr ≤ 0。\nredemption ≤ 0。\nfrequency 是除 1、2 和 4 之外的任何数字。\nbasis < 0 或者 basis > 4。\n\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/yield/"
    },
    "YIELDDISC": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/yielddisc-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/yielddisc-function-dax",
        "description-en-us": "Returns the annual yield for a discounted security.\nDates are stored as sequential serial numbers so they can be used in calculations. In DAX, December 30, 1899 is day 0, and January 1, 2008 is 39448 because it is 39,448 days after December 30, 1899.\n\nThe settlement date is the date a buyer purchases a coupon, such as a bond. The maturity date is the date when a coupon expires. For example, suppose a 30-year bond is issued on January 1, 2008, and is purchased by a buyer six months later. The issue date would be January 1, 2008, the settlement date would be July 1, 2008, and the maturity date would be January 1, 2038, which is 30 years after the January 1, 2008, issue date.\n\nsettlement and maturity are truncated to integers.\n\nbasis is rounded to the nearest integer.\n\nAn error is returned if:\n\nsettlement or maturity is not a valid date.\nsettlement ≥ maturity.\npr ≤ 0.\nredemption ≤ 0.\nbasis < 0 or basis > 4.\n\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Financial functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/financial-functions-dax",
        "category-zh-cn": "财务函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/financial-functions-dax",
        "description-zh-cn": "返回贴现证券的年收益率。\n日期存储为连续的序列号，以便在计算中使用。 在 DAX 中，1899 年 12 月 30 日的序列号是 0，2008 年 1 月 1 日的序列号是 39448，这是因为它距 1899 年 12 月 30 日有 39,448 天。\n\n结算日是指购买者买入息票（如债券）的日期。 到期日是指息票到期的日期。 例如，假设在 2008 年 1 月 1 日发行的 30 年期债券，6 个月后被购买者买走。 那么发行日为 2008 年 1 月 1 日，结算日为 2008 年 7 月 1 日，而到期日是在发行日 2008 年 1 月 1 日的 30 年后，即 2038 年 1 月 1 日。\n\nsettlement 和 maturity 将被截尾取整。\n\nbasis 舍入为最接近的整数。\n\n如果出现以下情况，则返回错误：\n\nsettlement 或 maturity 不是有效日期。\nsettlement ≥ maturity。\npr ≤ 0。\nredemption ≤ 0。\nbasis < 0 或者 basis > 4。\n\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/yielddisc/"
    },
    "YIELDMAT": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/yieldmat-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/yieldmat-function-dax",
        "description-en-us": "Returns the annual yield of a security that pays interest at maturity.\nDates are stored as sequential serial numbers so they can be used in calculations. In DAX, December 30, 1899 is day 0, and January 1, 2008 is 39448 because it is 39,448 days after December 30, 1899.\n\nThe settlement date is the date a buyer purchases a coupon, such as a bond. The maturity date is the date when a coupon expires. For example, suppose a 30-year bond is issued on January 1, 2008, and is purchased by a buyer six months later. The issue date would be January 1, 2008, the settlement date would be July 1, 2008, and the maturity date would be January 1, 2038, which is 30 years after the January 1, 2008, issue date.\n\nsettlement, maturity, and issue are truncated to integers.\n\nbasis is rounded to the nearest integer.\n\nAn error is returned if:\n\nsettlement, maturity, or issue is not a valid date.\nmaturity > settlement > issue is not satisfied.\nrate < 0.\npr ≤ 0.\nbasis < 0 or basis > 4.\n\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Financial functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/financial-functions-dax",
        "category-zh-cn": "财务函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/financial-functions-dax",
        "description-zh-cn": "返回支付到期利息的证券的年收益率。\n日期存储为连续的序列号，以便在计算中使用。 在 DAX 中，1899 年 12 月 30 日的序列号是 0，2008 年 1 月 1 日的序列号是 39448，这是因为它距 1899 年 12 月 30 日有 39,448 天。\n\n结算日是指购买者买入息票（如债券）的日期。 到期日是指息票到期的日期。 例如，假设在 2008 年 1 月 1 日发行的 30 年期债券，6 个月后被购买者买走。 那么发行日为 2008 年 1 月 1 日，结算日为 2008 年 7 月 1 日，而到期日是在发行日 2008 年 1 月 1 日的 30 年后，即 2038 年 1 月 1 日。\n\nsettlement、maturity 和 issue 将被截尾取整。\n\nbasis 舍入为最接近的整数。\n\n如果出现以下情况，则返回错误：\n\nsettlement、maturity 或 issue 不是有效日期。\n不满足 maturity > settlement > issue 这一条件。\nrate < 0。\npr ≤ 0。\nbasis < 0 或者 basis > 4。\n\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/yieldmat/"
    },
    "COLUMNSTATISTICS": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/columnstatistics-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/columnstatistics-function-dax",
        "description-en-us": "Returns a table of statistics regarding every column in every table in the model.\nTable Name: The current column’s table.\nColumn Name: The current column’s name.\nMin: The minimum value found within the current column.\nMax: The maximum value found within the current column.\nCardinality: The number of distinct values found within the current column.\nMax Length: The length of the longest string found within the current column (only applicable for string columns).\n",
        "category-en-us": "Information functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/information-functions-dax",
        "category-zh-cn": "信息函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/information-functions-dax",
        "description-zh-cn": "返回关于模型中每张表每一列的统计信息表。\n表名称：当前列的表。\n列名称：当前列的名称。\n最小值：在当前列中找到的最小值。\n最大值：在当前列中找到的最大值。\n基数：在当前列中找到的非重复值的数目。\n最大长度：在当前列中找到的最长字符串的长度（仅适用于字符串列）。\n",
        "url-dax-guide": "https://dax.guide/columnstatistics/"
    },
    "CONTAINS": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/contains-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/contains-function-dax",
        "description-en-us": "Returns true if values for all referred columns exist, or are contained, in those columns; otherwise, the function returns false.\nThe arguments columnName and value must come in pairs; otherwise an error is returned.\n\ncolumnName must belong to the specified table, or to a table that is related to table.\n\nIf columnName refers to a column in a related table then it must be fully qualified; otherwise, an error is returned.\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Information functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/information-functions-dax",
        "category-zh-cn": "信息函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/information-functions-dax",
        "description-zh-cn": "如果所有引用列的值存在或包含在这些列中，则返回 true；否则，该函数返回 false。\ncolumnName 和 value 参数必须成对出现；否则返回错误   。\n\ncolumnName 必须属于指定的 table，或属于与 table 相关的表    。\n\n如果 columnName 引用相关表中的列，则它必须是完全限定的；否则返回错误  。\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/contains/"
    },
    "CONTAINSROW": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/containsrow-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/containsrow-function-dax",
        "description-en-us": "Returns TRUE if there exists at least one row where all columns have specified values.\nExcept syntax, the IN operator and CONTAINSROW function are functionally equivalent.\n<scalarExpr> IN <tableExpr> \n( <scalarExpr1>, <scalarExpr2>, … ) IN <tableExpr>\n\n\nThe number of scalarExprN must match the number of columns in tableExpr.\nNOT IN is not an operator in DAX. To perform the logical negation of the IN operator, put NOT in front of the entire expression. For example, NOT [Color] IN { \"Red\", \"Yellow\", \"Blue\" }.\n\n\nUnlike the = operator, the IN operator and the CONTAINSROW function perform strict comparison. For example, the BLANK value does not match 0.\n\n",
        "category-en-us": "Information functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/information-functions-dax",
        "category-zh-cn": "信息函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/information-functions-dax",
        "description-zh-cn": "如果至少存在一个所有列都具有指定值的行，则返回 TRUE。\n除语法外，IN 运算符和 CONTAINSROW 函数在功能上是等效的。\n<scalarExpr> IN <tableExpr> \n( <scalarExpr1>, <scalarExpr2>, … ) IN <tableExpr>\n\n\nscalarExprN 的数量必须与 tableExpr 中的列数相匹配。\nNOT IN 不是 DAX 中的运算符。 要执行 IN 运算符的逻辑否定，请将 NOT 放在整个表达式前面。 例如，NOT [Color] IN { \"Red\", \"Yellow\", \"Blue\" }。\n\n\n与 = 运算符不同，IN 运算符和 CONTAINSROW 函数执行严格的比较。 例如，空白值与 0 不匹配。\n\n",
        "url-dax-guide": "https://dax.guide/containsrow/"
    },
    "CONTAINSSTRING": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/containsstring-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/containsstring-function-dax",
        "description-en-us": "Returns TRUE or FALSE indicating whether one string contains another string.\nCONTAINSSTRING is not case-sensitive.\n\nYou can use ? and * wildcard characters. Use ~ to escape wildcard characters.\n\n",
        "category-en-us": "Information functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/information-functions-dax",
        "category-zh-cn": "信息函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/information-functions-dax",
        "description-zh-cn": "返回 TRUE 或 FALSE，指示一个字符串是否包含另一个字符串。\nCONTAINSSTRING 不区分大小写。\n\n可以使用 ? 和 * 通配符。 使用 ~ 来转义通配符。\n\n",
        "url-dax-guide": "https://dax.guide/containsstring/"
    },
    "CONTAINSSTRINGEXACT": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/containsstringexact-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/containsstringexact-function-dax",
        "description-en-us": "Returns TRUE or FALSE indicating whether one string contains another string.",
        "category-en-us": "Information functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/information-functions-dax",
        "category-zh-cn": "信息函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/information-functions-dax",
        "description-zh-cn": "返回 TRUE 或 FALSE，指示一个字符串是否包含另一个字符串。",
        "url-dax-guide": "https://dax.guide/containsstringexact/"
    },
    "CUSTOMDATA": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/customdata-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/customdata-function-dax",
        "description-en-us": "Returns the content of the CustomData property in the connection string.",
        "category-en-us": "Information functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/information-functions-dax",
        "category-zh-cn": "信息函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/information-functions-dax",
        "description-zh-cn": "返回连接字符串中 CustomData 属性的内容  。",
        "url-dax-guide": "https://dax.guide/customdata/"
    },
    "HASONEFILTER": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/hasonefilter-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/hasonefilter-function-dax",
        "description-en-us": "Returns TRUE when the number of directly filtered values on columnName is one; otherwise returns FALSE.\nThis function is similar to HASONEVALUE() with the difference that HASONEVALUE() works based on cross-filters while HASONEFILTER() works by a direct filter.\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Information functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/information-functions-dax",
        "category-zh-cn": "信息函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/information-functions-dax",
        "description-zh-cn": "如果 columnName 上的直接筛选值的数目为一个，则返回 TRUE；否则，返回 FALSE。\n此函数类似于 HASONEVALUE()，不同之处在于 HASONEVALUE() 基于交叉筛选器工作，而 HASONEFILTER() 通过直接筛选器工作。\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/hasonefilter/"
    },
    "HASONEVALUE": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/hasonevalue-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/hasonevalue-function-dax",
        "description-en-us": "Returns TRUE when the context for columnName has been filtered down to one distinct value only. Otherwise is FALSE.\nAn equivalent expression for HASONEVALUE() is COUNTROWS(VALUES(<columnName>)) = 1.\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Information functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/information-functions-dax",
        "category-zh-cn": "信息函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/information-functions-dax",
        "description-zh-cn": "如果筛选 columnName 的上下文后仅剩下一个非重复值，则返回 TRUE   。 否则返回 FALSE  。\nCOUNTROWS(VALUES(<columnName>)) = 1 是 HASONEVALUE() 的等效表达式。\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/hasonevalue/"
    },
    "ISAFTER": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/isafter-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/isafter-function-dax",
        "description-en-us": "A boolean function that emulates the behavior of a 'Start At' clause and returns true for a row that meets all of the condition parameters.",
        "category-en-us": "Information functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/information-functions-dax",
        "category-zh-cn": "信息函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/information-functions-dax",
        "description-zh-cn": "此函数为布尔函数，它会模仿“Start At”子句的行为，并为满足所有条件参数的行返回 true。",
        "url-dax-guide": "https://dax.guide/isafter/"
    },
    "ISBLANK": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/isblank-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/isblank-function-dax",
        "description-en-us": "Checks whether a value is blank, and returns TRUE or FALSE.",
        "category-en-us": "Information functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/information-functions-dax",
        "category-zh-cn": "信息函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/information-functions-dax",
        "description-zh-cn": "检查值是否为空白，并返回 TRUE 或 FALSE。",
        "url-dax-guide": "https://dax.guide/isblank/"
    },
    "ISCROSSFILTERED": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/iscrossfiltered-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/iscrossfiltered-function-dax",
        "description-en-us": "Returns TRUE when the specified table or column is cross-filtered.\nA column or table is said to be cross-filtered when a filter is applied to ColumnName, any column of TableName, or to any column of a related table.\n\nA column or table is said to be filtered directly when a filter is applied to ColumnName or to any column of TableName. Therefore, the ISFILTERED function also returns TRUE when ColumnName or any column of TableName is filtered.\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Information functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/information-functions-dax",
        "category-zh-cn": "信息函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/information-functions-dax",
        "description-zh-cn": "在对指定表或列进行交叉筛选时，返回 TRUE。\n当筛选器应用于 ColumnName、TableName 的任何列或相关表的任何列时，则对该列或表进行了交叉筛选。\n\n当筛选器应用于 ColumnName 或 TableName 的任何列时，则对该列或表进行了直接筛选。 因此，当对 ColumnName 或 TableName 的任何列进行筛选时，ISFILTERED 函数也会返回 TRUE。\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/iscrossfiltered/"
    },
    "ISEMPTY": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/isempty-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/isempty-function-dax",
        "description-en-us": "Checks if a table is empty.",
        "category-en-us": "Information functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/information-functions-dax",
        "category-zh-cn": "信息函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/information-functions-dax",
        "description-zh-cn": "检查表是否为空。",
        "url-dax-guide": "https://dax.guide/isempty/"
    },
    "ISERROR": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/iserror-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/iserror-function-dax",
        "description-en-us": "Checks whether a value is an error, and returns TRUE or FALSE.\nFor best practices when using ISERROR, see Appropriate use of error functions.\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Information functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/information-functions-dax",
        "category-zh-cn": "信息函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/information-functions-dax",
        "description-zh-cn": "检查值是否错误，并返回 TRUE 或 FALSE。\n有关使用 ISERROR 时的最佳做法，请参阅适当使用错误函数。\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/iserror/"
    },
    "ISEVEN": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/iseven-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/iseven-function-dax",
        "description-en-us": "Returns TRUE if number is even, or FALSE if number is odd.\nIf number is nonnumeric, ISEVEN returns the #VALUE! error value.\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Information functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/information-functions-dax",
        "category-zh-cn": "信息函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/information-functions-dax",
        "description-zh-cn": "如果 number 为偶数，则返回 TRUE；如果为奇数，则返回 FALSE。\n如果 number 为非数字，则 ISEVEN 返回 #VALUE！ 错误值。\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/iseven/"
    },
    "ISFILTERED": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/isfiltered-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/isfiltered-function-dax",
        "description-en-us": "Returns TRUE when the specified table or column is being filtered directly.\nA column or table is said to be filtered directly when a filter is applied to ColumnName or any column of TableName.\n\nA column or table is said to be cross-filtered when a filter is applied to ColumnName, any column of TableName, or to any column of a related table. Therefore, the ISCROSSFILTERED function also returns TRUE when ColumnName, any column of TableName, or a column of a related table is filtered.\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Information functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/information-functions-dax",
        "category-zh-cn": "信息函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/information-functions-dax",
        "description-zh-cn": "在对指定表或列进行直接筛选时，返回 TRUE。\n当筛选器应用于 ColumnName 或 TableName 的任何列时，则对该列或表进行了直接筛选。\n\n当筛选器应用于 ColumnName、TableName 的任何列或相关表的任何列时，则对该列或表进行了交叉筛选。 因此，当对 ColumnName、TableName 的任何列或相关表的列进行筛选时，ISCROSSFILTERED 函数也会返回 TRUE。\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/isfiltered/"
    },
    "ISINSCOPE": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/isinscope-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/isinscope-function-dax",
        "description-en-us": "Returns true when the specified column is the level in a hierarchy of levels.",
        "category-en-us": "Information functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/information-functions-dax",
        "category-zh-cn": "信息函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/information-functions-dax",
        "description-zh-cn": "当指定的列在级别的层次结构内时，返回 True。",
        "url-dax-guide": "https://dax.guide/isinscope/"
    },
    "ISLOGICAL": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/islogical-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/islogical-function-dax",
        "description-en-us": "Checks whether a value is a logical value, (TRUE or FALSE), and returns TRUE or FALSE.",
        "category-en-us": "Information functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/information-functions-dax",
        "category-zh-cn": "信息函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/information-functions-dax",
        "description-zh-cn": "检查值是否为逻辑值（TRUE 或 FALSE），并返回 TRUE 或 FALSE。",
        "url-dax-guide": "https://dax.guide/islogical/"
    },
    "ISNONTEXT": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/isnontext-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/isnontext-function-dax",
        "description-en-us": "Checks if a value is not text (blank cells are not text), and returns TRUE or FALSE.\nAn empty string is considered text.\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Information functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/information-functions-dax",
        "category-zh-cn": "信息函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/information-functions-dax",
        "description-zh-cn": "检查值是否为非文本（空单元格为非文本），并返回 TRUE 或 FALSE。\n空字符串会被视为文本。\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/isnontext/"
    },
    "ISNUMBER": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/isnumber-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/isnumber-function-dax",
        "description-en-us": "Checks whether a value is a number, and returns TRUE or FALSE.",
        "category-en-us": "Information functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/information-functions-dax",
        "category-zh-cn": "信息函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/information-functions-dax",
        "description-zh-cn": "检查值是否为数值，并返回 TRUE 或 FALSE。",
        "url-dax-guide": "https://dax.guide/isnumber/"
    },
    "ISODD": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/isodd-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/isodd-function-dax",
        "description-en-us": "Returns TRUE if number is odd, or FALSE if number is even.\nIf number is nonnumeric, ISODD returns the #VALUE! error value.\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Information functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/information-functions-dax",
        "category-zh-cn": "信息函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/information-functions-dax",
        "description-zh-cn": "如果数字为奇数，则返回 TRUE；如果数字为偶数，则返回 FALSE。\n如果 number 为非数字，ISODD 则返回 #VALUE! 错误值。\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/isodd/"
    },
    "ISONORAFTER": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/isonorafter-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/isonorafter-function-dax",
        "description-en-us": "A boolean function that emulates the behavior of a Start At clause and returns true for a row that meets all of the condition parameters.",
        "category-en-us": "Information functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/information-functions-dax",
        "category-zh-cn": "信息函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/information-functions-dax",
        "description-zh-cn": "此函数为布尔函数，它会模仿 Start At 子句的行为，并为满足所有条件参数的行返回 true。",
        "url-dax-guide": "https://dax.guide/isonorafter/"
    },
    "ISSELECTEDMEASURE": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/isselectedmeasure-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/isselectedmeasure-function-dax",
        "description-en-us": "Used by expressions for calculation items to determine the measure that is in context is one of those specified in a list of measures.\nCan only be referenced in the expression for a calculation item.\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Information functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/information-functions-dax",
        "category-zh-cn": "信息函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/information-functions-dax",
        "description-zh-cn": "由表达式中的计算项用于确定上下文中的度量值是度量值列表中指定的度量值之一。\n只能在计算项的表达式中引用。\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/isselectedmeasure/"
    },
    "ISSUBTOTAL": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/issubtotal-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/issubtotal-function-dax",
        "description-en-us": "Creates another column in a SUMMARIZE expression that returns True if the row contains subtotal values for the column given as argument, otherwise returns False.\nThis function can only be used in the expression of a SUMMARIZE function.\n\nThis function must be preceded by the name of the Boolean column.\n\n",
        "category-en-us": "Information functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/information-functions-dax",
        "category-zh-cn": "信息函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/information-functions-dax",
        "description-zh-cn": "使用 SUMMARIZE 表达式另外创建一列；如果该行包含作为参数提供的列的小计值，则返回 True，否则返回 False。\n此函数只能用于 SUMMARIZE 函数的表达式。\n\n此函数前面必须有布尔列的名称。\n\n",
        "url-dax-guide": "https://dax.guide/issubtotal/"
    },
    "ISTEXT": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/istext-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/istext-function-dax",
        "description-en-us": "Checks if a value is text, and returns TRUE or FALSE.",
        "category-en-us": "Information functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/information-functions-dax",
        "category-zh-cn": "信息函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/information-functions-dax",
        "description-zh-cn": "检查值是否为文本，并返回 TRUE 或 FALSE。",
        "url-dax-guide": "https://dax.guide/istext/"
    },
    "NONVISUAL": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/nonvisual-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/nonvisual-function-dax",
        "description-en-us": "Marks a value filter in a SUMMARIZECOLUMNS expression as non-visual. This function can only be used within a SUMMARIZECOLUMNS expression.\nMarks a value filter in SUMMARIZECOLUMNS as not affecting measure values, but only applying to group-by columns.\n\nThis function can only be used within a SUMMARIZECOLUMNS expression. It's used as either a filterTable argument of the SUMMARIZECOLUMNS function or a groupLevelFilter argument of the ROLLUPADDISSUBTOTAL or ROLLUPISSUBTOTAL function.\n\n",
        "category-en-us": "Information functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/information-functions-dax",
        "category-zh-cn": "信息函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/information-functions-dax",
        "description-zh-cn": "将 SUMMARIZECOLUMNS 表达式中的值筛选器标记为不可见。 此函数只能在 SUMMARIZECOLUMNS 表达式中使用。\n将 SUMMARIZECOLUMNS 中的值筛选器标记为不影响度量值，但它仅应用于 group-by 列。\n\n此函数只能在 SUMMARIZECOLUMNS 表达式中使用。 它用作 SUMMARIZECOLUMNS 函数的 filterTable 参数，或者 ROLLUPADDISSUBTOTAL 或 ROLLUPISSUBTOTAL 函数的 groupLevelFilter 参数。\n\n",
        "url-dax-guide": "https://dax.guide/nonvisual/"
    },
    "SELECTEDMEASURE": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/selectedmeasure-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/selectedmeasure-function-dax",
        "description-en-us": "Used by expressions for calculation items to reference the measure that is in context.\nCan only be referenced in the expression for a calculation item.\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Information functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/information-functions-dax",
        "category-zh-cn": "信息函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/information-functions-dax",
        "description-zh-cn": "由表达式的计算项用于引用上下文中的度量值。\n只能在计算项的表达式中引用。\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/selectedmeasure/"
    },
    "SELECTEDMEASUREFORMATSTRING": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/selectedmeasureformatstring-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/selectedmeasureformatstring-function-dax",
        "description-en-us": "Used by expressions for calculation items to retrieve the format string of the measure that is in context.\nThis function can only be referenced in expressions for calculation items in calculation groups. It is designed to be used by the Format String Expression property of calculation items.\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Information functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/information-functions-dax",
        "category-zh-cn": "信息函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/information-functions-dax",
        "description-zh-cn": "由表达式的计算项目用于检索上下文中度量值的格式字符串。\n此函数只能在计算组中的计算项表达式中引用。 该函数旨在由计算项的“格式字符串表达式”属性使用  。\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/selectedmeasureformatstring/"
    },
    "SELECTEDMEASURENAME": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/selectedmeasurename-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/selectedmeasurename-function-dax",
        "description-en-us": "Used by expressions for calculation items to determine the measure that is in context by name.\nCan only be referenced in the expression for a calculation item.\n\nThis function is often used for debugging purposes when authoring calculation groups.\n\n",
        "category-en-us": "Information functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/information-functions-dax",
        "category-zh-cn": "信息函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/information-functions-dax",
        "description-zh-cn": "由表达式的计算项目用于按名称确定上下文中的度量值。\n只能在计算项的表达式中引用。\n\n通常在编写计算组时出于调试目的使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/selectedmeasurename/"
    },
    "USERCULTURE": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/userculture-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/userculture-function-dax",
        "description-en-us": "Returns the locale (language code-country code) for the current user, determined by the operating system, browser settings, or Power BI service.\nIn the Power BI service, locale is determined by Settings > Language > Language Settings. The default is determined by the user's browser language setting.\n\nWhen used in calculated table and calculated column expressions, the result may differ depending on whether the table is in DirectQuery or Import mode. When in DirectQuery mode, the result is determined by the language (locale) specified in Language Settings in the Power BI service. The default in Language Settings specifies locale is determined by the user's browser language setting, which means the same calculated table or column can return different results depending on the browser language settings for each user. When in Import mode, the result is statically determined during refresh and will not vary at query time. For managed refreshes, such as scheduled or interactive, locale is not based on the user’s browser language setting but instead uses an invariant locale. The invariant locale, however, can be overridden by using the XMLA endpoint to specify a custom locale.\n\nWhen combined with the Field parameters feature in Power BI, USERCULTURE can be used to reliably translate dynamic visualization titles and captions when used in measure and row-level security (RLS) object expressions within the same model. However, expressions containing USERCULTURE called from outside the model, such as queries and live-connect report measures, should not be relied upon for correctly translated titles and captions.\n\nUSERCULTURE returns the correct user locale when used in object expressions called from within the model such as measures, row-level security (RLS), and calculation items. However, it may not return the correct user locale when used in expressions from outside the model, such as queries and live-connect report measures.\n\nIn Live-connect reports, USERCULTURE may not return the correct user locale when called from a report measure expression.\n\n",
        "category-en-us": "Information functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/information-functions-dax",
        "category-zh-cn": "信息函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/information-functions-dax",
        "description-zh-cn": "返回当前用户的区域设置（语言代码-国家/地区代码），该设置由操作系统、浏览器设置或 Power BI 服务确定。\n在 Power BI 服务中，区域设置由“设置”>“语言”>“语言设置”确定。 默认值由用户的浏览器语言设置确定。\n\n在计算表和计算列表达式中使用时，结果可能会有所不同，具体取决于表是处于 DirectQuery 还是导入模式。 在 DirectQuery 模式下，结果由 Power BI 服务的“语言设置”中指定的语言（区域设置）确定。 “语言设置”中的默认值指定区域设置由用户的浏览器语言设置确定，这意味着同一计算表或列可以根据每个用户的浏览器语言设置返回不同的结果。 在导入模式下，结果在刷新期间静态确定，并且在查询时不会变化。 对于托管刷新（例如计划的或交互式托管刷新），区域设置不基于用户的浏览器语言设置，而是保持固定。 但可以通过使用 XMLA 终结点指定自定义区域设置来覆盖固定的区域设置。\n\n当 USERCULTURE 与 Power BI 中的“字段参数”功能结合使用时，如果用于同一模型内的度量值和行级别安全性 (RLS) 对象表达式，它可用于可靠地转换动态可视化效果标题和字幕。 但是，不应依赖包含从模型外部调用的 USERCULTURE 的表达式（例如查询和实时连接报表度量值）来获取正确转换的标题和字幕。\n\n在从模型中调用的对象表达式（如度量值、行级安全性 (RLS) 和计算项）中使用 USERCULTURE 时，它会返回正确的用户区域设置。 但是，在模型外部的表达式中使用时（例如查询和实时连接报表度量值），它可能不会返回正确的用户区域设置。\n\n在实时连接报表中，当从报表度量值表达式调用时，USERCULTURE 可能不会返回正确的用户区域设置。\n\n",
        "url-dax-guide": "https://dax.guide/userculture/"
    },
    "USERNAME": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/username-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/username-function-dax",
        "description-en-us": "Returns the domain name and username from the credentials given to the system at connection time.",
        "category-en-us": "Information functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/information-functions-dax",
        "category-zh-cn": "信息函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/information-functions-dax",
        "description-zh-cn": "从在连接时提供给系统的凭据中返回域名和用户名。",
        "url-dax-guide": "https://dax.guide/username/"
    },
    "USEROBJECTID": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/userobjectid-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/userobjectid-function-dax",
        "description-en-us": "Returns the current user's Object ID from Azure AD or security identifier (SID).",
        "category-en-us": "Information functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/information-functions-dax",
        "category-zh-cn": "信息函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/information-functions-dax",
        "description-zh-cn": "返回当前用户的 Azure AD 对象 ID 或安全标识符 (SID)。",
        "url-dax-guide": "https://dax.guide/userobjectid/"
    },
    "USERPRINCIPALNAME": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/userprincipalname-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/userprincipalname-function-dax",
        "description-en-us": "Returns the user principal name.",
        "category-en-us": "Information functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/information-functions-dax",
        "category-zh-cn": "信息函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/information-functions-dax",
        "description-zh-cn": "返回用户主体名称。",
        "url-dax-guide": "https://dax.guide/userprincipalname/"
    },
    "AND": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/and-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/and-function-dax",
        "description-en-us": "Checks whether both arguments are TRUE, and returns TRUE if both arguments are TRUE. Otherwise returns false.",
        "category-en-us": "Logical functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/logical-functions-dax",
        "category-zh-cn": "逻辑函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/logical-functions-dax",
        "description-zh-cn": "检查两个参数是否均为 TRUE，如果两个参数都是 TRUE，则返回 TRUE。 否则返回 False。",
        "url-dax-guide": "https://dax.guide/and/"
    },
    "BITAND": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/bitand-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/bitand-function-dax",
        "description-en-us": "Returns a bitwise AND of two numbers.\nThis function supports both positive and negative numbers.\n",
        "category-en-us": "Logical functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/logical-functions-dax",
        "category-zh-cn": "逻辑函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/logical-functions-dax",
        "description-zh-cn": "返回两个数字的按位 AND。\n此函数支持正数和负数。\n",
        "url-dax-guide": "https://dax.guide/bitand/"
    },
    "BITLSHIFT": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/bitlshift-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/bitlshift-function-dax",
        "description-en-us": "Returns a number shifted left by the specified number of bits.\nBe sure to understand the nature of bitshift operations and overflow/underflow of integers before using DAX bitshift functions.\nIf Shift_Amount is negative, it will shift in the opposite direction.\nIf absolute value of Shift_Amount is larger than 64, there will be no error but will result in overflow/underflow.\nThere’s no limit on Number, but the result may overflow/underflow.\n",
        "category-en-us": "Logical functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/logical-functions-dax",
        "category-zh-cn": "逻辑函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/logical-functions-dax",
        "description-zh-cn": "返回一个按指定位数向左移动的数字。\n在使用 DAX 移位函数之前，请务必了解移位运算和整数上溢/下溢的性质。\n如果 Shift_Amount 是负数，它将向相反的方向移动。\n如果 Shift_Amount 的绝对值大于 64，则不会出现错误，但会导致上溢/下溢。\nNumber 没有限制，但结果可能会上溢/下溢。\n",
        "url-dax-guide": "https://dax.guide/bitlshift/"
    },
    "BITOR": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/bitor-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/bitor-function-dax",
        "description-en-us": "Returns a bitwise OR of two numbers.\nThis function supports both positive and negative numbers.\n",
        "category-en-us": "Logical functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/logical-functions-dax",
        "category-zh-cn": "逻辑函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/logical-functions-dax",
        "description-zh-cn": "返回两个数字的按位 OR。\n此函数支持正数和负数。\n",
        "url-dax-guide": "https://dax.guide/bitor/"
    },
    "BITRSHIFT": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/bitrshift-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/bitrshift-function-dax",
        "description-en-us": "Returns a number shifted right by the specified number of bits.\nBe sure to understand the nature of bitshift operations and overflow/underflow of integers before using DAX bitshift functions.\nIf Shift_Amount is negative, it will shift in the opposite direction.\nIf absolute value of Shift_Amount is larger than 64, there will be no error but will result in overflow/underflow.\nThere’s no limit on Number, but the result may overflow/underflow.\n",
        "category-en-us": "Logical functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/logical-functions-dax",
        "category-zh-cn": "逻辑函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/logical-functions-dax",
        "description-zh-cn": "返回一个按指定位数向右移动的数字。\n在使用 DAX 移位函数之前，请务必了解移位运算和整数上溢/下溢的性质。\n如果 Shift_Amount 是负数，它将向相反的方向移动。\n如果 Shift_Amount 的绝对值大于 64，则不会出现错误，但会导致上溢/下溢。\nNumber 没有限制，但结果可能会上溢/下溢。\n",
        "url-dax-guide": "https://dax.guide/bitrshift/"
    },
    "BITXOR": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/bitxor-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/bitxor-function-dax",
        "description-en-us": "Returns a bitwise XOR of two numbers.\nThis function supports both positive and negative numbers.\n",
        "category-en-us": "Logical functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/logical-functions-dax",
        "category-zh-cn": "逻辑函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/logical-functions-dax",
        "description-zh-cn": "返回两个数字的按位 XOR。\n此函数支持正数和负数。\n",
        "url-dax-guide": "https://dax.guide/bitxor/"
    },
    "COALESCE": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/coalesce-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/coalesce-function-dax",
        "description-en-us": "Returns the first expression that does not evaluate to BLANK. If all expressions evaluate to BLANK, BLANK is returned.",
        "category-en-us": "Logical functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/logical-functions-dax",
        "category-zh-cn": "逻辑函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/logical-functions-dax",
        "description-zh-cn": "返回第一个计算结果不为 BLANK 的表达式。 若所有表达式的计算结果都为 BLANK，则返回 BLANK。",
        "url-dax-guide": "https://dax.guide/coalesce/"
    },
    "FALSE": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/false-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/false-function-dax",
        "description-en-us": "Returns the logical value FALSE.",
        "category-en-us": "Logical functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/logical-functions-dax",
        "category-zh-cn": "逻辑函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/logical-functions-dax",
        "description-zh-cn": "返回逻辑值 FALSE。",
        "url-dax-guide": "https://dax.guide/false/"
    },
    "IF": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/if-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/if-function-dax",
        "description-en-us": "Checks a condition, and returns one value when it's TRUE, otherwise it returns a second value.\nThe IF function can return a variant data type if value_if_true and value_if_false are of different data types, but the function attempts to return a single data type if both value_if_true and value_if_false are of numeric data types. In the latter case, the IF function will implicitly convert data types to accommodate both values.\nFor example, the formula IF(<condition>, TRUE(), 0) returns TRUE or 0, but the formula IF(<condition>, 1.0, 0) returns only decimal values even though value_if_false is of the whole number data type. To learn more about implicit data type conversion, see Data types.\n\nTo execute the branch expressions regardless of the condition expression, use IF.EAGER instead.\n\n",
        "category-en-us": "Logical functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/logical-functions-dax",
        "category-zh-cn": "逻辑函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/logical-functions-dax",
        "description-zh-cn": "检查条件，如果为 TRUE，则返回一个值，否则返回第二个值。\n如果 value_if_true 和 value_if_false 的数据类型不同，则 IF 函数可返回可变数据类型；但如果 value_if_true 和 value_if_false 都是数值数据类型，则此函数会尝试返回单个数据类型   。 在后一种情况下，IF 函数会隐式转换数据类型，以容纳这两个值。\n例如，公式 IF(<condition>, TRUE(), 0) 返回 TRUE 或 0，而公式 IF(<condition>, 1.0, 0) 则只返回十进制值，即使 value_if_false 是整数数据类型，也不例外。 若要详细了解隐式数据类型转换，请参阅数据类型。\n\n若要执行分支表达式但不考虑条件表达式，请改用 IF.EAGER。\n\n",
        "url-dax-guide": "https://dax.guide/if/"
    },
    "IF.EAGER": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/if-eager-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/if-eager-function-dax",
        "description-en-us": "Checks a condition, and returns one value when TRUE, otherwise it returns a second value. It uses an eager execution plan which always executes the branch expressions regardless of the condition expression.\nThe IF.EAGER function can return a variant data type if value_if_true and value_if_false are of different data types, but the function attempts to return a single data type if both value_if_true and value_if_false are of numeric data types. In the latter case, the IF.EAGER function will implicitly convert data types to accommodate both values.\nFor example, the formula IF.EAGER(<condition>, TRUE(), 0) returns TRUE or 0, but the formula IF.EAGER(<condition>, 1.0, 0) returns only decimal values even though value_if_false is of the whole number data type. To learn more about implicit data type conversion, see Data types.\n\nIF.EAGER has the same functional behavior as the IF function, but performance may differ due to differences in execution plans. IF.EAGER(<logical_test>, <value_if_true>, <value_if_false>) has the same execution plan as the following DAX expression:\n\nVAR _value_if_true = <value_if_true>\nVAR _value_if_false = <value_if_false>\nRETURN\nIF (<logical_test>, _value_if_true, _value_if_false)\n\nNote: The two branch expressions are evaluated regardless of the condition expression.\n\n",
        "category-en-us": "Logical functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/logical-functions-dax",
        "category-zh-cn": "逻辑函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/logical-functions-dax",
        "description-zh-cn": "检查条件，如果为 TRUE，则返回一个值，否则返回第二个值。 它使用 eager 执行计划，该计划将始终执行分支表达式，而不考虑条件表达式。\n如果 value_if_true 和 value_if_false 的数据类型不同，则 IF.EAGER 函数可返回可变数据类型；但如果 value_if_true 和 value_if_false 都是数值数据类型，则此函数会尝试返回单个数据类型 。 在后一种情况下，IF.EAGER 函数会隐式转换数据类型，以容纳这两个值。\n例如，公式 IF.EAGER(<condition>, TRUE(), 0) 返回 TRUE 或 0，而公式 IF.EAGER(<condition>, 1.0, 0) 则只返回十进制值，即使 value_if_false 是整数数据类型，也不例外。 若要详细了解隐式数据类型转换，请参阅数据类型。\n\nIF.EAGER 具有与 IF 函数相同的函数行为，但由于执行计划的不同，二者性能可能会有所不同。 IF.EAGER(<logical_test>, <value_if_true>, <value_if_false>) 与以下 DAX 表达式具有相同的执行计划：\n\nVAR _value_if_true = <value_if_true>\nVAR _value_if_false = <value_if_false>\nRETURN\nIF (<logical_test>, _value_if_true, _value_if_false)\n\n注意：计算这两个分支表达式时不会考虑条件表达式。\n\n",
        "url-dax-guide": "https://dax.guide/if.eager/"
    },
    "IFERROR": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/iferror-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/iferror-function-dax",
        "description-en-us": "Evaluates an expression and returns a specified value if the expression returns an error; otherwise returns the value of the expression itself.\nYou can use the IFERROR function to trap and handle errors in an expression.\n\nIf value or value_if_error is an empty cell, IFERROR treats it as an empty string value (\"\").\n\nThe IFERROR function is based on the IF function, and uses the same error messages, but has fewer arguments. The relationship between the IFERROR function and the IF function as follows:\nIFERROR(A,B) := IF(ISERROR(A), B, A)\nValues that are returned for A and B must be of the same data type; therefore, the column or expression used for value and the value returned for value_if_error must be the same data type.\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\nFor best practices when using IFERROR, see Appropriate use of error functions.\n\n",
        "category-en-us": "Logical functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/logical-functions-dax",
        "category-zh-cn": "逻辑函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/logical-functions-dax",
        "description-zh-cn": "如果表达式返回错误，则会对表达式进行求值并返回指定的值；否则会返回表达式本身的值。\n可以使用 IFERROR 函数来捕获和处理表达式中的错误。\n\n如果 value 或 value_if_error 为空单元格，IFERROR 则会将其视为空字符串值 (\"\")   。\n\nIFERROR 函数基于 IF 函数，并且使用相同的错误消息，但拥有的参数更少。 IFERROR 函数和 IF 函数之间的关系如下所示：\nIFERROR(A,B) := IF(ISERROR(A), B, A)\n为 A 和 B 返回的值必须属于相同的数据类型；因此，用于 value 的列或表达式与为 value_if_error 返回的值必须是相同的数据类型 。\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n有关使用 IFERROR 时的最佳做法，请参阅适当使用错误函数。\n\n",
        "url-dax-guide": "https://dax.guide/iferror/"
    },
    "NOT": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/not-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/not-function-dax",
        "description-en-us": "Changes FALSE to TRUE, or TRUE to FALSE.",
        "category-en-us": "Logical functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/logical-functions-dax",
        "category-zh-cn": "逻辑函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/logical-functions-dax",
        "description-zh-cn": "将 FALSE 更改为 TRUE，或者将 TRUE 更改为 FALSE。",
        "url-dax-guide": "https://dax.guide/not/"
    },
    "OR": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/or-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/or-function-dax",
        "description-en-us": "Checks whether one of the arguments is TRUE to return TRUE. The function returns FALSE if both arguments are FALSE.\nThe OR function in DAX accepts only two (2) arguments. If you need to perform an OR operation on multiple expressions, you can create a series of calculations or, better, use the OR operator (||) to join all of them in a simpler expression.\n\nThe function evaluates the arguments until the first TRUE argument, then returns TRUE.\n\n",
        "category-en-us": "Logical functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/logical-functions-dax",
        "category-zh-cn": "逻辑函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/logical-functions-dax",
        "description-zh-cn": "检查某一个参数是否为 TRUE，如果是，则返回 TRUE。 如果两个参数均为 FALSE，此函数则返回 FALSE。\nDAX 中的 OR 函数只接受两 (2) 个参数。 如果需要对多个表达式执行 OR 操作，可以创建一系列计算，或者更好的方法是使用 OR 运算符 (||) 将它们全部联接在一个更简单的表达式中。\n\n此函数会对参数求值，直至遇到第一个 TRUE 参数，然后返回 TRUE。\n\n",
        "url-dax-guide": "https://dax.guide/or/"
    },
    "SWITCH": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/switch-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/switch-function-dax",
        "description-en-us": "Evaluates an expression against a list of values and returns one of multiple possible result expressions.",
        "category-en-us": "Logical functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/logical-functions-dax",
        "category-zh-cn": "逻辑函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/logical-functions-dax",
        "description-zh-cn": "针对值列表计算表达式，并返回多个可能的结果表达式之一。",
        "url-dax-guide": "https://dax.guide/switch/"
    },
    "TRUE": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/true-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/true-function-dax",
        "description-en-us": "Returns the logical value TRUE.",
        "category-en-us": "Logical functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/logical-functions-dax",
        "category-zh-cn": "逻辑函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/logical-functions-dax",
        "description-zh-cn": "返回逻辑值 TRUE。",
        "url-dax-guide": "https://dax.guide/true/"
    },
    "ABS": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/abs-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/abs-function-dax",
        "description-en-us": "Returns the absolute value of a number.",
        "category-en-us": "Math and trig functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/math-and-trig-functions-dax",
        "category-zh-cn": "数学和三角函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/math-and-trig-functions-dax",
        "description-zh-cn": "返回某一数字的绝对值。",
        "url-dax-guide": "https://dax.guide/abs/"
    },
    "ACOS": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/acos-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/acos-function-dax",
        "description-en-us": "Returns the arccosine, or inverse cosine, of a number. The arccosine is the angle whose cosine is number. The returned angle is given in radians in the range 0 (zero) to pi.",
        "category-en-us": "Math and trig functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/math-and-trig-functions-dax",
        "category-zh-cn": "数学和三角函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/math-and-trig-functions-dax",
        "description-zh-cn": "返回某一数字的反余弦值（又称逆余弦值）。 反余弦值是指余弦值为 number 的角度  。 返回的角度以弧度表示，范围在 0（零）至 pi 之间。",
        "url-dax-guide": "https://dax.guide/acos/"
    },
    "ACOSH": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/acosh-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/acosh-function-dax",
        "description-en-us": "Returns the inverse hyperbolic cosine of a number. The number must be greater than or equal to 1. The inverse hyperbolic cosine is the value whose hyperbolic cosine is number, so ACOSH(COSH(number)) equals number.",
        "category-en-us": "Math and trig functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/math-and-trig-functions-dax",
        "category-zh-cn": "数学和三角函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/math-and-trig-functions-dax",
        "description-zh-cn": "返回某一数字的反双曲余弦值。 数字必须大于或等于 1。 反双曲余弦是双曲余弦是数字的值，所以 ACOSH(COSH(number)) 等于数字  。",
        "url-dax-guide": "https://dax.guide/acosh/"
    },
    "ACOT": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/acot-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/acot-function-dax",
        "description-en-us": "Returns the principal value of the arccotangent, or inverse cotangent of a number.",
        "category-en-us": "Math and trig functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/math-and-trig-functions-dax",
        "category-zh-cn": "数学和三角函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/math-and-trig-functions-dax",
        "description-zh-cn": "返回 number 的反余切值的主值。",
        "url-dax-guide": "https://dax.guide/acot/"
    },
    "ACOTH": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/acoth-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/acoth-function-dax",
        "description-en-us": "Returns the inverse hyperbolic cotangent of a number.",
        "category-en-us": "Math and trig functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/math-and-trig-functions-dax",
        "category-zh-cn": "数学和三角函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/math-and-trig-functions-dax",
        "description-zh-cn": "返回某一数字的反双曲余切值。",
        "url-dax-guide": "https://dax.guide/acoth/"
    },
    "ASIN": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/asin-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/asin-function-dax",
        "description-en-us": "Returns the arcsine, or inverse sine, of a number. The arcsine is the angle whose sine is number. The returned angle is given in radians in the range -pi/2 to pi/2.",
        "category-en-us": "Math and trig functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/math-and-trig-functions-dax",
        "category-zh-cn": "数学和三角函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/math-and-trig-functions-dax",
        "description-zh-cn": "返回某一数字的反正弦值（又称逆正弦值）。 反正弦值是指正弦值为数值的角度  。 返回的角度以弧度表示，范围在 -pi/2 至 pi/2 之间。",
        "url-dax-guide": "https://dax.guide/asin/"
    },
    "ASINH": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/asinh-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/asinh-function-dax",
        "description-en-us": "Returns the inverse hyperbolic sine of a number. The inverse hyperbolic sine is the value whose hyperbolic sine is number, so ASINH(SINH(number)) equals number.",
        "category-en-us": "Math and trig functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/math-and-trig-functions-dax",
        "category-zh-cn": "数学和三角函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/math-and-trig-functions-dax",
        "description-zh-cn": "返回某一数字的反双曲正弦值。 反双曲正弦值是双曲正弦值为 number 的值，因此 ASINH(SINH(number)) 等于 number   。",
        "url-dax-guide": "https://dax.guide/asinh/"
    },
    "ATAN": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/atan-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/atan-function-dax",
        "description-en-us": "Returns the arctangent, or inverse tangent, of a number. The arctangent is the angle whose tangent is number. The returned angle is given in radians in the range -pi/2 to pi/2.",
        "category-en-us": "Math and trig functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/math-and-trig-functions-dax",
        "category-zh-cn": "数学和三角函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/math-and-trig-functions-dax",
        "description-zh-cn": "返回某一数字的反正切值（又称逆正切值）。 反正切值是指正切值为数字的角度  。 返回的角度以弧度表示，范围在 -pi/2 至 pi/2 之间。",
        "url-dax-guide": "https://dax.guide/atan/"
    },
    "ATANH": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/atanh-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/atanh-function-dax",
        "description-en-us": "Returns the inverse hyperbolic tangent of a number. Number must be between -1 and 1 (excluding -1 and 1). The inverse hyperbolic tangent is the value whose hyperbolic tangent is number, so ATANH(TANH(number)) equals number.",
        "category-en-us": "Math and trig functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/math-and-trig-functions-dax",
        "category-zh-cn": "数学和三角函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/math-and-trig-functions-dax",
        "description-zh-cn": "返回某一数字的反双曲正切值。 数字必须在 -1 和 1 之间（不含 -1 和 1）。 反双曲正切值是指双曲正切值为 number 的值，因此 ATANH(TANH(number)) 等于 number   。",
        "url-dax-guide": "https://dax.guide/atanh/"
    },
    "CEILING": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/ceiling-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/ceiling-function-dax",
        "description-en-us": "Rounds a number up, to the nearest integer or to the nearest multiple of significance.\nThere are two CEILING functions in DAX, with the following differences:\n\nThe CEILING function emulates the behavior of the CEILING function in Excel.\nThe ISO.CEILING function follows the ISO-defined behavior for determining the ceiling value.\n\n\nThe two functions return the same value for positive numbers, but different values for negative numbers.  When using a positive multiple of significance, both CEILING and ISO.CEILING round negative numbers upward (toward positive infinity).  When using a negative multiple of significance, CEILING rounds negative numbers downward (toward negative infinity), while ISO.CEILING rounds negative numbers upward (toward positive infinity).\n\nThe return type is usually of the same type of the significant argument, with the following exceptions:\n\nIf the number argument type is currency, the return type is currency.\nIf the significance argument type is Boolean, the return type is integer.\nIf the significance argument type is non-numeric, the return type is real.\n\n\n",
        "category-en-us": "Math and trig functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/math-and-trig-functions-dax",
        "category-zh-cn": "数学和三角函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/math-and-trig-functions-dax",
        "description-zh-cn": "将数值向上舍入为最接近的整数或最接近的基数倍数。\nDAX 中有两个 CEILING 函数，区别如下：\n\nCEILING 函数模拟 Excel 中 CEILING 函数的行为。\nISO.CEILING 函数遵循 ISO 定义的行为来确定上限值。\n\n\n这两个函数针对正数返回相同的值，针对负数返回不同的值。  使用正数的基数倍数时，CEILING 和 ISO.CEILING 都将负数向上舍入（向正无穷大方向舍入）。  使用负数的基数倍数时，CEILING 将负数向下舍入（向负无穷大方向舍入），而 ISO.CEILING 将负数向上舍入（向正无穷大方向舍入）。\n\n返回类型通常与重要参数的类型相同，但以下情况除外：\n\n如果 number 参数为货币类型，则返回货币类型。\n如果 significance 参数为布尔类型，则返回整数类型。\n如果 significance 参数类型为非数字，则返回类型为实数。\n\n\n",
        "url-dax-guide": "https://dax.guide/ceiling/"
    },
    "CONVERT": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/convert-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/convert-function-dax",
        "description-en-us": "Converts an expression of one data type to another.\nThe function returns an error when a value cannot be converted to the specified data type.\n\nDAX calculated columns must be of a single data type. Since MEDIAN and MEDIANX functions over an integer column return mixed data types, either integer or double, the following calculated column expression will return an error as a result: MedianNumberCarsOwned = MEDIAN(DimCustomer[NumberCarsOwned]).\n\nTo avoid mixed data types, change the expression to always return the double data type, for example:\nMedianNumberCarsOwned = MEDIANX(DimCustomer, CONVERT([NumberCarsOwned], DOUBLE)).\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Math and trig functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/math-and-trig-functions-dax",
        "category-zh-cn": "数学和三角函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/math-and-trig-functions-dax",
        "description-zh-cn": "将一种数据类型的表达式转换为另一种。\n某个值无法转换为指定的数据类型时，函数返回错误。\n\nDAX 计算列必须都采用一种数据类型。 由于对整数列执行的 MEDIAN 和 MEDIANX 函数返回混合数据类型（整数或双精度），因此以下计算列表达式将返回错误，结果如下：MedianNumberCarsOwned = MEDIAN(DimCustomer[NumberCarsOwned])。\n\n若要避免混合数据类型，请将表达式更改为始终返回双精度数据类型，例如：\nMedianNumberCarsOwned = MEDIANX(DimCustomer, CONVERT([NumberCarsOwned], DOUBLE)).\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/convert/"
    },
    "COS": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/cos-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/cos-function-dax",
        "description-en-us": "Returns the cosine of the given angle.",
        "category-en-us": "Math and trig functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/math-and-trig-functions-dax",
        "category-zh-cn": "数学和三角函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/math-and-trig-functions-dax",
        "description-zh-cn": "返回给定角度的余弦值。",
        "url-dax-guide": "https://dax.guide/cos/"
    },
    "COSH": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/cosh-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/cosh-function-dax",
        "description-en-us": "Returns the hyperbolic cosine of a number.\nThe formula for the hyperbolic cosine is:\n$$\\text{COSH}(z) = \\frac{e^{z} + e^{-z}}{2}$$\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Math and trig functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/math-and-trig-functions-dax",
        "category-zh-cn": "数学和三角函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/math-and-trig-functions-dax",
        "description-zh-cn": "返回某一数字的双曲余弦值。\n双曲余弦值的公式为：\n$$\\text{COSH}(z) = \\frac{e^{z} + e^{-z}}{2}$$\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/cosh/"
    },
    "COT": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/cot-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/cot-function-dax",
        "description-en-us": "Returns the cotangent of an angle specified in radians.\nThe absolute value of number must be less than 2^27 and cannot be 0.\n\nIf number is outside its constraints, an error is returned.\n\nIf number is a non-numeric value, an error is returned.\n\n",
        "category-en-us": "Math and trig functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/math-and-trig-functions-dax",
        "category-zh-cn": "数学和三角函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/math-and-trig-functions-dax",
        "description-zh-cn": "返回以弧度为单位指定的角度的余切值。\nnumber 的绝对值必须小于 2^27，且不得为 0。\n\n如果 number 在它的约束之外，则返回错误。\n\n如果 number 为非数值，则返回错误。\n\n",
        "url-dax-guide": "https://dax.guide/cot/"
    },
    "COTH": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/coth-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/coth-function-dax",
        "description-en-us": "Returns the hyperbolic cotangent of a hyperbolic angle.\nThe hyperbolic cotangent is an analog of the ordinary (circular) cotangent.\n\nThe absolute value of number must be less than $2^{27}$ and cannot be 0.\n\nIf number is outside its constraints, an error is returned\n\nIf number is a non-numeric value, an error is returned.\n\nThe following equation is used:\n$$\\text{COTH}(N) = \\frac{1}{\\text{TANH}(N)} = \\frac{\\text{COSH(N)}}{\\text{SINH(N)}} = \\frac{e^{N} + e^{-N}}{e^{N} - e^{-N}}$$\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Math and trig functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/math-and-trig-functions-dax",
        "category-zh-cn": "数学和三角函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/math-and-trig-functions-dax",
        "description-zh-cn": "返回双曲角的双曲余切值。\n双曲余切类似于普通余切（圆余切）。\n\nnumber 的绝对值必须小于 $2^{27}$，且不得为 0。\n\n如果 number 在它的约束之外，则返回错误\n\n如果 number 为非数值，则返回错误。\n\n将使用以下公式：\n$$\\text{COTH}(N) = \\frac{1}{\\text{TANH}(N)} = \\frac{\\text{COSH(N)}}{\\text{SINH(N)}} = \\frac{e^{N} + e^{-N}}{e^{N} - e^{-N}}$$\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/coth/"
    },
    "CURRENCY": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/currency-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/currency-function-dax",
        "description-en-us": "Evaluates the argument and returns the result as currency data type.\nThe CURRENCY function rounds up the 5th significant decimal, in value, to return the 4th decimal digit. Rounding up occurs if the 5th significant decimal is equal or larger than 5. For example, if value is 3.6666666666666 then converting to currency returns \\$3.6667. However, if value is 3.0123456789 then converting to currency returns \\$3.0123.\n\nIf the data type of the expression is TrueFalse then CURRENCY(<TrueFalse>) will return \\$1.0000 for True values and \\$0.0000 for False values.\n\nIf the data type of the expression is Text then CURRENCY(<Text>) will try to convert text to a number. If conversion succeeds the number will be converted to currency, otherwise an error is returned.\n\nIf the data type of the expression is DateTime then CURRENCY(<DateTime>) will convert the datetime value to a number and that number to currency. DateTime values have an integer part that represents the number of days between the given date and 1900-03-01 and a fraction that represents the fraction of a day (where 12 hours or noon is 0.5 day). If the value of the expression is not a proper DateTime value an error is returned.\n\n",
        "category-en-us": "Math and trig functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/math-and-trig-functions-dax",
        "category-zh-cn": "数学和三角函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/math-and-trig-functions-dax",
        "description-zh-cn": "计算参数并以货币数据类型的形式返回结果。\nCURRENCY 函数会在值中向上舍入到第 5 个有效十进制数来返回第 4 个十进制数字。 如果第 5 个有效十进制数等于或大于 5，则会向上舍入。 例如，如果值是 3.6666666666666，则转换为货币将返回 \\$3.6667。 但是，如果值是 3.0123456789，则转换为货币将返回 \\$3.0123。\n\n如果表达式的数据类型为 TrueFalse，则 CURRENCY(<TrueFalse>) 将返回 \\$1.0000 作为 True 值，返回 \\$0.0000 作为 False 值。\n\n如果表达式的数据类型为 Text，则 CURRENCY(<Text>) 将尝试将文本转换为数字。 如果转换成功，数字将转换为货币；否则，返回错误。\n\n如果表达式的数据类型为 DateTime，则 CURRENCY(<DateTime>) 会将日期/时间值转换为数字，然后将该数字转换为货币。 DateTime 值具有整数部分和小数部分，前者表示给定日期与 1900 年 03 月 01 日之间的天数，后者表示一天中的一部分（12 个小时或中午为 0.5 天）。 如果表达式的值不是正确的 DateTime 值，则会返回错误。\n\n",
        "url-dax-guide": "https://dax.guide/currency/"
    },
    "DEGREES": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/degrees-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/degrees-function-dax",
        "description-en-us": "Converts radians into degrees.",
        "category-en-us": "Math and trig functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/math-and-trig-functions-dax",
        "category-zh-cn": "数学和三角函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/math-and-trig-functions-dax",
        "description-zh-cn": "将弧度转换成角度。",
        "url-dax-guide": "https://dax.guide/degrees/"
    },
    "DIVIDE": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/divide-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/divide-function-dax",
        "description-en-us": "Performs division and returns alternate result or BLANK() on division by 0.\nA decimal number.\n",
        "category-en-us": "Math and trig functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/math-and-trig-functions-dax",
        "category-zh-cn": "数学和三角函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/math-and-trig-functions-dax",
        "description-zh-cn": "{1}执行除法运算，并在被 0 除时返回备用结果或 BLANK()。{2}\n一个小数。\n",
        "url-dax-guide": "https://dax.guide/divide/"
    },
    "EVEN": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/even-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/even-function-dax",
        "description-en-us": "Returns number rounded up to the nearest even integer. You can use this function for processing items that come in twos. For example, a packing crate accepts rows of one or two items. The crate is full when the number of items, rounded up to the nearest two, matches the crate's capacity.\nIf number is nonnumeric, EVEN returns the #VALUE! error value.\n\nRegardless of the sign of number, a value is rounded up when adjusted away from zero. If number is an even integer, no rounding occurs.\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Math and trig functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/math-and-trig-functions-dax",
        "category-zh-cn": "数学和三角函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/math-and-trig-functions-dax",
        "description-zh-cn": "返回向上舍入到最接近的偶数的数字。 你可以使用此函数来处理成对出现的项。 例如，一个包装箱可容纳一排或两排物品。 当物品的数量（向上舍入到最接近的偶数）与箱的容量相匹配时，则箱已满。\n如果 number 为非数字，则 EVEN 返回 #VALUE! 错误值。\n\n无论数字是何符号，向远离零的方向调整时，值都向上舍入。 如果 number 为偶数，则不进行舍入。\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/even/"
    },
    "EXP": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/exp-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/exp-function-dax",
        "description-en-us": "Returns e raised to the power of a given number. The constant e equals 2.71828182845904, the base of the natural logarithm.\nEXP is the inverse of LN, which is the natural logarithm of the given number.\n\nTo calculate powers of bases other than e, use the exponentiation operator (^). For more information, see DAX Operator Reference.\n\n",
        "category-en-us": "Math and trig functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/math-and-trig-functions-dax",
        "category-zh-cn": "数学和三角函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/math-and-trig-functions-dax",
        "description-zh-cn": "返回 e 的指定次方。 常数 e 等于2.71828182845904，这是自然对数的底数。\nEXP 是 LN 的反对数，LN 是给定数字的自然对数。\n\n若要计算 e 以外的其他底数的幂，请使用求幂运算符 (^)。 有关详细信息，请参阅 DAX 运算符参考。\n\n",
        "url-dax-guide": "https://dax.guide/exp/"
    },
    "FACT": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/fact-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/fact-function-dax",
        "description-en-us": "Returns the factorial of a number, equal to the series 1*2*3*...* , ending in the given number.\nIf the number is not an integer, it is truncated and an error is returned. If the result is too large, an error is returned.\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Math and trig functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/math-and-trig-functions-dax",
        "category-zh-cn": "数学和三角函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/math-and-trig-functions-dax",
        "description-zh-cn": "返回一个数字的阶乘，等于序列 1*2*3*...*（以给定数字结尾）。\n如果数字不是整数，则会被截断并返回错误。 如果结果太大，则会返回错误。\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/fact/"
    },
    "FLOOR": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/floor-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/floor-function-dax",
        "description-en-us": "Rounds a number down, toward zero, to the nearest multiple of significance.\nIf either argument is nonnumeric, FLOOR returns **#VALUE!**error value.\n\nIf number and significance have different signs, FLOOR returns the **#NUM!**error value.\n\nRegardless of the sign of the number, a value is rounded down when adjusted away from zero. If the number is an exact multiple of significance, no rounding occurs.\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Math and trig functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/math-and-trig-functions-dax",
        "category-zh-cn": "数学和三角函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/math-and-trig-functions-dax",
        "description-zh-cn": "向零方向将数值向下舍入为最接近的基数倍数。\n如果任何一个参数是非数值的，则 FLOOR 返回“#VALUE!”错误值。\n\n如果数值和基数的符号不同，则 FLOOR 返回“#NUM!”错误值。\n\n无论数字的符号如何，值按远离零的方向向下舍入。 如果数字是基数的精确倍数，则不进行舍入。\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/floor/"
    },
    "GCD": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/gcd-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/gcd-function-dax",
        "description-en-us": "Returns the greatest common divisor of two or more integers. The greatest common divisor is the largest integer that divides both number1 and number2 without a remainder.\nIf any argument is nonnumeric, GCD returns the #VALUE! error value.\n\nIf any argument is less than zero, GCD returns the #NUM! error value.\n\nOne divides any value evenly.\n\nA prime number has only itself and one as even divisors.\n\nIf a parameter to GCD is >=2^53, GCD returns the #NUM! error value.\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Math and trig functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/math-and-trig-functions-dax",
        "category-zh-cn": "数学和三角函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/math-and-trig-functions-dax",
        "description-zh-cn": "返回两个或多个整数的最大公约数。 最大公约数是除 number1 和 number2 没有余数的最大整数。\n如果参数为非数字，则 GCD 返回 #VALUE! 错误值。\n\n如果参数小于 0，则 GCD 返回 #NUM! 错误值。\n\n任何值都能被 1 整除。\n\n质数只能被其本身和 1 整除。\n\n如果 GCD 的参数 >=2^53，则 GCD 将返回 #NUM！ 错误值。\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/gcd/"
    },
    "INT": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/int-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/int-function-dax",
        "description-en-us": "Rounds a number down to the nearest integer.",
        "category-en-us": "Math and trig functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/math-and-trig-functions-dax",
        "category-zh-cn": "数学和三角函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/math-and-trig-functions-dax",
        "description-zh-cn": "将数值向下舍入到最接近的整数。",
        "url-dax-guide": "https://dax.guide/int/"
    },
    "ISO.CEILING": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/iso-ceiling-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/iso-ceiling-function-dax",
        "description-en-us": "Rounds a number up, to the nearest integer or to the nearest multiple of significance.\nThe CEILING function emulates the behavior of the CEILING function in Excel.\n\nThe ISO.CEILING function follows the ISO-defined behavior for determining the ceiling value.\n\n",
        "category-en-us": "Math and trig functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/math-and-trig-functions-dax",
        "category-zh-cn": "数学和三角函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/math-and-trig-functions-dax",
        "description-zh-cn": "将数值向上舍入为最接近的整数或最接近的基数倍数。\nCEILING 函数模拟 Excel 中 CEILING 函数的行为。\n\nISO.CEILING 函数遵循 ISO 定义的行为来确定上限值。\n\n",
        "url-dax-guide": "https://dax.guide/iso.ceiling/"
    },
    "LCM": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/lcm-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/lcm-function-dax",
        "description-en-us": "Returns the least common multiple of integers. The least common multiple is the smallest positive integer that is a multiple of all integer arguments number1, number2, and so on. Use LCM to add fractions with different denominators.\nIf any argument is nonnumeric, LCM returns the #VALUE! error value.\n\nIf any argument is less than zero, LCM returns the #NUM! error value.\n\nIf LCM(a,b) >=2^53, LCM returns the #NUM! error value.\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Math and trig functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/math-and-trig-functions-dax",
        "category-zh-cn": "数学和三角函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/math-and-trig-functions-dax",
        "description-zh-cn": "返回整数的最小公倍数。 最小公倍数是指 number1、number2 等所有整数参数的倍数中的最小正整数。 使用 LCM 添加分母不同的分数。\n如果参数为非数字，则 LCM 返回 #VALUE! 错误值。\n\n如果参数小于 0，则 LCM 返回 #NUM! 错误值。\n\n如果 LCM(a,b) >=2^53，则 LCM 返回 #NUM! 错误值。\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/lcm/"
    },
    "LN": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/ln-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/ln-function-dax",
        "description-en-us": "Returns the natural logarithm of a number. Natural logarithms are based on the constant e (2.71828182845904).",
        "category-en-us": "Math and trig functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/math-and-trig-functions-dax",
        "category-zh-cn": "数学和三角函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/math-and-trig-functions-dax",
        "description-zh-cn": "返回某一数字的自然对数。 自然对数基于常数 e (2.71828182845904)。",
        "url-dax-guide": "https://dax.guide/ln/"
    },
    "LOG": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/log-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/log-function-dax",
        "description-en-us": "Returns the logarithm of a number to the base you specify.",
        "category-en-us": "Math and trig functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/math-and-trig-functions-dax",
        "category-zh-cn": "数学和三角函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/math-and-trig-functions-dax",
        "description-zh-cn": "根据指定的底数返回数字的对数。",
        "url-dax-guide": "https://dax.guide/log/"
    },
    "LOG10": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/log10-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/log10-function-dax",
        "description-en-us": "Returns the base-10 logarithm of a number.",
        "category-en-us": "Math and trig functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/math-and-trig-functions-dax",
        "category-zh-cn": "数学和三角函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/math-and-trig-functions-dax",
        "description-zh-cn": "返回某一数字以 10 为底的对数。",
        "url-dax-guide": "https://dax.guide/log10/"
    },
    "MOD": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/mod-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/mod-function-dax",
        "description-en-us": "Returns the remainder after a number is divided by a divisor. The result always has the same sign as the divisor.\nIf the divisor is 0 (zero), MOD returns an error. You cannot divide by 0.\n\nThe MOD function can be expressed in terms of the INT function: MOD(n, d) = n - d*INT(n/d)\n\n",
        "category-en-us": "Math and trig functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/math-and-trig-functions-dax",
        "category-zh-cn": "数学和三角函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/math-and-trig-functions-dax",
        "description-zh-cn": "返回一个被除数除以一个除数后所得的余数。 结果的符号始终与除数的符号相同。\n如果除数为 0（零），MOD 返回错误。 除数不得为 0。\n\nMOD 函数可以通过 INT 函数表示：MOD(n, d) = n - d*INT(n/d)\n\n",
        "url-dax-guide": "https://dax.guide/mod/"
    },
    "MROUND": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/mround-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/mround-function-dax",
        "description-en-us": "Returns a number rounded to the desired multiple.",
        "category-en-us": "Math and trig functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/math-and-trig-functions-dax",
        "category-zh-cn": "数学和三角函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/math-and-trig-functions-dax",
        "description-zh-cn": "返回舍入到所需倍数的一个数字。",
        "url-dax-guide": "https://dax.guide/mround/"
    },
    "ODD": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/odd-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/odd-function-dax",
        "description-en-us": "Returns number rounded up to the nearest odd integer.\nIf number is nonnumeric, ODD returns the #VALUE! error value.\n\nRegardless of the sign of number, a value is rounded up when adjusted away from zero. If number is an odd integer, no rounding occurs.\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Math and trig functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/math-and-trig-functions-dax",
        "category-zh-cn": "数学和三角函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/math-and-trig-functions-dax",
        "description-zh-cn": "返回向上舍入到最接近的奇数的数字。\n如果 number 为非数字，ODD 则返回 #VALUE! 错误值。\n\n无论数字是何符号，向远离零的方向调整时，值都向上舍入。 如果 number 为奇数，则不进行舍入。\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/odd/"
    },
    "PI": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/pi-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/pi-function-dax",
        "description-en-us": "Returns the value of Pi, 3.14159265358979, accurate to 15 digits.",
        "category-en-us": "Math and trig functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/math-and-trig-functions-dax",
        "category-zh-cn": "数学和三角函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/math-and-trig-functions-dax",
        "description-zh-cn": "返回 Pi 值 3.14159265358979，精确到 15 位。",
        "url-dax-guide": "https://dax.guide/pi/"
    },
    "POWER": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/power-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/power-function-dax",
        "description-en-us": "Returns the result of a number raised to a power.",
        "category-en-us": "Math and trig functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/math-and-trig-functions-dax",
        "category-zh-cn": "数学和三角函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/math-and-trig-functions-dax",
        "description-zh-cn": "返回某一数字的乘幂结果。",
        "url-dax-guide": "https://dax.guide/power/"
    },
    "QUOTIENT": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/quotient-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/quotient-function-dax",
        "description-en-us": "Performs division and returns only the integer portion of the division result. Use this function when you want to discard the remainder of division.\nIf either argument is non-numeric, QUOTIENT returns the #VALUE! error value.\n\nYou can use a column reference instead of a literal value for either argument. However, if the column that you reference contains a 0 (zero), an error is returned for the entire column of values.\n\n",
        "category-en-us": "Math and trig functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/math-and-trig-functions-dax",
        "category-zh-cn": "数学和三角函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/math-and-trig-functions-dax",
        "description-zh-cn": "执行除法运算，并仅返回除法运算结果的整数部分。 若要放弃除法的其余部分，请使用此函数。\n如果任一参数为非数值，QUOTIENT 将返回 #VALUE! 错误值。\n\n可以为任何一个参数使用列引用而不是文字值。 但是，如果引用的列包含 0（零），则将为整列值返回错误。\n\n",
        "url-dax-guide": "https://dax.guide/quotient/"
    },
    "RADIANS": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/radians-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/radians-function-dax",
        "description-en-us": "Converts degrees to radians.",
        "category-en-us": "Math and trig functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/math-and-trig-functions-dax",
        "category-zh-cn": "数学和三角函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/math-and-trig-functions-dax",
        "description-zh-cn": "将度转换为弧度。",
        "url-dax-guide": "https://dax.guide/radians/"
    },
    "RAND": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/rand-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/rand-function-dax",
        "description-en-us": "Returns a random number greater than or equal to 0 and less than 1, evenly distributed. The number that is returned changes each time the cell containing this function is recalculated.\nRecalculation depends on various factors, including whether the model is set to Manual or Automatic recalculation mode, and whether data has been refreshed.\n\nRAND and other volatile functions that do not have fixed values are not always recalculated. For example, execution of a query or filtering will usually not cause such functions to be re-evaluated. However, the results for these functions will be recalculated when the entire column is recalculated. These situations include refresh from an external data source or manual editing of data that causes re-evaluation of formulas that contain these functions.\n\nRAND is always recalculated if the function is used in the definition of a measure.\n\nRAND function cannot return a result of zero, to prevent errors such as division by zero.\n\n",
        "category-en-us": "Math and trig functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/math-and-trig-functions-dax",
        "category-zh-cn": "数学和三角函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/math-and-trig-functions-dax",
        "description-zh-cn": "返回大于或等于 0 并且小于 1 的随机数字（平均分布）。 每次重新计算包含此函数的单元格时，返回的数字都会更改。\n重新计算取决于各种因素，包括模型是否设置为“手动”或“自动”重新计算模式，以及数据是否已刷新 。\n\n不会始终重新计算 RAND 和不具有固定值的其他易失函数。 例如，执行查询或筛选通常不会重新计算此类函数。 但是，当重新计算整个列时，将重新计算这些函数的结果。 这些情况包括从外部数据源刷新或手动编辑数据，从而重新计算包含这些函数的公式。\n\n如果在度量值的定义中使用该函数，则始终会重新计算 RAND。\n\nRAND 函数不会返回结果零，这是为了防止发生错误（如除零错误）。\n\n",
        "url-dax-guide": "https://dax.guide/rand/"
    },
    "RANDBETWEEN": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/randbetween-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/randbetween-function-dax",
        "description-en-us": "Returns a random number in the range between two numbers you specify.",
        "category-en-us": "Math and trig functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/math-and-trig-functions-dax",
        "category-zh-cn": "数学和三角函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/math-and-trig-functions-dax",
        "description-zh-cn": "返回指定的两个数值之间的一个随机数。",
        "url-dax-guide": "https://dax.guide/randbetween/"
    },
    "ROUND": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/round-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/round-function-dax",
        "description-en-us": "Rounds a number to the specified number of digits.\nIf num_digits is greater than 0 (zero), then number is rounded to the specified number of decimal places.\n\nIf num_digits is 0, the number is rounded to the nearest integer.\n\nIf num_digits is less than 0, the number is rounded to the left of the decimal point.\n\nRelated functions\n\nTo always round up (away from zero), use the ROUNDUP function.\nTo always round down (toward zero), use the ROUNDDOWN function.\nTo round a number to a specific multiple (for example, to round to the nearest multiple of 0.5), use the MROUND function.\nUse the functions TRUNC and INT to obtain the integer portion of the number.\n\n\n",
        "category-en-us": "Math and trig functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/math-and-trig-functions-dax",
        "category-zh-cn": "数学和三角函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/math-and-trig-functions-dax",
        "description-zh-cn": "将数值舍入到指定的位数。\n如果 num_digits 大于 0（零），则将数值舍入到指定的小数位数  。\n\n如果 num_digits 为 0，则将数字舍入为最接近的整数  。\n\n如果 num_digits 小于 0，则将数字舍入到小数点左侧  。\n\n相关函数\n\n若要始终向上舍入（远离零方向），请使用 ROUNDUP 函数。\n若要始终向下舍入（趋向零方向），请使用 ROUNDDOWN 函数。\n若要将数值舍入到特定倍数（例如，舍入为 0.5 的最接近倍数），请使用 MROUND 函数。\n可以使用 TRUNC 和 INT 函数来获取数值的整数部分。\n\n\n",
        "url-dax-guide": "https://dax.guide/round/"
    },
    "ROUNDDOWN": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/rounddown-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/rounddown-function-dax",
        "description-en-us": "Rounds a number down, toward zero.\nIf num_digits is greater than 0 (zero), then the value in number is rounded down to the specified number of decimal places.\n\nIf num_digits is 0, then the value in number is rounded down to the nearest integer.\n\nIf num_digits is less than 0, then the value in number is rounded down to the left of the decimal point.\n\nROUNDDOWN behaves like ROUND, except that it always rounds a number down. The INT function also rounds down, but with INT the result is always an integer, whereas with ROUNDDOWN you can control the precision of the result.\n\n",
        "category-en-us": "Math and trig functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/math-and-trig-functions-dax",
        "category-zh-cn": "数学和三角函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/math-and-trig-functions-dax",
        "description-zh-cn": "向零的方向向下舍入某一数字。\n如果 num_digits 大于 0（零），则将 number 中的值向下舍入到指定的小数位数   。\n\n如果 num_digits 为 0，则将 number 中的值向下舍入为最接近的整数   。\n\n如果 num_digits 小于 0，则将 number 中的值向下舍入到小数点左侧   。\n\nROUNDDOWN 的行为与 ROUND 相似，但它始终向下舍入数字。 INT 函数也向下舍入，但在使用 INT 时，结果始终为整数，而使用 ROUNDDOWN 则可以控制结果的精度。\n\n",
        "url-dax-guide": "https://dax.guide/rounddown/"
    },
    "ROUNDUP": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/roundup-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/roundup-function-dax",
        "description-en-us": "Rounds a number up, away from 0 (zero).\nIf num_digits is greater than 0 (zero), then the number is rounded up to the specified number of decimal places.\n\nIf num_digits is 0, then number is rounded up to the nearest integer.\n\nIf num_digits is less than 0, then number is rounded up to the left of the decimal point.\n\nROUNDUP behaves like ROUND, except that it always rounds a number up.\n\n",
        "category-en-us": "Math and trig functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/math-and-trig-functions-dax",
        "category-zh-cn": "数学和三角函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/math-and-trig-functions-dax",
        "description-zh-cn": "按远离 0（零）的方向向上舍入某一数字。\n如果 num_digits 大于 0（零），则将数值向上舍入到指定的小数位数。\n\n如果 num_digits 为 0，则将数值向上舍入为最接近的整数。\n\n如果 num_digits 小于 0，则将数值向上舍入到小数点左侧。\n\nROUNDUP 的行为与 ROUND 相似，但它始终向上舍入数字。\n\n",
        "url-dax-guide": "https://dax.guide/roundup/"
    },
    "SIGN": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/sign-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/sign-function-dax",
        "description-en-us": "Determines the sign of a number, the result of a calculation, or a value in a column. The function returns 1 if the number is positive, 0 (zero) if the number is zero, or -1 if the number is negative.",
        "category-en-us": "Math and trig functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/math-and-trig-functions-dax",
        "category-zh-cn": "数学和三角函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/math-and-trig-functions-dax",
        "description-zh-cn": "确定列中数字、计算结果或值的符号。 如果数字为正，则函数返回 1，如果数字为零，则为 0（零），如果数值为负，则为 -1。",
        "url-dax-guide": "https://dax.guide/sign/"
    },
    "SIN": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/sin-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/sin-function-dax",
        "description-en-us": "Returns the sine of the given angle.",
        "category-en-us": "Math and trig functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/math-and-trig-functions-dax",
        "category-zh-cn": "数学和三角函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/math-and-trig-functions-dax",
        "description-zh-cn": "返回给定角度的正弦值。",
        "url-dax-guide": "https://dax.guide/sin/"
    },
    "SINH": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/sinh-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/sinh-function-dax",
        "description-en-us": "Returns the hyperbolic sine of a number.\nThe formula for the hyperbolic sine is:\n$$\\text{SINH}(z) = \\frac{e^{z} - e^{-z}}{2}$$\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Math and trig functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/math-and-trig-functions-dax",
        "category-zh-cn": "数学和三角函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/math-and-trig-functions-dax",
        "description-zh-cn": "返回某一数字的双曲正弦值。\n双曲正弦值的公式为：\n$$\\text{SINH}(z) = \\frac{e^{z} - e^{-z}}{2}$$\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/sinh/"
    },
    "SQRT": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/sqrt-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/sqrt-function-dax",
        "description-en-us": "Returns the square root of a number.",
        "category-en-us": "Math and trig functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/math-and-trig-functions-dax",
        "category-zh-cn": "数学和三角函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/math-and-trig-functions-dax",
        "description-zh-cn": "返回某一数字的平方根。",
        "url-dax-guide": "https://dax.guide/sqrt/"
    },
    "SQRTPI": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/sqrtpi-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/sqrtpi-function-dax",
        "description-en-us": "Returns the square root of (number * pi).",
        "category-en-us": "Math and trig functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/math-and-trig-functions-dax",
        "category-zh-cn": "数学和三角函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/math-and-trig-functions-dax",
        "description-zh-cn": "返回 (数字 * pi) 的平方根。",
        "url-dax-guide": "https://dax.guide/sqrtpi/"
    },
    "TAN": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/tan-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/tan-function-dax",
        "description-en-us": "Returns the tangent of the given angle.",
        "category-en-us": "Math and trig functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/math-and-trig-functions-dax",
        "category-zh-cn": "数学和三角函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/math-and-trig-functions-dax",
        "description-zh-cn": "返回给定角度的正切值。",
        "url-dax-guide": "https://dax.guide/tan/"
    },
    "TANH": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/tanh-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/tanh-function-dax",
        "description-en-us": "Returns the hyperbolic tangent of a number.\nThe formula for the hyperbolic tangent is:\n$$\\text{TANH}(z) = \\frac{\\text{SINH}(z)}{\\text{COSH}(z)}$$\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Math and trig functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/math-and-trig-functions-dax",
        "category-zh-cn": "数学和三角函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/math-and-trig-functions-dax",
        "description-zh-cn": "返回某一数字的双曲正切值。\n双曲正切的公式为：\n$$\\text{TANH}(z) = \\frac{\\text{SINH}(z)}{\\text{COSH}(z)}$$\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/tanh/"
    },
    "TRUNC": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/trunc-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/trunc-function-dax",
        "description-en-us": "Truncates a number to an integer by removing the decimal, or fractional, part of the number.",
        "category-en-us": "Math and trig functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/math-and-trig-functions-dax",
        "category-zh-cn": "数学和三角函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/math-and-trig-functions-dax",
        "description-zh-cn": "通过删除数字的小数或分数部分将数字截断为整数。",
        "url-dax-guide": "https://dax.guide/trunc/"
    },
    "BLANK": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/blank-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/blank-function-dax",
        "description-en-us": "Returns a blank.\nBlanks are not equivalent to nulls. DAX uses blanks for both database nulls and for blank cells in Excel.\n\nSome DAX functions treat blank cells somewhat differently from Microsoft Excel. Blanks and empty strings (\"\") are not always equivalent, but some operations may treat them as such.\n\n",
        "category-en-us": "Other functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/other-functions-dax",
        "category-zh-cn": "其他函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/other-functions-dax",
        "description-zh-cn": "返回空白。\n空白不等于 NULL。 DAX 对于数据库 NULL 值和 Excel 中的空白单元格都使用空白。\n\n某些 DAX 函数对空白单元格的处理与 Microsoft Excel 有所不同。 空白和空字符串 (\"\") 并不总是相等，但是某些操作可能会将它们视为相等。\n\n",
        "url-dax-guide": "https://dax.guide/blank/"
    },
    "ERROR": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/error-function",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/error-function",
        "description-en-us": "Raises an error with an error message.\nThe ERROR function can be placed in a DAX expression anywhere a scalar value is expected.\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Other functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/other-functions-dax",
        "category-zh-cn": "其他函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/other-functions-dax",
        "description-zh-cn": "引发错误并显示错误消息。\n可以将 ERROR 函数放在 DAX 表达式中任何需要标量值的地方。\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/error/"
    },
    "EVALUATEANDLOG": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/evaluateandlog-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/evaluateandlog-function-dax",
        "description-en-us": "Returns the value of the first argument and logs it in a DAX Evaluation Log profiler event. This function is fully functional in Power BI Desktop only. It acts as a simple passthrough function in other environments.\n“expression” is the text version of the first argument.\n“label” is the Label parameter when specified in the expression.\n“inputs” is a list of columns in the evaluation context that affects the values of the first argument.\n“outputs” is a list of a single column [Value] when the first argument is a scalar expression and a list of output columns when the first argument is a table expression.\n“data” is a list of input values and output values when the first argument is a scalar expression, and a list of input values and corresponding output rows when the first argument is a table expression.\n“rowCount” is the number of rows when the first argument is a table expression. Even though the number of rows in the json output is truncated by the MaxRows parameter, rowCount is the real number of rows without truncation.\n",
        "category-en-us": "Other functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/other-functions-dax",
        "category-zh-cn": "其他函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/other-functions-dax",
        "description-zh-cn": "返回第一个参数的值，并将其记录在 DAX 评估日志探查器事件中。 此函数仅在 Power BI Desktop 中完全正常运行。 它在其他环境中充当简单的直通函数。\n“expression”是第一个参数的文本版本。\n在表达式中指定时，“label”是 Label 参数。\n“inputs”是计算上下文中影响第一个参数值的列的列表。\n当第一个参数是标量表达式时，“outputs”是单个列 [Value] 的列表，当第一个参数是表表达式时，则为输出列的列表。\n当第一个参数为标量表达式时，“data”是输入值和输出值的列表，当第一个参数为表表达式时，则为输入值和相应输出行的列表。\n当第一个参数为表表达式时，“rowCount”是行数。 即使 json 输出中的行数被 MaxRows 参数截断，rowCount 也是没有截断时的实际行数。\n",
        "url-dax-guide": "https://dax.guide/evaluateandlog/"
    },
    "TOCSV": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/tocsv-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/tocsv-function-dax",
        "description-en-us": "Returns a table as a string in CSV format.",
        "category-en-us": "Other functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/other-functions-dax",
        "category-zh-cn": "其他函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/other-functions-dax",
        "description-zh-cn": "以 CSV 格式的字符串形式返回表。",
        "url-dax-guide": "https://dax.guide/tocsv/"
    },
    "TOJSON": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/tojson-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/tojson-function-dax",
        "description-en-us": "Returns a table as a string using JSON format.",
        "category-en-us": "Other functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/other-functions-dax",
        "category-zh-cn": "其他函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/other-functions-dax",
        "description-zh-cn": "以 JSON 格式的字符串形式返回表。",
        "url-dax-guide": "https://dax.guide/tojson/"
    },
    "PATH": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/path-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/path-function-dax",
        "description-en-us": "Returns a delimited text string with the identifiers of all the parents of the current identifier, starting with the oldest and continuing until current.\nThis function is used in tables that have some kind of internal hierarchy, to return the items that are related to the current row value. For example, in an Employees table that contains employees, the managers of employees, and the managers of the managers, you can return the path that connects an employee to his or her manager.\n\nThe path is not constrained to a single level of parent-child relationships; it can return related rows that are several levels up from the specified starting row.\n\nThe delimiter used to separate the ascendants is the vertical bar, '|'.\nThe values in ID_columnName and parent_columnName must have the same data type, text or integer.\nValues in parent_columnName must be present in ID_columnName. That is, you cannot look up a parent if there is no value at the child level.\nIf parent_columnName is BLANK then PATH() returns ID_columnName value.  In other words, if you look for the manager of an employee but the parent_columnName column has no data, the PATH function returns just the employee ID.\nIf ID_columnName has duplicates and parent_columnName is the same for those duplicates then PATH() returns the common parent_columnName value; however, if parent_columnName value is different for those duplicates then PATH() returns an error. In other words, if you have two listings for the same employee ID and they have the same manager ID, the PATH function returns the ID for that manager. However, if there are two identical employee IDs that have different manager IDs, the PATH function returns an error.\nIf ID_columnName is BLANK then PATH() returns BLANK.\nIf ID_columnName contains a vertical bar '|' then PATH() returns an error.\n\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Parent and child functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/parent-and-child-functions-dax",
        "category-zh-cn": "父函数和子函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/parent-and-child-functions-dax",
        "description-zh-cn": "返回一个带分隔符的文本字符串，其中包含当前标识符的所有父级的标识符，从最早的父级开始，一直持续到当前。\n在具有某种内部层次结构的表中使用此函数，以返回与当前行值相关的项目。 例如，在包含员工、经理和经理主管的员工表中，可以返回联系员工与其经理的路径。\n\n路径不限于单级父子关系；它可以返回指定起始行以上多级的相关行。\n\n用于分隔祖先的分隔符是竖线“|”。\nID_columnName 和 parent_columnName 中的值必须具有相同的数据类型，可以是文本或整数。\nparent_columnName 中的值必须存在于 ID_columnName 中。 也就是说，如果子级没有任何值，则无法查找父级。\n如果 parent_columnName 为 BLANK，则 PATH() 返回 ID_columnName 值。  换句话说，如果你寻找员工的经理，但 parent_columnName 列中没有数据，则 PATH 函数仅返回员工 ID。\n如果 ID_columnName 具有重复项，并且对于这些重复项，parent_columnName 是相同的，则 PATH() 返回公共的 parent_columnName 值；但是，如果这些重复项的 parent_columnName 值不同，则 PATH() 返回错误。 换句话说，如果你有两个具有相同员工 ID 的列表，并且它们具有相同的经理 ID，则 PATH 函数将返回该经理的 ID。 但是，如果有两个相同的员工 ID 具有不同的经理 ID，则 PATH 函数将返回错误。\n如果 ID_columnName 为 BLANK，则 PATH() 返回 BLANK。\n如果 ID_columnName 包含竖线“|”，则 PATH() 返回错误。\n\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/path/"
    },
    "PATHCONTAINS": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/pathcontains-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/pathcontains-function-dax",
        "description-en-us": "Returns TRUE if the specified item exists within the specified path.\nIf item is an integer number it is converted to text and then the function is evaluated. If conversion fails then the function returns an error.\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Parent and child functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/parent-and-child-functions-dax",
        "category-zh-cn": "父函数和子函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/parent-and-child-functions-dax",
        "description-zh-cn": "如果指定的路径中存在指定的项，则返回 TRUE。\n如果项是一个整数数字，则将其转换为文本，然后计算函数。 如果转换失败，则该函数将返回错误。\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/pathcontains/"
    },
    "PATHITEM": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/pathitem-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/pathitem-function-dax",
        "description-en-us": "Returns the item at the specified position from a string resulting from evaluation of a PATH function. Positions are counted from left to right.\nThis function can be used to return a specific level from a hierarchy returned by a PATH function. For example, you could return just the skip-level managers for all employees.\n\nIf you specify a number for position that is less than one (1) or greater than the number of elements in path, the PATHITEM function returns BLANK\n\nIf type is not a valid enumeration element an error is returned.\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Parent and child functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/parent-and-child-functions-dax",
        "category-zh-cn": "父函数和子函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/parent-and-child-functions-dax",
        "description-zh-cn": "从 PATH 函数的计算结果得到的字符串，返回指定位置处的项  。 从左到右对位置进行计数。\n此函数可用于从 PATH 函数返回的层次结构中返回特定级别。 例如，可以只为所有员工返回跨级别的经理。\n\n如果为 position 指定的数小于一 (1) 或大于 path 中的元素数，PATHITEM 函数将返回 BLANK\n\n如果 type 不是有效的枚举元素，则会返回错误。\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/pathitem/"
    },
    "PATHITEMREVERSE": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/pathitemreverse-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/pathitemreverse-function-dax",
        "description-en-us": "Returns the item at the specified position from a string resulting from evaluation of a PATH function. Positions are counted backwards from right to left.\nThis function can be used to get an individual item from a hierarchy resulting from a PATH function.\n\nThis function reverses the standard order of the hierarchy, so that closest items are listed first, For example, if the PATh function returns a list of managers above an employee in a hierarchy, the PATHITEMREVERSE function returns the employee's immediate manager in position 2 because position 1 contains the employee's id.\n\nIf the number specified for position is less than one (1) or greater than the number of elements in path, the PATHITEM function  returns BLANK.\n\nIf type is not a valid enumeration element an error is returned.\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Parent and child functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/parent-and-child-functions-dax",
        "category-zh-cn": "父函数和子函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/parent-and-child-functions-dax",
        "description-zh-cn": "从 PATH 函数的计算结果得到的字符串，返回指定位置处的项  。 位置按从右到左的顺序向后计数。\n此函数可用于从 PATH 函数生成的层次结构中获取单个项。\n\n此函数反转层次结构的标准顺序，以便先列出最近的项，例如，如果 PATh 函数返回层次结构中某个员工之上的经理列表，则 PATHITEMREVERSE 函数返回位置 2 中该员工的直属经理，因为位置 1 包含员工的 ID。\n\n如果为 position 指定的数小于一 (1) 或大于 path 中的元素数，则 PATHITEM 函数将返回 BLANK。\n\n如果 type 不是有效的枚举元素，则会返回错误。\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/pathitemreverse/"
    },
    "PATHLENGTH": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/pathlength-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/pathlength-function-dax",
        "description-en-us": "Returns the number of parents to the specified item in a given PATH result, including self.",
        "category-en-us": "Parent and child functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/parent-and-child-functions-dax",
        "category-zh-cn": "父函数和子函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/parent-and-child-functions-dax",
        "description-zh-cn": "返回给定 PATH 结果中指定项的父项数目，包括自身。",
        "url-dax-guide": "https://dax.guide/pathlength/"
    },
    "CROSSFILTER": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/crossfilter-function",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/crossfilter-function",
        "description-en-us": "Specifies the cross-filtering direction to be used in a calculation for a relationship that exists between two columns.\nIn the case of a 1:1 relationship, there is no difference between the one and both direction.\n\nCROSSFILTER can only be used in functions that take a filter as an argument, for example: CALCULATE, CALCULATETABLE, CLOSINGBALANCEMONTH, CLOSINGBALANCEQUARTER, CLOSINGBALANCEYEAR, OPENINGBALANCEMONTH, OPENINGBALANCEQUARTER, OPENINGBALANCEYEAR, TOTALMTD, TOTALQTD and TOTALYTD functions.\n\nCROSSFILTER uses existing relationships in the model, identifying relationships by their ending point columns.\n\nIn CROSSFILTER, the cross-filtering setting of a relationship is not important; that is, whether the relationship is set to filter one, or both directions in the model does not affect the usage of the function. CROSSFILTER will override any existing cross-filtering setting.\n\nAn error is returned if any of the columns named as an argument is not part of a relationship or the arguments belong to different relationships.\n\nIf CALCULATE expressions are nested, and more than one CALCULATE expression contains a CROSSFILTER function, then the innermost CROSSFILTER is the one that prevails in case of a conflict or ambiguity.\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Relationship functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/relationship-functions-dax",
        "category-zh-cn": "关系函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/relationship-functions-dax",
        "description-zh-cn": "指定要用于计算两列之间存在的关系的交叉筛选方向。\n在一对一关系的情况下，设置为单向和双向的效果并无任何区别。\n\nCROSSFILTER 只能用于将筛选器用作参数的函数中，例如：CALCULATE、CALCULATETABLE、CLOSINGBALANCEMONTH、CLOSINGBALANCEQUARTER、CLOSINGBALANCEYEAR、OPENINGBALANCEMONTH、OPENINGBALANCEQUARTER、OPENINGBALANCEYEAR、TOTALMTD、TOTALQTD 和 TOTALYTD 函数。\n\nCROSSFILTER 使用模型中的现有关系，通过关系两端的列标识关系。\n\n在 CROSSFILTER 中，关系的交叉筛选设置并不重要；也就是说，在模型中将关系设置为单向或双向筛选不会影响函数的使用。 CROSSFILTER 将覆盖任何现有的交叉筛选设置。\n\n如果任何命名为参数的列不属于一个关系，或者参数属于不同的关系，则会返回错误。\n\n如果 CALCULATE 表达式是嵌套的，并且多个 CALCULATE 表达式包含 CROSSFILTER 函数，则最内层的 CROSSFILTER 就是在有冲突或歧义的情况下起作用的函数。\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/crossfilter/"
    },
    "RELATED": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/related-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/related-function-dax",
        "description-en-us": "Returns a related value from another table.\nThe RELATED function requires that a relationship exists between the current table and the table with related information. You specify the column that contains the data that you want, and the function follows an existing many-to-one relationship to fetch the value from the specified column in the related table. If a relationship does not exist, you must create a relationship.\n\nWhen the RELATED function performs a lookup, it examines all values in the specified table regardless of any filters that may have been applied.\n\nThe RELATED function needs a row context; therefore, it can only be used in calculated column expression, where the current row context is unambiguous, or as a nested function in an expression that uses a table scanning function. A table scanning function, such as SUMX, gets the value of the current row value and then scans another table for instances of that value.\n\nThe RELATED function cannot be used to fetch a column across a limited relationship.\n\n",
        "category-en-us": "Relationship functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/relationship-functions-dax",
        "category-zh-cn": "关系函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/relationship-functions-dax",
        "description-zh-cn": "从其他表返回相关值。\nRELATED 函数要求当前表和具有相关信息的表之间存在关系。 你需指定包含所需数据的列，而该函数将遵循现有的多对一关系从相关表的指定列中提取值。 如果不存在关系，则必须创建关系。\n\nRELATED 函数执行查找时，将检查指定表中的所有值，而不考虑可能已应用的任何筛选器。\n\nRELATED 函数需要行上下文；因此，该函数只能在当前行上下文明确的计算列表达式中使用，或者在使用表扫描函数的表达式中用作嵌套函数。 SUMX 等表扫描函数获取当前行值的值，然后扫描另一个表，查找该值的实例。\n\nRELATED 函数不能用于跨有限关系提取列。\n\n",
        "url-dax-guide": "https://dax.guide/related/"
    },
    "RELATEDTABLE": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/relatedtable-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/relatedtable-function-dax",
        "description-en-us": "Evaluates a table expression in a context modified by the given filters.\nThe RELATEDTABLE function changes the context in which the data is filtered, and evaluates the expression in the new context that you specify.\n\nThis function is a shortcut for CALCULATETABLE function with no logical expression.\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Relationship functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/relationship-functions-dax",
        "category-zh-cn": "关系函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/relationship-functions-dax",
        "description-zh-cn": "在给定筛选器修改的上下文中计算表表达式。\nRELATEDTABLE 函数更改在其中筛选数据的上下文，并在指定的新上下文中计算表达式。\n\n此函数是 CALCULATETABLE 函数不带逻辑表达式的精简版。\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/relatedtable/"
    },
    "USERELATIONSHIP": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/userelationship-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/userelationship-function-dax",
        "description-en-us": "Specifies the relationship to be used in a specific calculation as the one that exists between columnName1 and columnName2.\nUSERELATIONSHIP can only be used in functions that take a filter as an argument, for example: CALCULATE, CALCULATETABLE, CLOSINGBALANCEMONTH, CLOSINGBALANCEQUARTER, CLOSINGBALANCEYEAR, OPENINGBALANCEMONTH, OPENINGBALANCEQUARTER, OPENINGBALANCEYEAR, TOTALMTD, TOTALQTD and TOTALYTD functions.\n\nUSERELATIONSHIP cannot be used when row level security is defined for the table in which the measure is included. For example, CALCULATE(SUM([SalesAmount]), USERELATIONSHIP(FactInternetSales[CustomerKey], DimCustomer[CustomerKey])) will return an error if row level security is defined for DimCustomer.\n\nUSERELATIONSHIP uses existing relationships in the model, identifying  relationships by their ending point columns.\n\nIn USERELATIONSHIP, the status of a relationship is not important; that is, whether the relationship is active or not does not affect the usage of the function. Even if the relationship is inactive, it will be used and overrides any other active relationships that might be present in the model but not mentioned in the function arguments.\n\nAn error is returned if any of the columns named as an argument is not part of a relationship or the arguments belong to different relationships.\n\nIf multiple relationships are needed to join table A to table B in a calculation, each relationship must be indicated in a different USERELATIONSHIP function.\n\nIf CALCULATE expressions are nested, and more than one CALCULATE expression contains a USERELATIONSHIP function, then the innermost USERELATIONSHIP is the one that prevails in case of a conflict or ambiguity.\n\nUp to 10 USERELATIONSHIP functions can be nested; however, your expression might have a deeper level of nesting, ie. the following sample expression is nested 3 levels deep but only 2 for USERELATIONSHIP: =CALCULATE(CALCULATE( CALCULATE( <anyExpression>, USERELATIONSHIP( t1[colA], t2[colB])), t99[colZ]=999), USERELATIONSHIP( t1[colA], t2[colA])).\n\nFor 1-to-1 relationships, USERELATIONSHIP will only activate the relationship in one direction. In particular, filters will only be able to flow from columnName2's table to columnName1's table. If bi-directional cross-filtering is desired, two USERELATIONSHIPs with opposite directionality can be used in the same calculation. For example, CALCULATE(..., USERELATIONSHIP(T1[K], T2[K]), USERELATIONSHIP(T2[K], T1[K])).\n\n",
        "category-en-us": "Relationship functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/relationship-functions-dax",
        "category-zh-cn": "关系函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/relationship-functions-dax",
        "description-zh-cn": "指定要在特定计算中使用的关系，如 columnName1 与 columnName2 之间存在的关系。\nUSERELATIONSHIP 只能用于将筛选器用作参数的函数中，例如：CALCULATE、CALCULATETABLE、CLOSINGBALANCEMONTH、CLOSINGBALANCEQUARTER、CLOSINGBALANCEYEAR、OPENINGBALANCEMONTH、OPENINGBALANCEQUARTER、OPENINGBALANCEYEAR、TOTALMTD、TOTALQTD 和 TOTALYTD 函数。\n\n如果包含度量值的表定义了行级安全性，则不能使用 USERELATIONSHIP。 例如，如果 DimCustomer 定义了行级别安全性，则 CALCULATE(SUM([SalesAmount]), USERELATIONSHIP(FactInternetSales[CustomerKey], DimCustomer[CustomerKey])) 将返回错误。\n\nUSERELATIONSHIP 使用模型中的现有关系，通过其结束点列来标识关系。\n\n在 USERELATIONSHIP 中，关系的状态不重要；也就是说，关系是否有效不影响函数的使用。 即使关系无效，也会使用该关系，并覆盖模型中可能存在但函数参数中未提及的其他任何有效的关系。\n\n如果任何命名为参数的列不属于一个关系，或者参数属于不同的关系，则会返回错误。\n\n如果计算时需要多个关系将表 A 联接到表 B，则每个关系必须在不同的 USERELATIONSHIP 函数中指明。\n\n如果 CALCULATE 表达式是嵌套的，并且多个 CALCULATE 表达式包含 USERELATIONSHIP 函数，则最内层的 USERELATIONSHIP 就是在有冲突或歧义的情况下起作用的函数。\n\n最多可以嵌套 10 个 USERELATIONSHIP 函数；但表达式可能具有更深层次的嵌套，例如，以下示例表达式的嵌套级别为 3，但其中只有 2 个是 USERELATIONSHIP：=CALCULATE(CALCULATE( CALCULATE( <anyExpression>, USERELATIONSHIP( t1[colA], t2[colB])), t99[colZ]=999), USERELATIONSHIP( t1[colA], t2[colA]))。\n\n对于 1 对 1 关系，USERELATIONSHIP 只会在一个方向激活关系。 具体而言，筛选器只能从 columnName2 的表流向 columnName1 的表。 如果需要双向交叉筛选，则同一计算中可以使用两个方向相反的 USERELATIONSHIP。 例如，CALCULATE(..., USERELATIONSHIP(T1[K], T2[K]), USERELATIONSHIP(T2[K], T1[K]))。\n\n",
        "url-dax-guide": "https://dax.guide/userelationship/"
    },
    "BETA.DIST": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/beta-dist-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/beta-dist-function-dax",
        "description-en-us": "Returns the beta distribution. The beta distribution is commonly used to study variation in the percentage of something across samples, such as the fraction of the day people spend watching television.\nIf any argument is nonnumeric, BETA.DIST returns the #VALUE! error value.\n\nIf any argument is not an integer, it is rounded.\n\nIf alpha ≤ 0 or beta ≤ 0, BETA.DIST returns the #NUM! error value.\n\nIf x < A, x > B, or A = B, BETA.DIST returns the #NUM! error value.\n\nIf you omit values for A and B, BETA.DIST uses the standard cumulative beta distribution, so that A = 0 and B = 1.\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Statistical functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/statistical-functions-dax",
        "category-zh-cn": "统计函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/statistical-functions-dax",
        "description-zh-cn": "返回 beta 分布。 Beta 分布通常用于研究样本中某个因素的变化情况（用百分数表示），如一天中人们看电视所花时间的比例。\n如果参数为非数字，则 BETA.DIST 返回 #VALUE! 错误值。\n\n如果参数不是整数，则对其进行舍入。\n\n如果 alpha ≤ 0 或 beta ≤ 0，则 BETA.DIST 返回 #NUM! 错误值。\n\n如果x < A、x > B 或 A = B，则 BETA.DIST 返回 #NUM! 错误值。\n\n如果省略 A 和 B 的值，则 BETA.DIST 使用标准的累积 beta 分布，因此 A = 0，B = 1。\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/beta.dist/"
    },
    "BETA.INV": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/beta-inv-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/beta-inv-function-dax",
        "description-en-us": "Returns the inverse of the beta cumulative probability density function (BETA.DIST).\nIf any argument is nonnumeric, BETA.INV returns the #VALUE! error value.\n\nIf any argument is not an integer, it is rounded.\n\nIf alpha ≤ 0 or beta ≤ 0, BETA.INV returns the #NUM! error value.\n\nIf probability ≤ 0 or probability > 1, BETA.INV returns the #NUM! error value.\n\nIf you omit values for A and B, BETA.INV uses the standard cumulative beta distribution, so that A = 0 and B = 1.\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Statistical functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/statistical-functions-dax",
        "category-zh-cn": "统计函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/statistical-functions-dax",
        "description-zh-cn": "返回逆 beta 累积概率密度函数 (BETA.DIST)。\n如果参数为非数字，则 BETA.INV 返回 #VALUE! 错误值。\n\n如果参数不是整数，则对其进行舍入。\n\n如果 alpha ≤ 0 或 beta ≤ 0，则 BETA.INV 返回 #NUM! 错误值。\n\n如果概率 ≤0 或概率 > 1，则 BETA.INV 返回 #NUM! 错误值。\n\n如果省略 A 和 B 的值，则 BETA.INV 使用标准的累积 Beta 分布，因此 A = 0，B = 1。\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/beta.inv/"
    },
    "CHISQ.DIST": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/chisq-dist-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/chisq-dist-function-dax",
        "description-en-us": "Returns the chi-squared distribution.\nIf x or deg_freedom is nonnumeric, an error is returned.\n\nIf deg_freedom is not an integer, it is rounded.\n\nIf x < 0, an error is returned.\n\nIf deg_freedom < 1 or deg_freedom > 10^10, an error is returned.\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Statistical functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/statistical-functions-dax",
        "category-zh-cn": "统计函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/statistical-functions-dax",
        "description-zh-cn": "返回卡方分步。\n如果 x 或 deg_freedom 为非数值，则返回错误。\n\n如果 deg_freedom 不是整数，则对其进行舍入。\n\n如果 x < 0，则返回错误。\n\n如果 deg_freedom < 1，或 deg_freedom > 10^10，则返回错误。\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/chisq.dist/"
    },
    "CHISQ.DIST.RT": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/chisq-dist-rt-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/chisq-dist-rt-function-dax",
        "description-en-us": "Returns the right-tailed probability of the chi-squared distribution.\nIf x or deg_freedom is nonnumeric, an error is returned.\n\nIf deg_freedom is not an integer, it is rounded.\n\nIf x < 0, an error is returned.\n\nIf deg_freedom < 1 or deg_freedom > 10^10, an error is returned.\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Statistical functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/statistical-functions-dax",
        "category-zh-cn": "统计函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/statistical-functions-dax",
        "description-zh-cn": "返回卡方分布的右尾概率。\n如果 x 或 deg_freedom 为非数值，则返回错误。\n\n如果 deg_freedom 不是整数，则对其进行舍入。\n\n如果 x < 0，则返回错误。\n\n如果 deg_freedom < 1，或 deg_freedom > 10^10，则返回错误。\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/chisq.dist.rt/"
    },
    "CHISQ.INV": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/chisq-inv-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/chisq-inv-function-dax",
        "description-en-us": "Returns the inverse of the left-tailed probability of the chi-squared distribution.\nIf argument is nonnumeric, CHISQ.INV returns the #VALUE! error value.\n\nIf probability < 0 or probability > 1, CHISQ.INV returns the #NUM! error value.\n\nIf deg_freedom is not an integer, it is rounded.\n\nIf deg_freedom < 0 or deg_freedom > 10^10, CHISQ.INV returns the #NUM! error value.\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Statistical functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/statistical-functions-dax",
        "category-zh-cn": "统计函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/statistical-functions-dax",
        "description-zh-cn": "返回卡方分布的左尾逆概率。\n如果参数是非数值的，CHISQ.INV 则返回 #VALUE! 错误值。\n\n如果概率 < 0 或概率 > 1，则 CHISQ.INV 返回 #NUM！ 错误值。\n\n如果 deg_freedom 不是整数，则对其进行舍入。\n\n如果 deg_freedom < 0 或 deg_freedom > 10^10，CHISQ.INV 则返回 #NUM! 错误值。\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/chisq.inv/"
    },
    "CHISQ.INV.RT": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/chisq-inv-rt-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/chisq-inv-rt-function-dax",
        "description-en-us": "Returns the inverse of the right-tailed probability of the chi-squared distribution.\nIf either argument is nonnumeric, CHISQ.INV.RT returns the #VALUE! error value.\n\nIf probability < 0 or probability > 1, CHISQ.INV.RT returns the #NUM! error value.\n\nIf deg_freedom is not an integer, it is rounded.\n\nIf deg_freedom < 1, CHISQ.INV.RT returns the #NUM! error value.\n\nGiven a value for probability, CHISQ.INV.RT seeks that value x such that CHISQ.DIST.RT(x, deg_freedom) = probability. Thus, precision of CHISQ.INV.RT depends on precision of CHISQ.DIST.RT. CHISQ.INV.RT uses an iterative search technique. If the search has not converged after 64 iterations, the function returns the #N/A error value.\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Statistical functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/statistical-functions-dax",
        "category-zh-cn": "统计函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/statistical-functions-dax",
        "description-zh-cn": "返回卡方分布的右尾逆概率。\n如果任何一个参数都是非数值的，则 CHISQ.INV.RT 返回 #VALUE! 错误值。\n\n如果概率 < 0 或概率 > 1，则 CHISQ.INV.RT 返回 #NUM！ 错误值。\n\n如果 deg_freedom 不是整数，则对其进行舍入。\n\n如果 deg_freedom < 1，则 CHISQ.INV.RT 返回 #NUM！ 错误值。\n\n给定概率值，CHISQ.INV.RT 会搜索该值 x，以使得 CHISQ.DIST.RT(x, deg_freedom) = probability。 因此，CHISQ.INV.RT 的精度取决于 CHISQ.DIST.RT 的精度。 CHISQ.INV.RT 使用迭代搜索技术。 如果搜索在 64 次迭代后仍未聚合，则该函数返回错误值 #N/A。\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/chisq.inv.rt/"
    },
    "COMBIN": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/combin-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/combin-function-dax",
        "description-en-us": "Returns the number of combinations for a given number of items. Use COMBIN to determine the total possible number of groups for a given number of items.\nNumeric arguments are truncated to integers.\n\nIf either argument is nonnumeric, COMBIN returns the #VALUE! error value.\n\nIf number < 0, number_chosen < 0, or number < number_chosen, COMBIN returns the #NUM! error value.\n\nA combination is any set or subset of items, regardless of their internal order. Combinations are distinct from permutations, for which the internal order is significant.\n\nThe number of combinations is as follows, where number = $n$ and number_chosen = $k$:\n$${n \\choose k} = \\frac{P_{k,n}}{k!} = \\frac{n!}{k!(n-k)!}$$\nWhere\n$$P_{k,n} = \\frac{n!}{(n-k)!}$$\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Statistical functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/statistical-functions-dax",
        "category-zh-cn": "统计函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/statistical-functions-dax",
        "description-zh-cn": "返回给定项数的组合数。 使用 COMBIN 来确定给定项数可能的总组数。\n数值参数会被截断为整数。\n\n如果任何一个参数都是非数值的，COMBIN 则返回 #VALUE! 错误值。\n\n如果 number < 0、number_chosen < 0 或 number < number_chosen，COMBIN 则返回 #NUM! 错误值。\n\n组合是项的任意集合或子集，无论它们的内部顺序如何。 组合与排列不同，后者的内部顺序很重要。\n\n组合数如下所示，其中 number = $n$，number_chosen = $k$：\n$${n \\choose k} = \\frac{P_{k,n}}{k!} = \\frac{n!}{k!(n-k)!}$$\n其中\n$$P_{k,n} = \\frac{n!}{(n-k)!}$$\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/combin/"
    },
    "COMBINA": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/combina-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/combina-function-dax",
        "description-en-us": "Returns the number of combinations (with repetitions) for a given number of items.\nIf the value of either argument is outside of its constraints, COMBINA returns the #NUM! error value.\n\nIf either argument is a non-numeric value, COMBINA returns the #VALUE! error value.\n\nThe following equation is used, where $N$ is Number and $M$ is Number_chosen:\n$${N+M-1 \\choose N-1}$$\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Statistical functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/statistical-functions-dax",
        "category-zh-cn": "统计函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/statistical-functions-dax",
        "description-zh-cn": "返回给定项数的组合数（包含重复）。\n如果任一参数的值超出其约束范围，则 COMBINA 返回 #NUM! 错误值。\n\n如果任一参数为非数值参数，则 COMBINA 返回 #VALUE! 错误值。\n\n使用以下等式，其中 $N$ 为 Number，$M$ 为 Number_chosen：\n$${N+M-1 \\choose N-1}$$\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/combina/"
    },
    "CONFIDENCE.NORM": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/confidence-norm-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/confidence-norm-function-dax",
        "description-en-us": "The confidence interval is a range of values. Your sample mean, x, is at the center of this range and the range is x ± CONFIDENCE.NORM. For example, if x is the sample mean of delivery times for products ordered through the mail, x ± CONFIDENCE.NORM is a range of population means. For any population mean, μ0, in this range, the probability of obtaining a sample mean further from μ0 than x is greater than alpha; for any population mean, μ0, not in this range, the probability of obtaining a sample mean further from μ0 than x is less than alpha. In other words, assume that we use x, standard_dev, and size to construct a two-tailed test at significance level alpha of the hypothesis that the population mean is μ0. Then we will not reject that hypothesis if μ0 is in the confidence interval and will reject that hypothesis if μ0 is not in the confidence interval. The confidence interval does not allow us to infer that there is probability 1 – alpha that our next package will take a delivery time that is in the confidence interval.\nIf any argument is nonnumeric, CONFIDENCE.NORM returns the #VALUE! error value.\n\nIf alpha ≤ 0 or alpha ≥ 1, CONFIDENCE.NORM returns the #NUM! error value.\n\nIf standard_dev ≤ 0, CONFIDENCE.NORM returns the #NUM! error value.\n\nIf size is not an integer, it is rounded.\n\nIf size < 1, CONFIDENCE.NORM returns the #NUM! error value.\n\nIf we assume alpha equals 0.05, we need to calculate the area under the standard normal curve that equals (1 - alpha), or 95 percent. This value is ± 1.96. The confidence interval is therefore:\n$$\\overline{x} \\pm 1.96 \\bigg( \\frac{\\sigma}{\\sqrt{n}} \\bigg) $$\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Statistical functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/statistical-functions-dax",
        "category-zh-cn": "统计函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/statistical-functions-dax",
        "description-zh-cn": "置信区间是一个值范围。 样本均值 x 是此范围的中心，该范围为 x ± CONFIDENCE.NORM。 例如，如果 x 是通过邮件预订的产品的交货时间的样本均值，则 x ± CONFIDENCE.NORM 是总体均值的范围。 对于在此范围中的任意总体平均值 μ0，从 μ0 而非 x 中获取样本平均值的概率大于 alpha；对于不在此范围内的任意总体平均值 μ0，从 μ0 而非 x 中获取样本平均值的概率小于 alpha。 换言之，假设我们使用 x、standard_dev 和 size 在显著性水平 alpha 上构造一个双尾测试，其中假设总体平均值为 μ0。 那么，如果 μ0 处于置信区间，我们不会拒绝该假设；如果 μ0 未处于置信区间，我们将拒绝该假设。 我们无法通过置信区间推断出概率 1 - alpha，即我们的下一个包的发送时间处于置信区间内。\n如果参数为非数字，则 CONFIDENCE.NORM 返回 #VALUE! 错误值。\n\n如果 alpha ≤ 0 或 alpha ≥ 1，则 CONFIDENCE.NORM 返回 #NUM! 错误值。\n\n如果 standard_dev ≤ 0，则 CONFIDENCE.NORM 返回 the #NUM! 错误值。\n\n如果 size 不是整数，则对其进行舍入。\n\n如果 size < 1，则 CONFIDENCE.NORM 返回 #NUM! 错误值。\n\n如果假设 alpha 等于 0.05，则需要计算等于 (1 - alpha) 或 95% 的标准正态分布曲线之下的面积。 此值为 ± 1.96。 因此，置信区间为：\n$$\\overline{x} \\pm 1.96 \\bigg( \\frac{\\sigma}{\\sqrt{n}} \\bigg) $$\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/confidence.norm/"
    },
    "CONFIDENCE.T": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/confidence-t-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/confidence-t-function-dax",
        "description-en-us": "Returns the confidence interval for a population mean, using a Student's t distribution.\nIf any argument is nonnumeric, CONFIDENCE.T returns the #VALUE! error value.\n\nIf alpha ≤ 0 or alpha ≥ 1, CONFIDENCE.T returns the #NUM! error value.\n\nIf standard_dev ≤ 0, CONFIDENCE.T returns the #NUM! error value.\n\nIf size is not an integer, it is rounded.\n\nIf size equals 1, CONFIDENCE.T returns #DIV/0! error value.\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Statistical functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/statistical-functions-dax",
        "category-zh-cn": "统计函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/statistical-functions-dax",
        "description-zh-cn": "使用学生的 t 分布返回总体平均值的置信区间。\n如果任何参数为非数字，则 CONFIDENCE.T 返回 #VALUE! 错误值。\n\n如果 alpha ≤ 0 或 alpha ≥ 1，则 CONFIDENCE.T 返回 #NUM! 错误值。\n\n如果 standard_dev ≤ 0，则 CONFIDENCE.T 返回 the #NUM! 错误值。\n\n如果 size 不是整数，则对其进行舍入。\n\n如果 size 等于1，则 CONFIDENCE.T 返回 #DIV/0! 错误值。\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/confidence.t/"
    },
    "EXPON.DIST": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/expon-dist-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/expon-dist-function-dax",
        "description-en-us": "Returns the exponential distribution. Use EXPON.DIST to model the time between events, such as how long an automated bank teller takes to deliver cash. For example, you can use EXPON.DIST to determine the probability that the process takes at most 1 minute.\nIf x or lambda is nonnumeric, EXPON.DIST returns the #VALUE! error value.\n\nIf x or lambda is not an integer, it is rounded.\n\nIf x < 0, EXPON.DIST returns the #NUM! error value.\n\nIf lambda ≤ 0, EXPON.DIST returns the #NUM! error value.\n\nThe equation for the probability density function is:\n$$f(x; \\lambda) = \\lambda e^{-\\lambda x}$$\n\nThe equation for the cumulative distribution function is:\n$$F(x; \\lambda) = 1 - e^{-\\lambda x}$$\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Statistical functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/statistical-functions-dax",
        "category-zh-cn": "统计函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/statistical-functions-dax",
        "description-zh-cn": "返回指数分布。 使用 EXPON.DIST 对事件之间的时间进行建模，例如银行的自动柜员机交付现金所需的时间。 例如，可以使用 EXPON.DIST 确定该过程最多花费 1 分钟的概率。\n如果 x 或 lambda 为非数字，EXPON.DIST 返回 #VALUE！ 错误值。\n\n如果 x 或 lambda 不是整数，则对其进行舍入。\n\n如果 x < 0，EXPON.DIST 返回 #NUM！ 错误值。\n\n如果 lambda ≤ 0，EXPON.DIST 返回 #NUM！ 错误值。\n\n概率密度函数的公式为：\n$$f(x; \\lambda) = \\lambda e^{-\\lambda x}$$\n\n累积分布函数的公式为：\n$$F(x; \\lambda) = 1 - e^{-\\lambda x}$$\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/expon.dist/"
    },
    "GEOMEAN": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/geomean-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/geomean-function-dax",
        "description-en-us": "Returns the geometric mean of the numbers in a column.\nOnly the numbers in the column are counted. Blanks, logical values, and text are ignored.\n\nGEOMEAN( Table[Column] ) is equivalent to GEOMEANX( Table, Table[Column] )\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Statistical functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/statistical-functions-dax",
        "category-zh-cn": "统计函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/statistical-functions-dax",
        "description-zh-cn": "返回列中数字的几何平均值。\n仅对列中的数字进行计数。 空白、逻辑值和文本会被忽略。\n\nGEOMEAN( Table[Column] ) 等效于 GEOMEANX( Table, Table[Column] )\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/geomean/"
    },
    "GEOMEANX": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/geomeanx-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/geomeanx-function-dax",
        "description-en-us": "Returns the geometric mean of an expression evaluated for each row in a table.\nThe GEOMEANX function takes as its first argument a table, or an expression that returns a table. The second argument is a column that contains the numbers for which you want to compute the geometric mean, or an expression that evaluates to a column.\n\nOnly the numbers in the column are counted. Blanks, logical values, and text are ignored.\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Statistical functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/statistical-functions-dax",
        "category-zh-cn": "统计函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/statistical-functions-dax",
        "description-zh-cn": "返回针对表中的每一行计算的表达式的几何平均值。\nGEOMEANX 函数将表或返回表的表达式作为其第一个参数。 第二个参数是包含要为其计算几何平均值的数值的列，或计算结果为列的表达式。\n\n仅对列中的数字进行计数。 空白、逻辑值和文本会被忽略。\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/geomeanx/"
    },
    "LINEST": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/linest-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/linest-function-dax",
        "description-en-us": "Uses the Least Squares method to calculate a straight line that best fits the given data, then returns a table describing the line. The equation for the line is of the form: y = Slope1*x1 + Slope2*x2 + ... + Intercept.\nSlope1, Slope2, ..., SlopeN: the coefficients corresponding to each x-value;\nIntercept: intercept value;\nStandardErrorSlope1, StandardErrorSlope2, ..., StandardErrorSlopeN: the standard error values for the coefficients Slope1, Slope2, ..., SlopeN;\nStandardErrorIntercept: the standard error value for the constant Intercept;\nCoefficientOfDetermination: the coefficient of determination (r²). Compares estimated and actual y-values, and ranges in value from 0 to 1: the higher the value, the higher the correlation in the sample;\nStandardError: the standard error for the y estimate;\nFStatistic: the F statistic, or the F-observed value. Use the F statistic to determine whether the observed relationship between the dependent and independent variables occurs by chance;\nDegreesOfFreedom: the degrees of freedom. Use this value to help you find F-critical values in a statistical table, and determine a confidence level for the model;\nRegressionSumOfSquares: the regression sum of squares;\nResidualSumOfSquares: the residual sum of squares.\n",
        "category-en-us": "Statistical functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/statistical-functions-dax",
        "category-zh-cn": "统计函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/statistical-functions-dax",
        "description-zh-cn": "使用最小二乘法计算最适合给定数据的直线，然后返回描述这条直线的表。 这条线的公式采用以下形式：y = Slope1*x1 + Slope2*x2 + ... + Intercept。\nSlope1, Slope2, ..., SlopeN：对应于每个 x 值的系数；\nIntercept：截距值；\nStandardErrorSlope1, StandardErrorSlope2, ..., StandardErrorSlopeN：系数 Slope1, Slope2, ..., SlopeN 的标准误差值；\nStandardErrorIntercept：常数 Intercept 的标准误差值；\nCoefficientOfDetermination：决定系数 (r²)。 比较估计值和实际 y 值，值范围为 0 到 1：值越大，样本中的相关性就越强；\nStandardError：估计的 y 值的标准误差；\nFStatistic：F 统计量或 F 观测值。 使用 F 统计量来确定因变量和自变量之间的关系是否偶然发生；\nDegreesOfFreedom：自由度。 使用此值可帮助你在统计表中查找 F 临界值，并确定模型的置信度；\nRegressionSumOfSquares：回归平方和；\nResidualSumOfSquares：残差平方和。\n",
        "url-dax-guide": "https://dax.guide/linest/"
    },
    "LINESTX": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/linestx-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/linestx-function-dax",
        "description-en-us": "Uses the Least Squares method to calculate a straight line that best fits the given data, then returns a table describing the line. The data result from expressions evaluated for each row in a table. The equation for the line is of the form: y = Slope1*x1 + Slope2*x2 + ... + Intercept.\nSlope1, Slope2, ..., SlopeN: the coefficients corresponding to each x-value;\nIntercept: intercept value;\nStandardErrorSlope1, StandardErrorSlope2, ..., StandardErrorSlopeN: the standard error values for the coefficients Slope1, Slope2, ..., SlopeN;\nStandardErrorIntercept: the standard error value for the constant Intercept;\nCoefficientOfDetermination: the coefficient of determination (r²). Compares estimated and actual y-values, and ranges in value from 0 to 1: the higher the value, the higher the correlation in the sample;\nStandardError: the standard error for the y estimate;\nFStatistic: the F statistic, or the F-observed value. Use the F statistic to determine whether the observed relationship between the dependent and independent variables occurs by chance;\nDegreesOfFreedom: the degrees of freedom. Use this value to help you find F-critical values in a statistical table, and determine a confidence level for the model;\nRegressionSumOfSquares: the regression sum of squares;\nResidualSumOfSquares: the residual sum of squares.\n",
        "category-en-us": "Statistical functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/statistical-functions-dax",
        "category-zh-cn": "统计函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/statistical-functions-dax",
        "description-zh-cn": "使用最小二乘法计算最适合给定数据的直线，然后返回描述这条直线的表。 针对表中每一行进行计算的表达式的数据结果。 这条线的公式采用以下形式：y = Slope1*x1 + Slope2*x2 + ... + Intercept。\nSlope1, Slope2, ..., SlopeN：对应于每个 x 值的系数；\nIntercept：截距值；\nStandardErrorSlope1, StandardErrorSlope2, ..., StandardErrorSlopeN：系数 Slope1, Slope2, ..., SlopeN 的标准误差值；\nStandardErrorIntercept：常数 Intercept 的标准误差值；\nCoefficientOfDetermination：决定系数 (r²)。 比较估计值和实际 y 值，值范围为 0 到 1：值越大，样本中的相关性就越强；\nStandardError：估计的 y 值的标准误差；\nFStatistic：F 统计量或 F 观测值。 使用 F 统计量来确定因变量和自变量之间的关系是否偶然发生；\nDegreesOfFreedom：自由度。 使用此值可帮助你在统计表中查找 F 临界值，并确定模型的置信度；\nRegressionSumOfSquares：回归平方和；\nResidualSumOfSquares：残差平方和。\n",
        "url-dax-guide": "https://dax.guide/linestx/"
    },
    "MEDIAN": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/median-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/median-function-dax",
        "description-en-us": "Returns the median of numbers in a column.\nOnly the numbers in the column are counted. Blanks are ignored. Logical values, dates, and text are not supported.\n\nMEDIAN( Table[Column] ) is equivalent to MEDIANX( Table, Table[Column] ).\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Statistical functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/statistical-functions-dax",
        "category-zh-cn": "统计函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/statistical-functions-dax",
        "description-zh-cn": "返回列中数字的中值。\n仅对列中的数字进行计数。 空白会被忽略。 不支持逻辑值、日期和文本。\n\nMEDIAN( Table[Column] ) 等效于 MEDIANX( Table, Table[Column] )。\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/median/"
    },
    "MEDIANX": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/medianx-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/medianx-function-dax",
        "description-en-us": "Returns the median number of an expression evaluated for each row in a table.\nThe MEDIANX function takes as its first argument a table, or an expression that returns a table. The second argument is a column that contains the numbers for which you want to compute the median, or an expression that evaluates to a column.\n\nOnly the numbers in the column are counted.\n\nLogical values and text are ignored.\n\nMEDIANX does not ignore blanks; however, MEDIAN does ignore blanks\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Statistical functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/statistical-functions-dax",
        "category-zh-cn": "统计函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/statistical-functions-dax",
        "description-zh-cn": "返回针对表中的每一行计算的表达式的中值。\nMEDIANX 函数将表或返回表的表达式作为其第一个参数。 第二个参数是包含要为其计算中值的数字的列，或计算结果为列的表达式。\n\n仅对列中的数字进行计数。\n\n忽略逻辑值和文本。\n\nMEDIANX 不会忽略空值；但 MEDIAN 会忽略空值\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/medianx/"
    },
    "NORM.DIST": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/norm-dist-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/norm-dist-dax",
        "description-en-us": "Returns the normal distribution for the specified mean and standard deviation.",
        "category-en-us": "Statistical functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/statistical-functions-dax",
        "category-zh-cn": "统计函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/statistical-functions-dax",
        "description-zh-cn": "返回指定平均值和标准偏差的正态分布。",
        "url-dax-guide": "https://dax.guide/norm.dist/"
    },
    "NORM.INV": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/norm-inv-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/norm-inv-dax",
        "description-en-us": "The inverse of the normal cumulative distribution for the specified mean and standard deviation.",
        "category-en-us": "Statistical functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/statistical-functions-dax",
        "category-zh-cn": "统计函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/statistical-functions-dax",
        "description-zh-cn": "指定平均值和标准偏差的逆正态累积分布。",
        "url-dax-guide": "https://dax.guide/norm.inv/"
    },
    "NORM.S.DIST": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/norm-s-dist-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/norm-s-dist-dax",
        "description-en-us": "Returns the standard normal distribution (has a mean of zero and a standard deviation of one).",
        "category-en-us": "Statistical functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/statistical-functions-dax",
        "category-zh-cn": "统计函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/statistical-functions-dax",
        "description-zh-cn": "返回标准正态分布（平均值为 0，标准偏差为 1）。",
        "url-dax-guide": "https://dax.guide/norm.s.dist/"
    },
    "NORM.S.INV": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/norm-s-inv-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/norm-s-inv-dax",
        "description-en-us": "Returns the inverse of the standard normal cumulative distribution. The distribution has a mean of zero and a standard deviation of one.",
        "category-en-us": "Statistical functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/statistical-functions-dax",
        "category-zh-cn": "统计函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/statistical-functions-dax",
        "description-zh-cn": "返回反标准正态累积分布。 此分布的均值为 0，标准偏差为 1。",
        "url-dax-guide": "https://dax.guide/norm.s.inv/"
    },
    "PERCENTILE.EXC": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/percentile-exc-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/percentile-exc-function-dax",
        "description-en-us": "Returns the k-th percentile of values in a range, where k is in the range 0..1, exclusive.\nIf column is empty, BLANK() is returned.\n\nIf k is zero or blank, percentile rank of 1/(n+1) returns the smallest value. If zero, it is out of range and an error is returned.\n\nIf k is nonnumeric or outside the range 0 to 1, an error is returned.\n\nIf k is not a multiple of 1/(n + 1), PERCENTILE.EXC will interpolate to determine the value at the k-th percentile.\n\nPERCENTILE.EXC will interpolate when the value for the specified percentile is between two values in the array. If it cannot interpolate for the k percentile specified, an error is returned.\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Statistical functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/statistical-functions-dax",
        "category-zh-cn": "统计函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/statistical-functions-dax",
        "description-zh-cn": "返回范围中值的第 k 个百分点，其中 k 的范围为 0 到 1（不含 0 和 1）。\n如果列为空，则返回 BLANK()。\n\n如果 k 为零或空白，则百分点等级 1/(n+1) 返回最小值。 如果为零，则超出范围，并返回错误。\n\n如果 k 为非数字或超出 0 到 1 的范围，则返回错误。\n\n如果 k 不是 1/(n - 1) 的倍数，则 PERCENTILE.EXC 将插入值以确定第 k 个百分位数的值。\n\n当指定百分位数的值在数组中的两个值之间时，PERCENTILE.EXC 将进行插值。 如果它无法为指定的百分位数 k 进行插值，则返回错误。\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/percentile.exc/"
    },
    "PERCENTILE.INC": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/percentile-inc-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/percentile-inc-function-dax",
        "description-en-us": "Returns the k-th percentile of values in a range, where k is in the range 0..1, inclusive.\nIf column is empty, BLANK() is returned.\n\nIf k is zero or blank, percentile rank of 1/(n+1) returns the smallest value. If zero, it is out of range and an error is returned.\n\nIf k is nonnumeric or outside the range 0 to 1, an error is returned.\n\nIf k is not a multiple of 1/(n + 1), PERCENTILE.INC will interpolate to determine the value at the k-th percentile.\n\nPERCENTILE.INC will interpolate when the value for the specified percentile is between two values in the array. If it cannot interpolate for the k percentile specified, an error is returned.\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Statistical functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/statistical-functions-dax",
        "category-zh-cn": "统计函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/statistical-functions-dax",
        "description-zh-cn": "返回范围中值的第 k 个百分点，其中 k 的范围为 0 到 1（含 0 和 1）。\n如果列为空，则返回 BLANK()。\n\n如果 k 为零或空白，则百分点等级 1/(n+1) 返回最小值。 如果为零，则超出范围，并返回错误。\n\n如果 k 为非数字或超出 0 到 1 的范围，则返回错误。\n\n如果 k 不是 1/(n + 1) 的倍数，则 PERCENTILE.INC 将进行内插以确定第 k 个百分点的值。\n\n当指定百分点的值在数组中的两个值之间时，PERCENTILE.INC 将进行内插。 如果它无法为指定的百分位数 k 进行插值，则返回错误。\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/percentile.inc/"
    },
    "PERCENTILEX.EXC": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/percentilex-exc-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/percentilex-exc-function-dax",
        "description-en-us": "Returns the percentile number of an expression evaluated for each row in a table.\nIf k is zero or blank, percentile rank of 1/(n+1) returns the smallest value. If zero, it is out of range and an error is returned.\n\nIf k is nonnumeric or outside the range 0 to 1, an error is returned.\n\nIf k is not a multiple of 1/(n + 1), PERCENTILEX.EXC will interpolate to determine the value at the k-th percentile.\n\nPERCENTILEX.EXC will interpolate when the value for the specified percentile is between two values in the array. If it cannot interpolate for the k percentile specified, an error is returned.\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Statistical functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/statistical-functions-dax",
        "category-zh-cn": "统计函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/statistical-functions-dax",
        "description-zh-cn": "返回针对表中的每一行计算的表达式的百分位数。\n如果 k 为零或空白，则百分点等级 1/(n+1) 返回最小值。 如果为零，则超出范围，并返回错误。\n\n如果 k 为非数字或超出 0 到 1 的范围，则返回错误。\n\n如果 k 不是 1/(n - 1) 的倍数，则 PERCENTILEX.EXC 将插入值以确定第 k 个百分位数的值。\n\n当指定百分位数的值在数组中的两个值之间时，PERCENTILEX.EXC 将进行插值。 如果它无法为指定的百分位数 k 进行插值，则返回错误。\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/percentilex.exc/"
    },
    "PERCENTILEX.INC": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/percentilex-inc-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/percentilex-inc-function-dax",
        "description-en-us": "Returns the percentile number of an expression evaluated for each row in a table.\nIf k is zero or blank, percentile rank of 1/(n - 1) returns the smallest value. If zero, it is out of range and an error is returned.\n\nIf k is nonnumeric or outside the range 0 to 1, an error is returned.\n\nIf k is not a multiple of 1/(n - 1), PERCENTILEX.EXC will interpolate to determine the value at the k-th percentile.\n\nPERCENTILEX.INC will interpolate when the value for the specified percentile is between two values in the array. If it cannot interpolate for the k percentile specified, an error is returned.\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Statistical functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/statistical-functions-dax",
        "category-zh-cn": "统计函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/statistical-functions-dax",
        "description-zh-cn": "返回针对表中的每一行计算的表达式的百分位数。\n如果 k 为零或空白，则百分数等级 1/(n - 1) 返回最小值。 如果为零，则超出范围，并返回错误。\n\n如果 k 为非数字或超出 0 到 1 的范围，则返回错误。\n\n如果 k 不是 1/(n - 1) 的倍数，则 PERCENTILEX.EXC 将进行内插以确定第 k 个百分位数的值。\n\n当指定百分位数的值在数组中的两个值之间时，PERCENTILEX.INC 将进行内插。 如果它无法为指定的百分位数 k 进行插值，则返回错误。\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/percentilex.inc/"
    },
    "PERMUT": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/permut-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/permut-function-dax",
        "description-en-us": "Returns the number of permutations for a given number of objects that can be selected from number objects. A permutation is any set or subset of objects or events where internal order is significant. Permutations are different from combinations, for which the internal order is not significant. Use this function for lottery-style probability calculations.\nBoth arguments are truncated to integers.\n\nIf number or number_chosen is nonnumeric, PERMUT returns the #VALUE! error value.\n\nIf number ≤ 0 or if number_chosen < 0, PERMUT returns the #NUM! error value.\n\nIf number < number_chosen, PERMUT returns the #NUM! error value.\n\nThe equation for the number of permutations is:\n$$P_{k,n} = \\frac{n!}{(n-k)!}$$\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Statistical functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/statistical-functions-dax",
        "category-zh-cn": "统计函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/statistical-functions-dax",
        "description-zh-cn": "返回可从数字对象中选择的给定数目对象的排列数。 排列是对象或事件的任何集合或子集，其中的内部顺序很重要。 排列与组合不同，后者的内部顺序并不重要。 此函数可用于彩票形式的概率计算。\n两个参数都被截断为整数。\n\n如果 number 或 number_chosen 为非数值，则 PERMUT 将返回 #VALUE! 错误值。\n\n如果 number ≤0 或 number_chosen < 0，则 PERMUT 返回 #NUM！ 错误值。\n\n如果 number < number_chosen，则 PERMUT 返回 #NUM! 错误值。\n\n排列数的公式为：\n$$P_{k,n} = \\frac{n!}{(n-k)!}$$\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/permut/"
    },
    "POISSON.DIST": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/poisson-dist-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/poisson-dist-function-dax",
        "description-en-us": "Returns the Poisson distribution. A common application of the Poisson distribution is predicting the number of events over a specific time, such as the number of cars arriving at a toll plaza in 1 minute.\nIf x is not an integer, it is rounded.\n\nIf x or mean is nonnumeric, POISSON.DIST returns the #VALUE! error value.\n\nIf x < 0, POISSON.DIST returns the #NUM! error value.\n\nIf mean < 0, POISSON.DIST returns the #NUM! error value.\n\nPOISSON.DIST is calculated as follows.\n\nFor cumulative = FALSE:\n$$\\text{POISSON} = \\frac{e^{-\\lambda} \\lambda^{x}}{x!}$$\n\nFor cumulative = TRUE:\n$$\\text{CUMPOISSON} = \\sum^{x}_{k=0} \\frac{e^{-\\lambda} \\lambda^{x}}{k!}$$\n\n\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Statistical functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/statistical-functions-dax",
        "category-zh-cn": "统计函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/statistical-functions-dax",
        "description-zh-cn": "返回泊松分布。 泊松分布的一个常见应用是预测特定时间段内的事件数，例如 1 分钟内到达收费站的汽车辆数。\n如果 x 不是整数，则对其进行舍入。\n\n如果 x 或 mean 为非数字，POISSON.DIST 会返回 #VALUE! 错误值。\n\n如果 x < 0，POISSON.DIST 会返回 #NUM! 错误值。\n\n如果 mean < 0，POISSON.DIST 会返回 #NUM! 错误值。\n\nPOISSON.DIST 的计算方式如下。\n\n如果 cumulative = FALSE：\n$$\\text{POISSON} = \\frac{e^{-\\lambda} \\lambda^{x}}{x!}$$\n\n如果 cumulative = TRUE：\n$$\\text{CUMPOISSON} = \\sum^{x}_{k=0} \\frac{e^{-\\lambda} \\lambda^{x}}{k!}$$\n\n\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/poisson.dist/"
    },
    "RANK.EQ": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/rank-eq-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/rank-eq-function-dax",
        "description-en-us": "Returns the ranking of a number in a list of numbers.\ncolumnName cannot refer to any column created using these functions: ADDCOLUMNS, ROW or SUMMARIZE.I\n\nIf value is not in columnName or value is a blank, then RANK.EQ returns a blank value.\n\nDuplicate values of value receive the same rank value; the next rank value assigned will be the rank value plus the number of duplicate values. For example if five (5) values are tied with a rank of 11 then the next value will receive a rank of 16 (11 + 5).\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Statistical functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/statistical-functions-dax",
        "category-zh-cn": "统计函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/statistical-functions-dax",
        "description-zh-cn": "返回某个数字在数字列表中的排名。\ncolumnName 不能引用使用以下函数创建的任何列：ADDCOLUMNS、ROW 或 SUMMARIZE.I\n\n如果值 value 不在 columnName 中或 value 为空，则 RANK.EQ 返回空值。\n\nvalue 的重复值接收相同的排名值；下一个分配的排名值为该排名值加上重复值的数目。 例如，如果五 (5) 个值的排名都为 11，则下一个值将获得排名 16 (11 + 5)。\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/rank.eq/"
    },
    "RANKX": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/rankx-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/rankx-function-dax",
        "description-en-us": "Returns the ranking of a number in a list of numbers for each row in the table argument.\nIf expression or value evaluates to BLANK it is treated as a 0 (zero) for all expressions that result in a number, or as an empty text for all text expressions.\n\nIf value is not among all possible values of expression then RANKX temporarily adds value to the values from expression and re-evaluates RANKX to determine the proper rank of value.\n\nOptional arguments might be skipped by placing an empty comma (,) in the argument list, i.e. RANKX(Inventory, [InventoryCost],,,\"Dense\")\n\nEquality related comparisons (=, < >, >= and <=) between values with the Decimal Number data type can potentialy return unexpected results when using RANKX function. Incorrect results can occur because values with Decimal Number data type are stored as IEEE Standard 754 floating point numbers and have inherent limitations in their precision. To avoid unexpected results, change the data type to Fixed Decimal Number or do a forced rounding using ROUND.\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Statistical functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/statistical-functions-dax",
        "category-zh-cn": "统计函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/statistical-functions-dax",
        "description-zh-cn": "针对 table 参数中每一行，返回某个数字在数字列表中的排名  。\n如果 expression 或 value 的计算结果为 BLANK，那么对于生成的结果为数字的所有表达式，它会被视为 0（零）；对于所有文本表达式，则会被视为空文本。\n\n如果 value 不在 expression 的所有可能值范围内，那么 RANKX 暂时会将 value 添加到 expression 中的值，然后重新计算 RANKX 以确定 value 的正确排名。\n\n可以通过在参数列表中放置空逗号 (,) 来跳过可选参数，例如 RANKX(Inventory, [InventoryCost],,,\"Dense\")\n\n在数据类型为十进制数的值之间执行的与相等相关的比较（=、<>、>= 和 <=）在使用 RANKX 函数时，可能会返回意外的结果。 由于数据类型为十进制数的值存储为 IEEE 标准 754 浮点数，并且其精度具有固有限制，因此可能会出现错误结果。 若要避免意外结果，请将数据类型更改为定点十进制数，或使用 ROUND 执行强制舍入。\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/rankx/"
    },
    "SAMPLE": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/sample-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/sample-function-dax",
        "description-en-us": "Returns a sample of N rows from the specified table.\nIf n_value is 0 (zero) or less then SAMPLE returns an empty table.\n\nIn order to avoid duplicate values in the sample, the table provided as the second argument should be grouped by the column used for sorting.\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Statistical functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/statistical-functions-dax",
        "category-zh-cn": "统计函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/statistical-functions-dax",
        "description-zh-cn": "返回指定表中 N 行的样本。\n如果 n_value 为 0（零）或更小，SAMPLE 将返回一个空表。\n\n为了避免样本中出现重复值，作为第二个参数提供的表应按用于排序的列进行分组。\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/sample/"
    },
    "STDEV.S": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/stdev-s-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/stdev-s-function-dax",
        "description-en-us": "Returns the standard deviation of a sample population.\nSTDEV.S assumes that the column refers to a sample of the population. If your data represents the entire population, then compute the standard deviation by using STDEV.P.\n\nSTDEV.S uses the following formula:\n√[∑(x - x̃)2/(n-1)]\nwhere x̃ is the average value of x for the sample population and n is the population size.\n\nBlank rows are filtered out from columnName and not considered in the calculations.\n\nAn error is returned if columnName contains less than 2 non-blank rows.\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Statistical functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/statistical-functions-dax",
        "category-zh-cn": "统计函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/statistical-functions-dax",
        "description-zh-cn": "返回样本总体的标准偏差。\nSTDEV.S 假设列引用了总体的一个样本。 如果数据表示整个总体，则使用 STDEV.P 计算标准偏差。\n\nSTDEV.S 使用以下公式：\n√[∑(x - x̃)2/(n-1)]\n其中，x ̃是 x 针对样本总体的平均值，而 n 是总体大小。\n\n空行会从 columnName 中被筛选掉，并在计算中不会被考虑在内。\n\n如果 columnName 包含的非空行少于 2 行，则返回错误。\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/stdev.s/"
    },
    "STDEV.P": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/stdev-p-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/stdev-p-function-dax",
        "description-en-us": "Returns the standard deviation of the entire population.\nSTDEV.P assumes that the column refers to the entire population. If your data represents a sample of the population, then compute the standard deviation by using STDEV.S.\n\nSTDEV.P uses the following formula:\n√[∑(x - x̃)2/n]\nwhere x̃ is the average value of x for the entire population and n is the population size.\n\nBlank rows are filtered out from columnName and not considered in the calculations.\n\nAn error is returned if columnName contains less than 2 non-blank rows\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Statistical functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/statistical-functions-dax",
        "category-zh-cn": "统计函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/statistical-functions-dax",
        "description-zh-cn": "返回整个总体的标准偏差。\nSTDEV.P 假定此列指整个总体。 如果数据表示总体的一个样本，则使用 STDEV.S 计算标准偏差。\n\nSTDEV.P 使用以下公式：\n√[∑(x - x̃)2/n]\n其中，x ̃是 x 针对整个总体的平均值，而 n 是总体大小。\n\n空行会从 columnName 中被筛选掉，并在计算中不会被考虑在内。\n\n如果 columnName 包含的非空行少于 2 行，则返回错误\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/stdev.p/"
    },
    "STDEVX.S": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/stdevx-s-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/stdevx-s-function-dax",
        "description-en-us": "Returns the standard deviation of a sample population.\nSTDEVX.S evaluates expression for each row of table and returns the standard deviation of expression assuming that table refers to a sample of the population. If table represents the entire population, then compute the standard deviation by using STDEVX.P.\n\nSTDEVX.S uses the following formula:\n√[∑(x - x̃)2/(n-1)]\nwhere x̃ is the average value of x for the entire population and n is the population size.\n\nBlank rows are filtered out from columnName and not considered in the calculations.\n\nAn error is returned if columnName contains less than 2 non-blank rows.\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Statistical functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/statistical-functions-dax",
        "category-zh-cn": "统计函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/statistical-functions-dax",
        "description-zh-cn": "返回样本总体的标准偏差。\nSTDEVX.P.S 会计算“表”每行的“表达式”，并返回“表达式”的标准差，同时默认该“表”是指总体的一个样本     。 如果“表”表示整个总体，则使用 STDEVX.P 计算标准差  。\n\nSTDEVX.P.S 使用以下公式：\n√[∑(x - x̃)2/(n-1)]\n其中，x ̃是 x 针对整个总体的平均值，而 n 是总体大小。\n\n空行会从 columnName 中被筛选掉，并在计算中不会被考虑在内。\n\n如果 columnName 包含的非空行少于 2 行，则返回错误。\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/stdevx.s/"
    },
    "STDEVX.P": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/stdevx-p-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/stdevx-p-function-dax",
        "description-en-us": "Returns the standard deviation of the entire population.\nSTDEVX.P evaluates expression for each row of table and returns the standard deviation of expression assuming that table refers to the entire population. If the data in table represents a sample of the population, you should compute the standard deviation by using STDEVX.S instead.\n\nSTDEVX.P uses the following formula:\n√[∑(x - x̃)2/n]\nwhere x̃ is the average value of x for the entire population and n is the population size.\n\nBlank rows are filtered out from columnName and not considered in the calculations.\n\nAn error is returned if columnName contains less than 2 non-blank rows\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Statistical functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/statistical-functions-dax",
        "category-zh-cn": "统计函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/statistical-functions-dax",
        "description-zh-cn": "返回整个总体的标准偏差。\nSTDEVX.P 为“表”的每行算计“表达式”，并返回“表达式”的标准差，该“表”指整个总体。 如果表中的数据表示总体的一个样本，则应使用 STDEVX.S 来计算标准差  。\n\nSTDEVX.P 使用以下公式：\n√[∑(x - x̃)2/n]\n其中，x ̃是 x 针对整个总体的平均值，而 n 是总体大小。\n\n空行会从 columnName 中被筛选掉，并在计算中不会被考虑在内。\n\n如果 columnName 包含的非空行少于 2 行，则返回错误\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/stdevx.p/"
    },
    "T.DIST": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/t-dist-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/t-dist-dax",
        "description-en-us": "Returns the Student's left-tailed t-distribution.",
        "category-en-us": "Statistical functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/statistical-functions-dax",
        "category-zh-cn": "统计函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/statistical-functions-dax",
        "description-zh-cn": "返回学生的左尾 t 分布。",
        "url-dax-guide": "https://dax.guide/t.dist/"
    },
    "T.DIST.2T": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/t-dist-2t-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/t-dist-2t-dax",
        "description-en-us": "Returns the two-tailed Student's t-distribution.",
        "category-en-us": "Statistical functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/statistical-functions-dax",
        "category-zh-cn": "统计函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/statistical-functions-dax",
        "description-zh-cn": "返回学生的双尾 t 分布。",
        "url-dax-guide": "https://dax.guide/t.dist.2t/"
    },
    "T.DIST.RT": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/t-dist-rt-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/t-dist-rt-dax",
        "description-en-us": "Returns the right-tailed Student's t-distribution.",
        "category-en-us": "Statistical functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/statistical-functions-dax",
        "category-zh-cn": "统计函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/statistical-functions-dax",
        "description-zh-cn": "返回学生的右尾 t 分布。",
        "url-dax-guide": "https://dax.guide/t.dist.rt/"
    },
    "T.INV": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/t-inv-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/t-inv-dax",
        "description-en-us": "Returns the left-tailed inverse of the Student's t-distribution.",
        "category-en-us": "Statistical functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/statistical-functions-dax",
        "category-zh-cn": "统计函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/statistical-functions-dax",
        "description-zh-cn": "返回学生的左尾逆 t 分布。",
        "url-dax-guide": "https://dax.guide/t.inv/"
    },
    "T.INV.2T": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/t-inv-2t-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/t-inv-2t-dax",
        "description-en-us": "Returns the two-tailed inverse of the Student's t-distribution.",
        "category-en-us": "Statistical functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/statistical-functions-dax",
        "category-zh-cn": "统计函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/statistical-functions-dax",
        "description-zh-cn": "返回学生的双尾逆 t 分布。",
        "url-dax-guide": "https://dax.guide/t.inv.2t/"
    },
    "VAR.S": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/var-s-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/var-s-function-dax",
        "description-en-us": "Returns the variance of a sample population.\nVAR.S assumes that the column refers to a sample of the population. If your data represents the entire population, then compute the variance by using VAR.P.\n\nVAR.S uses the following formula:\n∑(x - x̃)2/(n-1)\nwhere x̃ is the average value of x for the sample population\nand n is the population size\n\nBlank rows are filtered out from columnName and not considered in the calculations.\n\nAn error is returned if columnName contains less than 2 non-blank rows.\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Statistical functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/statistical-functions-dax",
        "category-zh-cn": "统计函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/statistical-functions-dax",
        "description-zh-cn": "返回样本总体的方差。\nVAR.S 假设该列是指总体的一个样本。 如果数据表示整个总体，则使用 VAR.P 计算方差。\n\nVAR.S 使用以下公式：\n∑(x - x̃)2/(n-1)\n其中，x ̃是 x 针对样本总体的平均值\n而 n 是总体大小\n\n空行会从 columnName 中被筛选掉，并在计算中不会被考虑在内。\n\n如果 columnName 包含的非空行少于 2 行，则返回错误。\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/var.s/"
    },
    "VAR.P": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/var-p-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/var-p-function-dax",
        "description-en-us": "Returns the variance of the entire population.\nVAR.P assumes that the column refers the entire population. If your data represents a sample of the population, then compute the variance by using VAR.S.\n\nVAR.P uses the following formula:\n∑(x - x̃)2/n\nwhere x̃ is the average value of x for the entire population\nand n is the population size\n\nBlank rows are filtered out from columnName and not considered in the calculations.\n\nAn error is returned if columnName contains less than 2 non-blank rows\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Statistical functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/statistical-functions-dax",
        "category-zh-cn": "统计函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/statistical-functions-dax",
        "description-zh-cn": "返回整个总体的方差。\nVAR.P 假定此列指整个总体。 如果数据表示总体的样本，则使用 VAR.S 计算方差。\n\nVAR.P 使用以下公式：\n∑(x - x̃)2/n\n其中，x ̃是 x 针对整个总体的平均值\n而 n 是总体大小\n\n空行会从 columnName 中被筛选掉，并在计算中不会被考虑在内。\n\n如果 columnName 包含的非空行少于 2 行，则返回错误\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/var.p/"
    },
    "VARX.S": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/varx-s-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/varx-s-function-dax",
        "description-en-us": "Returns the variance of a sample population.\nVARX.S evaluates expression for each row of table and returns the variance of expression; on the assumption that table refers to a sample of the population. If table represents the entire population, then you should compute the variance by using VARX.P.\n\nVAR.S uses the following formula:\n∑(x - x̃)2/(n-1)\nwhere x̃ is the average value of x for the sample population\nand n is the population size\n\nBlank rows are filtered out from columnName and not considered in the calculations.\n\nAn error is returned if columnName contains less than 2 non-blank rows.\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Statistical functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/statistical-functions-dax",
        "category-zh-cn": "统计函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/statistical-functions-dax",
        "description-zh-cn": "返回样本总体的方差。\nVARX.S 会针对每行表对表达式进行计算，并返回表达式的方差；同时默认该表是指总体样本。 如果表表示整个总体，则应使用 VARX.P 计算方差。\n\nVAR.S 使用以下公式：\n∑(x - x̃)2/(n-1)\n其中，x ̃是 x 针对样本总体的平均值\n而 n 是总体大小\n\n空行会从 columnName 中被筛选掉，并在计算中不会被考虑在内。\n\n如果 columnName 包含的非空行少于 2 行，则返回错误。\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/varx.s/"
    },
    "VARX.P": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/varx-p-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/varx-p-function-dax",
        "description-en-us": "Returns the variance of the entire population.\nVARX.P evaluates <expression> for each row of <table> and returns the variance of <expression> assuming that <table> refers to the entire population.. If <table> represents a sample of the population, then compute the variance by using VARX.S.\n\nVARX.P uses the following formula:\n∑(x - x̃)2/n\nwhere x̃ is the average value of x for the entire population\nand n is the population size\n\nBlank rows are filtered out from columnName and not considered in the calculations.\n\nAn error is returned if columnName contains less than 2 non-blank rows\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Statistical functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/statistical-functions-dax",
        "category-zh-cn": "统计函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/statistical-functions-dax",
        "description-zh-cn": "返回整个总体的方差。\nVARX.P 针对 <table> 的每行计算 <expression>，并返回 <expression> 的标准偏差（假定 <table> 指整个总体）。 如果 <表> 表示总体的样本，则使用 VARX.S 计算方差。\n\nVARX.P 使用以下公式：\n∑(x - x̃)2/n\n其中，x ̃是 x 针对整个总体的平均值\n而 n 是总体大小\n\n空行会从 columnName 中被筛选掉，并在计算中不会被考虑在内。\n\n如果 columnName 包含的非空行少于 2 行，则返回错误\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/varx.p/"
    },
    "ADDCOLUMNS": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/addcolumns-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/addcolumns-function-dax",
        "description-en-us": "Adds calculated columns to the given table or table expression.",
        "category-en-us": "Table manipulation functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/table-manipulation-functions-dax",
        "category-zh-cn": "表操作函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/table-manipulation-functions-dax",
        "description-zh-cn": "将计算列添加到给定的表或表表达式。",
        "url-dax-guide": "https://dax.guide/addcolumns/"
    },
    "ADDMISSINGITEMS": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/addmissingitems-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/addmissingitems-function-dax",
        "description-en-us": "Adds rows with empty values to a table returned by SUMMARIZECOLUMNS.",
        "category-en-us": "Table manipulation functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/table-manipulation-functions-dax",
        "category-zh-cn": "表操作函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/table-manipulation-functions-dax",
        "description-zh-cn": "将具有空值的行添加到 SUMMARIZECOLUMNS 返回的表中。",
        "url-dax-guide": "https://dax.guide/addmissingitems/"
    },
    "CROSSJOIN": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/crossjoin-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/crossjoin-function-dax",
        "description-en-us": "Returns a table that contains the Cartesian product of all rows from all tables in the arguments. The columns in the new table are all the columns in all the argument tables.\nColumn names from table arguments must all be different in all tables or an error is returned.\n\nThe total number of rows returned by CROSSJOIN() is equal to the product of the number of rows from all tables in the arguments; also, the total number of columns in the result table is the sum of the number of columns in all tables. For example, if TableA has rA rows and cA columns, and TableB has rB rows and cB columns, and TableC has rC rows and cC column; then, the resulting table has rA × rb × rC rows and cA + cB + cC columns.\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Table manipulation functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/table-manipulation-functions-dax",
        "category-zh-cn": "表操作函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/table-manipulation-functions-dax",
        "description-zh-cn": "返回一个表，其中包含参数中所有表的所有行的笛卡尔乘积。 新表中的列是所有参数表中的所有列。\n表参数中的列名在所有表中必须不同，否则返回错误。\n\nCROSSJOIN() 返回的总行数等于参数中所有表的行数的乘积；此外，结果表中的总列数是所有表中的列数之和。 例如，如果 TableA 有 rA 行和 cA 列，TableB 有 rB 行和 cB 列，TableC 有 rC 行和 cC 列；那么，生成的表则有 rA × rb x rC 行和 cA + cB + cC 列。\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/crossjoin/"
    },
    "CURRENTGROUP": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/currentgroup-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/currentgroup-function-dax",
        "description-en-us": "Returns a set of rows from the table argument of a GROUPBY expression that belong to the current row of the GROUPBY result.\nThis function can only be used within a GROUPBY expression.\n\nThis function takes no arguments and is only supported as the first argument to one of the following aggregation functions: AVERAGEX, COUNTAX, COUNTX, GEOMEANX, MAXX, MINX, PRODUCTX, STDEVX.S, STDEVX.P, SUMX, VARX.S, VARX.P.\n\n",
        "category-en-us": "Table manipulation functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/table-manipulation-functions-dax",
        "category-zh-cn": "表操作函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/table-manipulation-functions-dax",
        "description-zh-cn": "从 GROUPBY 表达式的 table 参数中返回一组行，这些行属于 GROUPBY 结果的当前行。\n此函数只能在 GROUPBY 表达式中使用。\n\n此函数不接受任何参数，并且仅支持用作下述某一聚合函数的第一个参数：AVERAGEX、COUNTAX、COUNTX、GEOMEANX、MAXX、MINX、PRODUCTX、STDEVX.S、STDEVX.P、SUMX、VARX.S、VARX.P。\n\n",
        "url-dax-guide": "https://dax.guide/currentgroup/"
    },
    "DATATABLE": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/datatable-function",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/datatable-function",
        "description-en-us": "Provides a mechanism for declaring an inline set of data values.\nUnlike DATATABLE, Table Constructor allows any scalar expressions as input values.\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Table manipulation functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/table-manipulation-functions-dax",
        "category-zh-cn": "表操作函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/table-manipulation-functions-dax",
        "description-zh-cn": "提供用于声明内联数据值集的机制。\n与 DATATABLE 不同，表构造函数允许将任何标量表达式作为输入值。\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/datatable/"
    },
    "DETAILROWS": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/detailrows-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/detailrows-function-dax",
        "description-en-us": "Evaluates a Detail Rows Expression defined for a measure and returns the data.",
        "category-en-us": "Table manipulation functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/table-manipulation-functions-dax",
        "category-zh-cn": "表操作函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/table-manipulation-functions-dax",
        "description-zh-cn": "计算为度量值定义的详细信息行表达式并返回数据。",
        "url-dax-guide": "https://dax.guide/detailrows/"
    },
    "DISTINCT (column)": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/distinct-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/distinct-function-dax",
        "description-en-us": "Returns a one-column table that contains the distinct values from the specified column. In other words, duplicate values are removed and only unique values are returned.\nThe results of DISTINCT are affected by the current filter context. For example, if you use the formula in the following example to create a measure, the results would change whenever the table was filtered to show only a particular region or a time period.\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Table manipulation functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/table-manipulation-functions-dax",
        "category-zh-cn": "表操作函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/table-manipulation-functions-dax",
        "description-zh-cn": "返回由一列组成的表，其中包含与指定列不同的值。 换言之，会删除重复值并且仅返回唯一的值。\nDISTINCT 的结果会受到当前筛选上下文的影响。 例如，如果在以下示例中使用公式来创建一个度量值，那么只要对表进行筛选以仅显示特定区域或某个时间段，结果就会更改。\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/distinct (column)/"
    },
    "DISTINCT (table)": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/distinct-table-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/distinct-table-function-dax",
        "description-en-us": "Returns a table by removing duplicate rows from another table or expression.",
        "category-en-us": "Table manipulation functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/table-manipulation-functions-dax",
        "category-zh-cn": "表操作函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/table-manipulation-functions-dax",
        "description-zh-cn": "通过删除另一个表或表达式中的重复行返回表。",
        "url-dax-guide": "https://dax.guide/distinct (table)/"
    },
    "EXCEPT": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/except-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/except-function-dax",
        "description-en-us": "Returns the rows of the first table in the expression which do not appear in the second table.\nIf a row appears at all in both tables, it and its duplicates are not present in the result set. If a row appears in only table_expression1, it and its duplicates will appear in the result set.\n\nThe column names will match the column names in table_expression1.\n\nThe returned table has lineage based on the columns in table_expression1 , regardless of the lineage of the columns in the second table. For example, if the first column of first table_expression has lineage to the base column C1 in the model, the Except will reduce the rows based on the availability of values in the first column of second table_expression and keep the lineage on base column C1 intact.\n\nThe two tables must have the same number of columns.\n\nColumns are compared based on positioning, and data comparison with no type coercion.\n\nThe set of rows returned depends on the order of the two expressions.\n\nThe returned table does not include columns from tables related to table_expression1.\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Table manipulation functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/table-manipulation-functions-dax",
        "category-zh-cn": "表操作函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/table-manipulation-functions-dax",
        "description-zh-cn": "返回未在第二个表中显示的第一个表中的行。\n如果某行同时出现在两个表中，则该行及其重复项不会出现在结果集中。 如果某行仅出现在 table_expression1 中，则该行及其重复项将出现在结果集中。\n\n列名将与 table_expression1 中的列名相匹配。\n\n返回的表的世系基于 table_expression1 中的列，与第二个表中列的世系无关。 例如，如果第一个 table_expression 的首列有模型中基本列 C1 的世系，则 Except 将基于第二个table_expression 首列中的值的可用性来减少行，并保持基本列 C1 的世系不变。\n\n这两个表必须具有相同的列数。\n\n列基于位置进行比较，并且不会进行类型强制转换的数据比较。\n\n返回的行集取决于两个表达式的顺序。\n\n返回的表不包括与 table_expression1 相关的表中的列。\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/except/"
    },
    "FILTERS": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/filters-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/filters-function-dax",
        "description-en-us": "Returns the values that are directly applied as filters to columnName.",
        "category-en-us": "Table manipulation functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/table-manipulation-functions-dax",
        "category-zh-cn": "表操作函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/table-manipulation-functions-dax",
        "description-zh-cn": "返回直接作为筛选器应用到 columnName 的值  。",
        "url-dax-guide": "https://dax.guide/filters/"
    },
    "GENERATE": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/generate-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/generate-function-dax",
        "description-en-us": "Returns a table with the Cartesian product between each row in table1 and the table that results from evaluating table2 in the context of the current row from table1.\nIf the evaluation of table2 for the current row in table1 returns an empty table, then the result table will not contain the current row from table1. This is different than GENERATEALL() where the current row from table1 will be included in the results and columns corresponding to table2 will have null values for that row.\n\nAll column names from table1 and table2 must be different or an error is returned.\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Table manipulation functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/table-manipulation-functions-dax",
        "category-zh-cn": "表操作函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/table-manipulation-functions-dax",
        "description-zh-cn": "返回一个表，其中包含 table1 中的每一行与在 table1 的当前行的上下文中计算 table2 所得表之间的笛卡尔乘积    。\n如果就 table1 中的当前行对 table2 的计算返回一个空表，则结果表不包含 table1 中的当前行    。 这与 GENERATEALL() 不同。在 GENERATEALL() 中，table1 中的当前行将包含在结果中，并且对于该行，对应于 table2 的列的值为 NULL   。\n\ntable1 和 table2 中的所有列名不得相同，否则会返回错误   。\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/generate/"
    },
    "GENERATEALL": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/generateall-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/generateall-function-dax",
        "description-en-us": "Returns a table with the Cartesian product between each row in table1 and the table that results from evaluating table2 in the context of the current row from table1.\nIf the evaluation of table2 for the current row in table1 returns an empty table, then the current row from table1 will be included in the results and columns corresponding to table2 will have null values for that row. This is different than GENERATE() where the current row from table1 will not be included in the results.\n\nAll column names from table1 and table2 must be different or an error is returned.\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Table manipulation functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/table-manipulation-functions-dax",
        "category-zh-cn": "表操作函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/table-manipulation-functions-dax",
        "description-zh-cn": "返回一个表，其中包含 table1 中的每一行与在 table1 的当前行的上下文中计算 table2 所得表之间的笛卡尔乘积    。\n如果为 table1 中当前行对 table2 进行的计算返回空表，table1 中的当前行则将包含在结果中，而与 table2 相对应的列在该行中为 null 值     。 这不同于 GENERATE()，在后者中，table1 中的当前行不包括在结果中   。\n\ntable1 和 table2 中的所有列名不得相同，否则会返回错误   。\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/generateall/"
    },
    "GENERATESERIES": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/generateseries-function",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/generateseries-function",
        "description-en-us": "Returns a single column table containing the values of an arithmetic series, that is, a sequence of values in which each differs from the preceding by a constant quantity. The name of the column returned is Value.\nWhen endValue is less than startValue, an empty table is returned.\n\nincrementValue must be a positive value.\n\nThe sequence stops at the last value that is less than or equal to endValue.\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Table manipulation functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/table-manipulation-functions-dax",
        "category-zh-cn": "表操作函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/table-manipulation-functions-dax",
        "description-zh-cn": "返回一个单列表，其中包含一个算术序列的值，即一系列值，其中每个值与前面的值相差一个常数。 返回的列的名称为 Value。\nendValue 小于 startValue 时，将返回一个空表。\n\nincrementValue 必须为正值。\n\n该序列在最后一个小于或等于 endValue 的值处停止。\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/generateseries/"
    },
    "GROUPBY": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/groupby-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/groupby-function-dax",
        "description-en-us": "The GROUPBY function is similar to the SUMMARIZE function. However, GROUPBY does not do an implicit CALCULATE for any extension columns that it adds. GROUPBY permits a new function, CURRENTGROUP, to be used inside aggregation functions in the extension columns that it adds. GROUPBY is used to perform multiple aggregations in a single table scan.\nThe GROUPBY function does the following:\n\nStart with the specified table (and all related tables in the \"to-one\" direction).\n\nCreate a grouping using all of the GroupBy columns (which are required to exist in the table from step #1.).\n\nEach group is one row in the result, but represents a set of rows in the original table.\n\nFor each group, evaluate the extension columns being added.  Unlike the SUMMARIZE function, an implied CALCULATE is not performed, and the group isn't placed into the filter context.\n\n\n\nEach column for which you define a name must have a corresponding expression; otherwise, an error is returned. The first argument, name, defines the name of the column in the results. The second argument, expression, defines the calculation performed to obtain the value for each row in that column.\n\ngroupBy_columnName must be either in table or in a related table.\n\nEach name must be enclosed in double quotation marks.\n\nThe function groups a selected set of rows into a set of summary rows by the values of one or more groupBy_columnName columns. One row is returned for each group.\n\nGROUPBY is primarily used to perform aggregations over intermediate results from DAX table expressions. For efficient aggregations over physical tables in the model, consider using SUMMARIZECOLUMNS or SUMMARIZE function.\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Table manipulation functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/table-manipulation-functions-dax",
        "category-zh-cn": "表操作函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/table-manipulation-functions-dax",
        "description-zh-cn": "GROUPBY 函数与 SUMMARIZE 函数类似。 但是，GROUPBY 不会对它添加的任何扩展列执行隐式计算。 GROUPBY 允许在其添加的扩展列中的聚合函数内使用新函数 CURRENTGROUP。 GROUPBY 用于在单个表扫描中执行多个聚合。\nGROUPBY 函数执行以下操作：\n\n从指定的表（以及“to-one”方向上的所有相关表）开始。\n\n使用所有 GroupBy 列（需在步骤 #1 的表中存在）创建分组。\n\n每个组在结果中占一行，但它表示原始表中的一系列行。\n\n对于每个组，计算要添加的扩展列。  与 SUMMARIZE 函数不同，它不会执行隐含 CALCULATE，并且该组不会置于筛选器上下文中。\n\n\n\n为其定义名称的每个列都必须具有一个对应的表达式；否则，将返回错误。 第一个参数 name 定义结果中列的名称。 第二个参数 expression 定义为获取该列中每一行的值进行的计算。\n\ngroupBy_columnName 必须在表或相关表中。\n\n每个名称都必须用双引号引起来。\n\n函数根据一个或多个 groupBy_columnName 列的值将一组选定的行归组为一组摘要行。 为每个组返回一行。\n\nGROUPBY 主要用于对来自 DAX 表表达式的中间结果执行聚合。 要对模型中的物理表进行高效聚合，请考虑使用 SUMMARIZECOLUMNS 或 SUMMARIZE 函数。\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/groupby/"
    },
    "IGNORE": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/ignore-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/ignore-function-dax",
        "description-en-us": "Modifies the behavior of the SUMMARIZECOLUMNS function by omitting specific expressions from the BLANK/NULL evaluation. Rows for which all expressions not using IGNORE return BLANK/NULL will be excluded independent of whether the expressions which do use IGNORE evaluate to BLANK/NULL or not. This function can only be used within a SUMMARIZECOLUMNS expression.",
        "category-en-us": "Table manipulation functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/table-manipulation-functions-dax",
        "category-zh-cn": "表操作函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/table-manipulation-functions-dax",
        "description-zh-cn": "通过省略 BLANK/NULL 计算中的特定表达式，修改 SUMMARIZECOLUMNS 函数的行为。 未使用 IGNORE 返回 BLANK/NULL 的所有表达式的行将被排除，且与使用 IGNORE 的表达式的计算结果是否为 BLANK/NULL 无关。 此函数只能在 SUMMARIZECOLUMNS 表达式中使用。",
        "url-dax-guide": "https://dax.guide/ignore/"
    },
    "INTERSECT": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/intersect-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/intersect-function-dax",
        "description-en-us": "Returns the row intersection of two tables, retaining duplicates.\nIntersect is not commutative. In general, Intersect(T1, T2) will have a different result set than Intersect(T2, T1).\n\nDuplicate rows are retained. If a row appears in table_expression1 and table_expression2, it and all duplicates in table_expression_1 are included in the result set.\n\nThe column names will match the column names in table_expression1.\n\nThe returned table has lineage based on the columns in table_expression1 , regardless of the lineage of the columns in the second table. For example, if the first column of first table_expression has lineage to the base column C1 in the model, the intersect will reduce the rows based on the intersect on first column of second table_expression and keep the lineage on base column C1 intact.\n\nColumns are compared based on positioning, and data comparison with no type coercion.\n\nThe returned table does not include columns from tables related to table_expression1.\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Table manipulation functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/table-manipulation-functions-dax",
        "category-zh-cn": "表操作函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/table-manipulation-functions-dax",
        "description-zh-cn": "返回两个表的行交集，保留重复项。\n交集部分不能替换。 一般而言，Intersect(T1, T2) 的结果集将不同于 Intersect(T2, T1)。\n\n保留重复的行。 如果行出现在 table_expression1 和 table_expression2 中，则该结果集中会包含该行以及 table_expression_1 中的所有重复项。\n\n列名将与 table_expression1 中的列名相匹配。\n\n返回的表的世系基于 table_expression1 中的列，与第二个表中列的世系无关。 例如，如果第一个 table_expression 的首列有模型中基本列 C1 的世系，则 intersect 将基于第二个 table_expression 首列中的交集来减少行，并保持基本列 C1 的世系不变。\n\n列基于位置进行比较，并且不会进行类型强制转换的数据比较。\n\n返回的表不包括与 table_expression1 相关的表中的列。\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/intersect/"
    },
    "NATURALINNERJOIN": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/naturalinnerjoin-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/naturalinnerjoin-function-dax",
        "description-en-us": "Performs an inner join of a table with another table.\nTables are joined on common columns (by name) in the two tables. If the two tables have no common column names, an error is returned.\n\nThere is no sort order guarantee for the results.\n\nColumns being joined on must have the same data type in both tables.\n\nOnly columns from the same source table (have the same lineage) are joined on. For example, Products[ProductID], WebSales[ProductdID], StoreSales[ProductdID] with many-to-one relationships between WebSales and StoreSales and the Products table based on the ProductID column, WebSales and StoreSales tables are joined on [ProductID].\n\nStrict comparison semantics are used during join. There is no type coercion; for example, 1 does not equal 1.0.\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Table manipulation functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/table-manipulation-functions-dax",
        "category-zh-cn": "表操作函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/table-manipulation-functions-dax",
        "description-zh-cn": "执行一个表与另一个表的内部联接。\n这些表在两个表的共有列（按名称）上联接。 如果两个表没有公共列名，则返回错误。\n\n结果没有排序顺序保证。\n\n两个表中要联接的列必须具有相同的数据类型。\n\n只能基于同一源表中的列（具有相同的世系）进行联接。 例如，对于 Products[ProductID]、WebSales[ProductdID] 和 StoreSales[ProductdID]，WebSales 和 StoreSales 表与 Products 表之间存在基于 ProductID 列的多对一关系，因而 WebSales 和 StoreSales 表基于 [ProductID] 进行联接。\n\n联接期间使用严格的比较语义。 类型强制转换不适用；例如 1 不等于 1.0。\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/naturalinnerjoin/"
    },
    "NATURALLEFTOUTERJOIN": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/naturalleftouterjoin-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/naturalleftouterjoin-function-dax",
        "description-en-us": "Performs a join of the LeftTable with the RightTable by using the Left Outer Join semantics.\nTables are joined on common columns (by name) in the two tables. If the two tables have no common column names, an error is returned.\n\nThere is no sort order guarantee for the results.\n\nColumns being joined on must have the same data type in both tables.\n\nOnly columns from the same source table (have the same lineage) are joined on. For example, Products[ProductID], WebSales[ProductdID], StoreSales[ProductdID] with many-to-one relationships between WebSales and StoreSales and the Products table based on the ProductID column, WebSales and StoreSales tables are joined on [ProductID].\n\nStrict comparison semantics are used during join. There is no type coercion; for example, 1 does not equal 1.0.\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Table manipulation functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/table-manipulation-functions-dax",
        "category-zh-cn": "表操作函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/table-manipulation-functions-dax",
        "description-zh-cn": "使用 Left Outer Join 语义执行 LeftTable 与 RightTable 的联接。\n这些表在两个表的共有列（按名称）上联接。 如果两个表没有公共列名，则返回错误。\n\n结果没有排序顺序保证。\n\n两个表中要联接的列必须具有相同的数据类型。\n\n只能基于同一源表中的列（具有相同的世系）进行联接。 例如，对于 Products[ProductID]、WebSales[ProductdID] 和 StoreSales[ProductdID]，WebSales 和 StoreSales 表与 Products 表之间存在基于 ProductID 列的多对一关系，因而 WebSales 和 StoreSales 表基于 [ProductID] 进行联接。\n\n联接期间使用严格的比较语义。 类型强制转换不适用；例如 1 不等于 1.0。\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/naturalleftouterjoin/"
    },
    "ROLLUP": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/rollup-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/rollup-function-dax",
        "description-en-us": "Modifies the behavior of the SUMMARIZE function by adding rollup rows to the result on columns defined by the groupBy_columnName parameter. This function can only be used within a SUMMARIZE expression.",
        "category-en-us": "Table manipulation functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/table-manipulation-functions-dax",
        "category-zh-cn": "表操作函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/table-manipulation-functions-dax",
        "description-zh-cn": "通过向由 groupBy_columnName 参数定义的列的结果添加汇总行，修改 SUMMARIZE 函数的行为。 此函数只能在 SUMMARIZE 表达式中使用。",
        "url-dax-guide": "https://dax.guide/rollup/"
    },
    "ROLLUPADDISUBTOTAL": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/rollupaddissubtotal-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/rollupaddissubtotal-function-dax",
        "description-en-us": "Modifies the behavior of the SUMMARIZECOLUMNS function by adding rollup/subtotal rows to the result based on the groupBy_columnName columns. This function can only be used within a SUMMARIZECOLUMNS expression.",
        "category-en-us": "Table manipulation functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/table-manipulation-functions-dax",
        "category-zh-cn": "表操作函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/table-manipulation-functions-dax",
        "description-zh-cn": "通过向基于 groupBy_columnName 列的结果添加汇总行/小计行来修改 SUMMARIZECOLUMNS 函数的行为。 此函数只能在 SUMMARIZECOLUMNS 表达式中使用。",
        "url-dax-guide": "https://dax.guide/rollupaddisubtotal/"
    },
    "ROLLUPGROUP": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/rollupgroup-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/rollupgroup-function-dax",
        "description-en-us": "Modifies the behavior of the SUMMARIZE and SUMMARIZECOLUMNS functions by adding rollup rows to the result on columns defined by the the groupBy_columnName parameter. This function can only be used within a SUMMARIZE or SUMMARIZECOLUMNS expression.",
        "category-en-us": "Table manipulation functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/table-manipulation-functions-dax",
        "category-zh-cn": "表操作函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/table-manipulation-functions-dax",
        "description-zh-cn": "通过向由 groupBy_columnName 参数定义的列的结果添加汇总行，修改 SUMMARIZE 和 SUMMARIZECOLUMNS 函数的行为。 此函数只能在 SUMMARIZE 或 SUMMARIZECOLUMNS 表达式中使用。",
        "url-dax-guide": "https://dax.guide/rollupgroup/"
    },
    "ROLLUPISUBTOTAL": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/rollupissubtotal-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/rollupissubtotal-function-dax",
        "description-en-us": "Pairs rollup groups with the column added by ROLLUPADDISSUBTOTAL. This function can only be used within an ADDMISSINGITEMS expression.",
        "category-en-us": "Table manipulation functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/table-manipulation-functions-dax",
        "category-zh-cn": "表操作函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/table-manipulation-functions-dax",
        "description-zh-cn": "将汇总组与 ROLLUPADDISSUBTOTAL 添加的列进行配对。 此函数只能在 ADDMISSINGITEMS 表达式中使用。",
        "url-dax-guide": "https://dax.guide/rollupisubtotal/"
    },
    "ROW": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/row-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/row-function-dax",
        "description-en-us": "Returns a table with a single row containing values that result from the expressions given to each column.\nArguments must always come in pairs of name and expression.\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Table manipulation functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/table-manipulation-functions-dax",
        "category-zh-cn": "表操作函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/table-manipulation-functions-dax",
        "description-zh-cn": "返回一个具有单行的表，其中包含针对每一列计算表达式得出的值。\n参数必须总是成对出现名称和表达式。\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/row/"
    },
    "SELECTCOLUMNS": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/selectcolumns-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/selectcolumns-function-dax",
        "description-en-us": "Returns a table with selected columns from the table and new columns specified by the DAX expressions.",
        "category-en-us": "Table manipulation functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/table-manipulation-functions-dax",
        "category-zh-cn": "表操作函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/table-manipulation-functions-dax",
        "description-zh-cn": "返回具有从表中选择的列以及 DAX 表达式指定的新列的表。",
        "url-dax-guide": "https://dax.guide/selectcolumns/"
    },
    "SUBSTITUTEWITHINDEX": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/substitutewithindex-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/substitutewithindex-function-dax",
        "description-en-us": "Returns a table which represents a left semijoin of the two tables supplied as arguments. The semijoin is performed by using common columns, determined by common column names and common data type . The columns being joined on are replaced with a single column in the returned table which is of type integer and contains an index. The index is a reference into the right join table given a specified sort order.\nThis function does not guarantee any result sort order.\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Table manipulation functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/table-manipulation-functions-dax",
        "category-zh-cn": "表操作函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/table-manipulation-functions-dax",
        "description-zh-cn": "返回表示作为参数提供的两个表的左半联接的表。 半联接通过公用列来执行，并由公用列名称和公用数据类型确定。 要联接的列将替换为返回的表中的单个列，该表的类型为整数并包含一个索引。 基于指定的排序顺序，索引是对右联接表的引用。\n此函数不保证任何结果排序顺序。\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/substitutewithindex/"
    },
    "SUMMARIZE": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/summarize-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/summarize-function-dax",
        "description-en-us": "Returns a summary table for the requested totals over a set of groups.\nEach column for which you define a name must have a corresponding expression; otherwise, an error is returned. The first argument, name, defines the name of the column in the results. The second argument, expression, defines the calculation performed to obtain the value for each row in that column.\n\ngroupBy_columnName must be either in table or in a related table to table.\n\nEach name must be enclosed in double quotation marks.\n\nThe function groups a selected set of rows into a set of summary rows by the values of one or more groupBy_columnName columns. One row is returned for each group.\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Table manipulation functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/table-manipulation-functions-dax",
        "category-zh-cn": "表操作函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/table-manipulation-functions-dax",
        "description-zh-cn": "返回一个摘要表，显示对一组函数的请求总数。\n为其定义名称的每个列都必须具有一个对应的表达式；否则，将返回错误。 第一个参数 name 定义结果中列的名称。 第二个参数 expression 定义为获取该列中每一行的值进行的计算。\n\ngroupBy_columnName 必须位于表中，或位于与表相关的表中   。\n\n每个名称都必须用双引号引起来。\n\n函数根据一个或多个 groupBy_columnName 列的值将一组选定的行归组为一组摘要行。 为每个组返回一行。\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/summarize/"
    },
    "SUMMARIZECOLUMNS": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/summarizecolumns-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/summarizecolumns-function-dax",
        "description-en-us": "Returns a summary table over a set of groups.\nThis function does not guarantee any sort order for the results.\n\nA column cannot be specified more than once in the groupBy_columnName parameter. For example, the following formula is invalid.\nSUMMARIZECOLUMNS( Sales[StoreId], Sales[StoreId] )\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Table manipulation functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/table-manipulation-functions-dax",
        "category-zh-cn": "表操作函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/table-manipulation-functions-dax",
        "description-zh-cn": "返回一组组的摘要表。\n此函数不保证结果的任何排序顺序。\n\n不能在 groupBy_columnName 参数中多次指定某一列。 例如，下面的公式无效。\nSUMMARIZECOLUMNS( Sales[StoreId], Sales[StoreId] )\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/summarizecolumns/"
    },
    "Table constructor": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/table-constructor",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/table-constructor",
        "description-en-us": "Returns a table of one or more columns.\nThe first syntax returns a table of a single column. The second syntax returns a table of one or more columns.\n\nThe number of scalar expressions must be the same for all rows.\n\nWhen the data types of the values for a column are different in different rows, all values are converted to a common data type.\n\n",
        "category-en-us": "Table manipulation functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/table-manipulation-functions-dax",
        "category-zh-cn": "表操作函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/table-manipulation-functions-dax",
        "description-zh-cn": "返回包含一列或多列的表。\n第一个语法返回只包含一列的表。 第二个语法返回包含一列或多列的表。\n\n所有行的标量表达式数量必须相同。\n\n不同行中某列的值的数据类型不同时，所有值都转换为通用数据类型。\n\n",
        "url-dax-guide": "https://dax.guide/table constructor/"
    },
    "TOPN": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/topn-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/topn-function-dax",
        "description-en-us": "Returns the top N rows of the specified table.\nIf there is a tie, in Order_By values, at the N-th row of the table, then all tied rows are returned. Then, when there are ties at the N-th row the function might return more than n rows.\n\nIf N_Value is 0 (zero) or less, TOPN returns an empty table.\n\nTOPN does not guarantee any sort order for the results.\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Table manipulation functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/table-manipulation-functions-dax",
        "category-zh-cn": "表操作函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/table-manipulation-functions-dax",
        "description-zh-cn": "返回指定表的前 N 行。\n如果在表的第 N 行 rder_By 值存在关联，则返回所有关联的行。 因此，在第 N 行有关联时，函数可能返回多于 n 行。\n\n如果 N_Value 为 0（零）或更小，则 TOPN 将返回一个空表。\n\nTOPN 不保证结果的任何排序顺序。\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/topn/"
    },
    "TREATAS": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/treatas-function",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/treatas-function",
        "description-en-us": "Applies the result of a table expression as filters to columns from an unrelated table.\nThe number of columns specified must match the number of columns in the table expression and be in the same order.\n\nIf a value returned in the table expression does not exist in the column, it is ignored. For example, TREATAS({\"Red\", \"Green\", \"Yellow\"}, DimProduct[Color]) sets a filter on column DimProduct[Color] with three values \"Red\", \"Green\", and \"Yellow\". If \"Yellow\" does not exist in  DimProduct[Color], the effective filter values would are \"Red\" and \"Green\".\n\nBest for use when a relationship does not exist between the tables. If you have multiple relationships between the tables involved, consider using USERELATIONSHIP instead.\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Table manipulation functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/table-manipulation-functions-dax",
        "category-zh-cn": "表操作函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/table-manipulation-functions-dax",
        "description-zh-cn": "将表表达式的结果作为筛选器应用于无关表中的列。\n指定的列数必须与表表达式中的列数匹配，并按相同的顺序排列。\n\n如果列中不存在表表达式中返回的值，则将其忽略。 例如，TREATAS({\"Red\", \"Green\", \"Yellow\"}, DimProduct[Color]) 对 DimProduct[Color] 列设置了具有“Red”、“Green”和“Yellow”三个值的筛选器。 如果 DimProduct[Color] 中不存在“Yellow”，则有效的筛选器值为“Red”和“Green”。\n\n表之间不存在关系时，最适合使用。 如果涉及的表之间存在多个关系，请考虑改用 USERELATIONSHIP。\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/treatas/"
    },
    "UNION": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/union-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/union-function-dax",
        "description-en-us": "Creates a union (join) table from a pair of tables.\nThe two tables must have the same number of columns.\n\nColumns are combined by position in their respective tables.\n\nThe column names in the return table will match the column names in table_expression1.\n\nDuplicate rows are retained.\n\nThe returned table has lineage where possible. For example, if the first column of each table_expression has lineage to the same base column C1 in the model, the first column in the UNION result will have lineage to C1. However, if combined columns have lineage to different base columns, or if there is an extension column, the resulting column in UNION will have no lineage.\n\nWhen data types differ, the resulting data type is determined based on the rules for data type coercion.\n\nThe returned table will not contain columns from related tables.\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Table manipulation functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/table-manipulation-functions-dax",
        "category-zh-cn": "表操作函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/table-manipulation-functions-dax",
        "description-zh-cn": "从一对表创建联合（联接）表。\n这两个表必须具有相同的列数。\n\n列按其各自表中的位置进行组合。\n\n返回表中的列名将与 table_expression1 中的列名相匹配。\n\n保留重复的行。\n\n返回的表可能有世系。 例如，如果每个 table_expression 的第一列与模型中相同的基本列 C1 有世系，则 UNION 结果中的第一列将会有到 C1 的世系。 但是，如果组合列具有到不同基列的世系，或如果存在扩展列，则 UNION 中生成的列将没有世系。\n\n如果数据类型不同，则根据数据类型强制的规则来确定所生成的数据类型。\n\n返回的表将不包含相关表中的列。\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/union/"
    },
    "VALUES": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/values-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/values-function-dax",
        "description-en-us": "When the input parameter is a column name, returns a one-column table that contains the distinct values from the specified column. Duplicate values are removed and only unique values are returned. A BLANK value can be added. When the input parameter is a table name, returns the rows from the specified table. Duplicate rows are preserved. A BLANK row can be added.\nWhen you use the VALUES function in a context that has been filtered, the unique values returned by VALUES are affected by the filter. For example, if you filter by Region, and return a list of the values for City, the list will include only those cities in the regions permitted by the filter. To return all of the cities, regardless of existing filters, you must use the ALL function to remove filters from the table. The second example demonstrates use of ALL with VALUES.\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\nFor best practices when using VALUES, see Use SELECTEDVALUE instead of VALUES.\n\n",
        "category-en-us": "Table manipulation functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/table-manipulation-functions-dax",
        "category-zh-cn": "表操作函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/table-manipulation-functions-dax",
        "description-zh-cn": "当输入参数为列名时，返回包含指定列中非重复值的单列表。 重复值被删除，仅返回唯一值。 可添加 BLANK 值。 当输入参数是表名时，返回指定表中的行。 保留重复的行。 可添加 BLANK 行。\n当你在已筛选的上下文中使用 VALUES 函数时，VALUES 返回的唯一值将受到筛选器的影响。 例如，如果按“区域”进行筛选并返回“城市”值的列表，则该列表将只包括筛选器允许的区域中的那些城市。 若要返回所有城市，无论现有筛选器的设置如何，都必须使用 ALL 函数从表格中删除筛选器。 第二个示例演示如何将 ALL 与 VALUES 结合使用。\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n有关使用 VALUES 时的最佳做法，请参阅使用 SELECTEDVALUE 而不是 VALUES。\n\n",
        "url-dax-guide": "https://dax.guide/values/"
    },
    "COMBINEVALUES": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/combinevalues-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/combinevalues-function-dax",
        "description-en-us": "Joins two or more text strings into one text string. The primary purpose of this function is to support multi-column relationships in DirectQuery models. See Remarks for details.\nThe COMBINEVALUES function assumes, but does not validate, that when the input values are different, the output strings are also different. Based on this assumption, when COMBINEVALUES is used to create calculated columns in order to build a relationship that joins multiple columns from two DirectQuery tables, an optimized join condition is generated at query time. For example, if users want to create a relationship between Table1(Column1, Column2) and Table2(Column1, Column2), they can create two calculated columns, one on each table, as:\nTable1[CalcColumn] = COMBINEVALUES(\",\", Table1[Column1], Table1[Column2])\n\nand\nTable2[CalcColumn] = COMBINEVALUES(\",\", Table2[Column1], Table2[Column2])\n\nAnd then create a relationship between Table1[CalcColumn] and Table2[CalcColumn]. Unlike other DAX functions and operators, which are translated literally to the corresponding SQL operators and functions, the above relationship generates a SQL join predicate as:\n(Table1.Column1 = Table2.Column1 OR Table1.Column1 IS NULL AND Table2.Column1 IS NULL)\n\nand\n(Table1.Column2 = Table2.Column2 OR Table1.Column2 IS NULL AND Table2.Column2 IS NULL)\n\n\nThe join predicate can potentially deliver much better query performance than one that involves complex SQL operators and functions.\n\nThe COMBINEVALUES function relies on users to choose the appropriate delimiter to ensure that unique combinations of input values produce distinct output strings but it does not validate that the assumption is true. For example, if users choose \"| \" as the delimiter, but one row in Table1 has Table1[Column1] = \"| \" and Table2 [Column2] = \" \", while one row in Table2 has Table2[Column1] = \" \" and Table2[Column2] = \"| \", the two concatenated outputs will be the same \"|| \",  which seem to indicate that the two rows are a match in the join operation. The two rows are not joined together if both tables are from the same DirectQuery source although they are joined together if both tables are imported.\n\n",
        "category-en-us": "Text functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/text-functions-dax",
        "category-zh-cn": "文本函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/text-functions-dax",
        "description-zh-cn": "将两个或更多个文本字符串联接成一个文本字符串。 此函数的主要用途是支持 DirectQuery 模型中的多列关系。 有关详细信息，请参阅“备注”。\nCOMBINEVALUES 函数假设当输入值不同时，输出字符串也不同，但不会对此进行验证。 基于此假设，使用 COMBINEVALUES 创建计算列来建立联接两个 DirectQuery 表中多个列的关系时，将在查询时生成一个已优化的联接条件。 例如，如果用户想要创建 Table1（Column1、Column2）和 Table2（Column1、Column2）之间的关系，他们可以创建两个计算列（这些计算列位于各自的表上），如下所示：\nTable1[CalcColumn] = COMBINEVALUES(\",\", Table1[Column1], Table1[Column2])\n\n和\nTable2[CalcColumn] = COMBINEVALUES(\",\", Table2[Column1], Table2[Column2])\n\n然后创建 Table1[CalcColumn] 和 Table2[CalcColumn] 之间的关系。 不同于按字面转换为相应的 SQL 运算符和函数的其他 DAX 函数和运算符，以上关系将生成一个 SQL 联接谓词，如下所示：\n(Table1.Column1 = Table2.Column1 OR Table1.Column1 IS NULL AND Table2.Column1 IS NULL)\n\n和\n(Table1.Column2 = Table2.Column2 OR Table1.Column2 IS NULL AND Table2.Column2 IS NULL)\n\n\n与包含复杂 SQL 运算符和函数的联接谓词相比，此联接谓词可能会提供更好的查询性能。\n\nCOMBINEVALUES 函数依赖于用户选择适当的分隔符来确保输入值的唯一组合产生不同的输出字符串，但它不会验证此假设是否成立。 例如，如果用户选择 \"| \" 作为分隔符，但 Table1 中的某一行具有 Table1[Column1] = \"| \" 和 Table2 [Column2] = \" \"，而 Table2 中的某一行具有 Table2[Column1] = \" \" 和 Table2[Column2] = \"| \"，那么两个连接的输出将为同一 \"|| \"，这可能表明这两行在联接操作中是匹配的。 如果两个表都来自同一 DirectQuery 源，那两行则不会联接在一起，但如果导入了两个表，它们则会联接在一起。\n\n",
        "url-dax-guide": "https://dax.guide/combinevalues/"
    },
    "CONCATENATE": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/concatenate-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/concatenate-function-dax",
        "description-en-us": "Joins two text strings into one text string.\nThe CONCATENATE function joins two text strings into one text string. The joined items can be text, numbers, Boolean values represented as text, or a combination of those items. You can also use a column reference if the column contains appropriate values.\n\nThe CONCATENATE function in DAX accepts only two arguments, whereas the Excel CONCATENATE function accepts up to 255 arguments. If you need to concatenate multiple columns, you can create a series of calculations or use the concatenation operator (&) to join all of them in a simpler expression.\n\nIf you want to use text strings directly, rather than using a column reference, you must enclose each string in double quotation marks.\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Text functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/text-functions-dax",
        "category-zh-cn": "文本函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/text-functions-dax",
        "description-zh-cn": "将两个文本字符串联接成一个文本字符串。\nCONCATENATE 函数将两个文本字符串联接成一个文本字符串。 联接的项可以是文本、数字、表示为文本的布尔值，或是这些项的组合。 如果列包含适当的值，则还可以使用列引用。\n\nDAX 中的 CONCATENATE 函数只接受两个参数，而 Excel CONCATENATE 函数最多可接受 255 个参数。 如果需要串联多个列，可以创建一系列计算，或者使用串联运算符 (&) 将它们全部联接成一个更简单的表达式。\n\n如果要直接使用文本字符串，而不是使用列引用，则必须将每个字符串括在双引号中。\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/concatenate/"
    },
    "CONCATENATEX": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/concatenatex-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/concatenatex-function-dax",
        "description-en-us": "Concatenates the result of an expression evaluated for each row in a table.\nThis function takes as its first argument a table or an expression that returns a table. The second argument is a column that contains the values you want to concatenate, or an expression that returns a value.\n\nConcatenated values are not necessarily sorted in any particular order, unless orderBy_expression is specified.\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Text functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/text-functions-dax",
        "category-zh-cn": "文本函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/text-functions-dax",
        "description-zh-cn": "连接为表中的每一行计算的表达式的结果。\n此函数将表或返回表的表达式作为其第一个参数。 第二个参数是包含要连接的值的列，或者是返回值的表达式。\n\n除非指定了 orderBy_expression，否则连接值不一定按特定顺序排序。\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/concatenatex/"
    },
    "EXACT": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/exact-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/exact-function-dax",
        "description-en-us": "Compares two text strings and returns TRUE if they are exactly the same, otherwise returns FALSE. EXACT is case-sensitive but ignores formatting differences. EXACT is case-sensitive",
        "category-en-us": "Text functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/text-functions-dax",
        "category-zh-cn": "文本函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/text-functions-dax",
        "description-zh-cn": "比较两个文本字符串，如果它们完全相同，则返回 TRUE；否则返回 FALSE。 EXACT 区分大小写，但会忽略格式差异。 EXACT 区分大小写",
        "url-dax-guide": "https://dax.guide/exact/"
    },
    "FIND": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/find-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/find-function-dax",
        "description-en-us": "Returns the starting position of one text string within another text string. FIND is case-sensitive.\nWhereas Microsoft Excel has multiple versions of the FIND function to accommodate single-byte character set (SBCS) and double-byte character set (DBCS) languages, DAX uses Unicode and counts each character the same way; therefore, you do not need to use a different version depending on the character type.\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\nFIND does not support wildcards. To use wildcards, use SEARCH.\n\n",
        "category-en-us": "Text functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/text-functions-dax",
        "category-zh-cn": "文本函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/text-functions-dax",
        "description-zh-cn": "返回一个文本字符串在另一个文本字符串中的起始位置。 FIND 区分大小写。\nMicrosoft Excel 有多个版本的 FIND 函数，可以适应单字节字符集 (SBCS) 和双字节字符集 (DBCS) 语言，而 DAX 则使用 Unicode 并以相同的方式对每个字符进行计数；因此，你无需根据字符类型使用其他版本。\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\nFIND 不支持通配符。 若要使用通配符，请使用 SEARCH。\n\n",
        "url-dax-guide": "https://dax.guide/find/"
    },
    "FIXED": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/fixed-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/fixed-function-dax",
        "description-en-us": "Rounds a number to the specified number of decimals and returns the result as text. You can specify that the result be returned with or without commas.\nIf the value used for the decimals parameter is negative, number is rounded to the left of the decimal point.\n\nIf you omit decimals, it is assumed to be 2.\n\nIf no_commas is 0 or is omitted, then the returned text includes commas as usual.\n\nThe major difference between formatting a cell containing a number by using a command and formatting a number directly with the FIXED function is that FIXED converts its result to text. A number formatted with a command from the formatting menu is still a number.\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Text functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/text-functions-dax",
        "category-zh-cn": "文本函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/text-functions-dax",
        "description-zh-cn": "将数值舍入到指定的小数位数并将结果返回为文本。 可以指定返回的结果带有或不带逗号。\n如果用于 decimals 参数的值为负，则 number 将舍入到小数点的左侧   。\n\n如果省略小数位数，则默认为 2。\n\n如果“no_commas”为 0 或省略，则返回的文本照常包含逗号  。\n\n使用命令设置包含数字的单元格的格式和直接使用 FIXED 函数设置数字格式之间的主要区别是：FIXED 会将结果转换为文本。 使用格式设置菜单中的命令进行格式设置的数字仍为数字。\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/fixed/"
    },
    "FORMAT": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/format-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/format-function-dax",
        "description-en-us": "Converts a value to text according to the specified format.\nPredefined format strings use the model culture property when formatting the result. By default, the model culture property is set according to the user locale of the computer. For new Power BI Desktop models, the model culture property can be changed in Options > Regional Settings > Model language. For Analysis Services, model culture is set according to the Language property initially defined by the instance.\n\nThe format strings supported as an argument to the DAX FORMAT function are based on the format strings used by Visual Basic (OLE Automation), not on the format strings used by the .NET Framework. Therefore, you might get unexpected results or an error if the argument doesn't match any defined format strings. For example, \"p\" as an abbreviation for \"Percent\" isn't supported. Strings that you provide as an argument to the FORMAT function that aren't included in the list of predefined format strings are handled as part of a custom format string, or as a string literal.\n\nTo learn more specifying a locale with FORMAT, check out this video.\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Text functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/text-functions-dax",
        "category-zh-cn": "文本函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/text-functions-dax",
        "description-zh-cn": "根据所指定的格式将值转换为文本。\n设置结果的格式时，预定义的格式字符串使用模型区域性属性。 默认情况下，根据计算机的用户区域设置设置模型区域性属性。 对于新的 Power BI Desktop 模型，可以在“选项”>“区域设置”>“模型语言”中更改模型区域性属性。 对于 Analysis Services，模型区域性根据实例最初定义的语言属性进行设置。\n\n格式字符串作为 DAX FORMAT 函数的支持参数，以 Visual Basic（OLE 自动化）使用的格式字符串为基础，而不以 NET Framework 使用的格式字符串为基础。 因此，如果参数与任何定义的格式字符串都不匹配，则可能会出现意外结果或错误。 例如，不支持将“p”作为“Percent”的缩写。 作为 FORMAT 函数的参数提供，且未包括在预定义格式字符串中的字符串将作为自定义格式字符串的一部分或字符串文本处理。\n\n要详细了解如何使用 FORMAT 指定区域设置，请观看此视频。\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/format/"
    },
    "LEFT": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/left-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/left-function-dax",
        "description-en-us": "Returns the specified number of characters from the start of a text string.\nWhereas Microsoft Excel contains different functions for working with text in single-byte and double-byte character languages, DAX works with Unicode and stores all characters as the same length; therefore, a single function is enough.\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Text functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/text-functions-dax",
        "category-zh-cn": "文本函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/text-functions-dax",
        "description-zh-cn": "从文本字符串开头返回指定数量的字符。\nMicrosoft Excel 包含用于处理单字节和双字节字符语言的文本的不同函数，而 DAX 与 Unicode 一起工作，并将所有字符存储为相同长度；因此，一个函数就足够了。\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/left/"
    },
    "LEN": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/len-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/len-function-dax",
        "description-en-us": "Returns the number of characters in a text string.\nWhereas Microsoft Excel has different functions for working with single-byte and double-byte character languages, DAX uses Unicode and stores all characters with the same length.\n\nLEN always counts each character as 1, no matter what the default language setting is.\n\nIf you use LEN with a column that contains non-text values, such as dates or Booleans, the function implicitly casts the value to text, using the current column format.\n\n",
        "category-en-us": "Text functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/text-functions-dax",
        "category-zh-cn": "文本函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/text-functions-dax",
        "description-zh-cn": "返回文本字符串中的字符数。\nMicrosoft Excel 包含使用单字节和双字节字符语言的不同函数，而 DAX 使用 Unicode，并将所有字符存储为相同长度。\n\n无论默认语言设置是什么，LEN 始终将每个字符计为 1。\n\n如果将 LEN 用于包含非文本值（例如日期或布尔值）的列，该函数会使用当前列格式将值隐式转换为文本。\n\n",
        "url-dax-guide": "https://dax.guide/len/"
    },
    "LOWER": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/lower-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/lower-function-dax",
        "description-en-us": "Converts all letters in a text string to lowercase.",
        "category-en-us": "Text functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/text-functions-dax",
        "category-zh-cn": "文本函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/text-functions-dax",
        "description-zh-cn": "将文本字符串中的所有字母都转换为小写。",
        "url-dax-guide": "https://dax.guide/lower/"
    },
    "MID": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/mid-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/mid-function-dax",
        "description-en-us": "Returns a string of characters from the middle of a text string, given a starting position and length.",
        "category-en-us": "Text functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/text-functions-dax",
        "category-zh-cn": "文本函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/text-functions-dax",
        "description-zh-cn": "在提供开始位置和长度的情况下，从文本字符串中间返回字符串。",
        "url-dax-guide": "https://dax.guide/mid/"
    },
    "REPLACE": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/replace-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/replace-function-dax",
        "description-en-us": "REPLACE replaces part of a text string, based on the number of characters you specify, with a different text string.\nWhereas Microsoft Excel has different functions for use with single-byte and double-byte character languages, DAX uses Unicode and therefore stores all characters as the same length.\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Text functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/text-functions-dax",
        "category-zh-cn": "文本函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/text-functions-dax",
        "description-zh-cn": "REPLACE 根据指定的字符数，将部分文本字符串替换为不同的文本字符串。\nMicrosoft Excel 包含用于单字节和双字节字符语言的不同函数，而 DAX 使用 Unicode，因此将所有字符存储为相同长度。\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/replace/"
    },
    "REPT": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/rept-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/rept-function-dax",
        "description-en-us": "Repeats text a given number of times. Use REPT to fill a cell with a number of instances of a text string.\nIf number_times is 0 (zero), REPT returns a blank.\n\nIf number_times is not an integer, it is truncated.\n\nThe result of the REPT function cannot be longer than 32,767 characters, or REPT returns an error.\n\n",
        "category-en-us": "Text functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/text-functions-dax",
        "category-zh-cn": "文本函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/text-functions-dax",
        "description-zh-cn": "按给定次数重复文本。 使用 REPT 在一个单元中重复填写一定次数的文本字符串。\n如果 number_times 为 0（零），REPT 将返回空白。\n\n如果 number_times 不为整数，则截断该值。\n\nREPT 函数的结果不能超过 32,767 个字符，否则 REPT 将返回错误。\n\n",
        "url-dax-guide": "https://dax.guide/rept/"
    },
    "RIGHT": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/right-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/right-function-dax",
        "description-en-us": "RIGHT returns the last character or characters in a text string, based on the number of characters you specify.\nRIGHT always counts each character, whether single-byte or double-byte, as 1, no matter what the default language setting is.\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Text functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/text-functions-dax",
        "category-zh-cn": "文本函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/text-functions-dax",
        "description-zh-cn": "RIGHT 根据指定的字符数返回文本字符串中的最后一个或几个字符。\n无论默认的语言设置是什么，RIGHT 始终将每个字符（无论是单字节还是双字节）计为 1。\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/right/"
    },
    "SEARCH": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/search-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/search-function-dax",
        "description-en-us": "Returns the number of the character at which a specific character or text string is first found, reading left to right. Search is case-insensitive and accent sensitive.\nThe search function is case insensitive. Searching for \"N\" will find the first occurrence of 'N' or 'n'.\n\nThe search function is accent sensitive. Searching for \"á\" will find the first occurrence of 'á' but no occurrences of 'a', 'à', or the capitalized versions 'A', 'Á'.\n\nYou can use the SEARCH function to determine the location of a character or text string within another text string, and then use the MID function to return the text, or use the REPLACE function to change the text.\n\nIf the find_text cannot be found in within_text, the formula returns an error. This behavior is like Excel, which returns #VALUE if the substring is not found. Nulls in within_text will be interpreted as an empty string in this context.\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Text functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/text-functions-dax",
        "category-zh-cn": "文本函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/text-functions-dax",
        "description-zh-cn": "返回按从左向右的读取顺序首次找到特定字符或文本字符串的字符编号。 搜索不区分大小写，会区分音调。\n此搜索函数不区分大小写。 搜索“N”，将查找第一次出现“N”或“n”的位置。\n\n此搜索函数区分音调。 搜索“á”会查找第一次出现“á”的位置，但不会查找第一次出现“a”、“à”或大写“A”和“Á”的位置。\n\n可以使用 SEARCH 函数确定字符或文本字符串在另一个文本字符串中的位置，然后使用 MID 函数返回文本，或使用 REPLACE 函数更改文本。\n\n如果在 within_text 中找不到 find_text，该公式将返回错误   。 此行为与 Excel 类似，后者在找不到子字符串时返回 #VALUE。 within_text 中的 NULL 将在此上下文中解释为空字符串  。\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/search/"
    },
    "SUBSTITUTE": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/substitute-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/substitute-function-dax",
        "description-en-us": "Replaces existing text with new text in a text string.\nUse the SUBSTITUTE function when you want to replace specific text in a text string; use the REPLACE function when you want to replace any text of variable length that occurs in a specific location in a text string.\n\nThe SUBSTITUTE function is case-sensitive. If case does not match between text and old_text, SUBSTITUTE will not replace the text.\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Text functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/text-functions-dax",
        "category-zh-cn": "文本函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/text-functions-dax",
        "description-zh-cn": "在文本字符串中将现有文本替换为新文本。\n如果要替换文本字符串中的特定文本，请使用 SUBSTITUTE 数；如果要替换出现在文本字符串中特定位置、长度可变的任何文本，请使用 REPLACE 函数。\n\nSUBSTITUTE 函数区分大小写。 如果 text 和 old_text 之间的大小写不匹配，SUBSTITUTE 不会替换文本。\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/substitute/"
    },
    "TRIM": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/trim-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/trim-function-dax",
        "description-en-us": "Removes all spaces from text except for single spaces between words.\nUse TRIM on text that you have received from another application that may have irregular spacing.\n\nThe TRIM function was originally designed to trim the 7-bit ASCII space character (value 32) from text. In the Unicode character set, there is an additional space character called the nonbreaking space character that has a decimal value of 160. This character is commonly used in Web pages as the HTML entity, &nbsp;. By itself, the TRIM function does not remove this nonbreaking space character. For an example of how to trim both space characters from text, see Remove spaces and nonprinting characters from text.\n\n",
        "category-en-us": "Text functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/text-functions-dax",
        "category-zh-cn": "文本函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/text-functions-dax",
        "description-zh-cn": "删除文本中除单词之间的单个空格外的所有空格。\n在从其他应用程序收到的可能具有不规则间距的文本上使用 TRIM。\n\nTRIM 函数最初的用途是从文本中剪裁 7 位 ASCII 空格字符（值 32）。 在 Unicode 字符集中，还有一个称为不间断空格字符的附加空格字符，其十进制值为 160。 此字符通常在网页中用作 HTML 实体 &nbsp;。 TRIM 函数本身不会删除这个不间断的空格字符。 有关如何从文本中剪裁两个空格字符的示例，请参见从文本中删除空格和非打印字符。\n\n",
        "url-dax-guide": "https://dax.guide/trim/"
    },
    "UNICHAR": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/unichar-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/unichar-function-dax",
        "description-en-us": "Returns the Unicode character referenced by the numeric value.\nIf XML characters are not invalid, UNICHAR returns an error.\n\nIf Unicode numbers are partial surrogates and data types are not valid, UNICHAR returns an error.\n\nIf numbers are numeric values that fall outside the allowable range, UNICHAR returns an error.\n\nIf number is zero (0), UNICHAR returns an error.\n\nThe Unicode character returned can be a string of characters, for example in UTF-8 or UTF-16 codes.\n\n",
        "category-en-us": "Text functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/text-functions-dax",
        "category-zh-cn": "文本函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/text-functions-dax",
        "description-zh-cn": "返回由数值引用的 Unicode 字符。\n如果 XML 字符无效，UNICHAR 将返回错误。\n\n如果 Unicode 数字是部分代理项并且数据类型无效，UNICHAR 将返回错误。\n\n如果数字是超出所允许范围的数值，UNICHAR 将返回错误。\n\n如果数字为零 (0)，UNICHAR 将返回错误。\n\n返回的 Unicode 字符可以是字符型字符串，例如 UTF-8 或 UTF-16 代码。\n\n",
        "url-dax-guide": "https://dax.guide/unichar/"
    },
    "UNICODE": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/unicode-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/unicode-function-dax",
        "description-en-us": "Returns the number (code point) corresponding to the first character of the text.",
        "category-en-us": "Text functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/text-functions-dax",
        "category-zh-cn": "文本函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/text-functions-dax",
        "description-zh-cn": "返回与文本的首个字符对应的数字（代码）。",
        "url-dax-guide": "https://dax.guide/unicode/"
    },
    "UPPER": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/upper-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/upper-function-dax",
        "description-en-us": "Converts a text string to all uppercase letters.",
        "category-en-us": "Text functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/text-functions-dax",
        "category-zh-cn": "文本函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/text-functions-dax",
        "description-zh-cn": "将文本字符串转换为全大写字母。",
        "url-dax-guide": "https://dax.guide/upper/"
    },
    "VALUE": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/value-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/value-function-dax",
        "description-en-us": "Converts a text string that represents a number to a number.\nThe value passed as the text parameter can be in any of the constant, number, date, or time formats recognized by the application or services you are using. If text is not in one of these formats, an error is returned.\n\nYou do not generally need to use the VALUE function in a formula because the engine implicitly converts text to numbers as necessary.\n\nYou can also use column references. For example, if you have a column that contains mixed number types, VALUE can be used to convert all values to a single numeric data type. However, if you use the VALUE function with a column that contains mixed numbers and text, the entire column is flagged with an error, because not all values in all rows can be converted to numbers.\n\n",
        "category-en-us": "Text functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/text-functions-dax",
        "category-zh-cn": "文本函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/text-functions-dax",
        "description-zh-cn": "将表示数值的文本字符串转换为数值。\n作为文本参数传递的值可以是所使用的应用程序或服务能识别的任何常量、数字、日期或时间格式。 如果文本不是这些格式之一，则返回错误。\n\n通常不需要在公式中使用 VALUE 函数，因为引擎会根据需要隐式地将文本转换为数字。\n\n还可以使用列引用。 例如，如果你有一个包含混合数字类型的列，则可以使用 VALUE 将所有值转换为单一数字数据类型。 但是，如果将 VALUE 函数用于包含混合数字和文本的列，则整个列将被标记为错误，因为并非所有行中的所有值都可以转换为数字。\n\n",
        "url-dax-guide": "https://dax.guide/value/"
    },
    "CLOSINGBALANCEMONTH": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/closingbalancemonth-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/closingbalancemonth-function-dax",
        "description-en-us": "Evaluates the expression at the last date of the month in the current context.\nThe dates argument can be any of the following:\n\nA reference to a date/time column.\n\nA table expression that returns a single column of date/time values.\n\nA Boolean expression that defines a single-column table of date/time values.\n\nNote\nConstraints on Boolean expressions are described in CALCULATE function.\n\n\nNote\nThe filter expression has restrictions described in CALCULATE function.\n\n\n\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Time intelligence functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/time-intelligence-functions-dax",
        "category-zh-cn": "时间智能函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/time-intelligence-functions-dax",
        "description-zh-cn": "计算当前上下文中该月最后一个日期的表达式  。\ndates 参数可以是以下任一项  ：\n\n对日期/时间列的引用。\n\n返回单列日期/时间值的表表达式。\n\n定义日期/时间值的单列表的布尔表达式。\n\n注意\n有关对布尔表达式的约束，可查看 CALCULATE 函数。\n\n\n注意\nFilter 表达式具有 CALCULATE 函数中描述的限制。\n\n\n\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/closingbalancemonth/"
    },
    "CLOSINGBALANCEQUARTER": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/closingbalancequarter-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/closingbalancequarter-function-dax",
        "description-en-us": "Evaluates the expression at the last date of the quarter in the current context.\nThe dates argument can be any of the following:\n\nA reference to a date/time column.\n\nA table expression that returns a single column of date/time values.\n\nA Boolean expression that defines a single-column table of date/time values.\n\nNote\nConstraints on Boolean expressions are described in CALCULATE function.\n\n\nNote\nThe filter expression has restrictions described in CALCULATE function.\n\n\n\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Time intelligence functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/time-intelligence-functions-dax",
        "category-zh-cn": "时间智能函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/time-intelligence-functions-dax",
        "description-zh-cn": "计算当前上下文中该季度最后一个日期的表达式  。\ndates 参数可以是以下任一项  ：\n\n对日期/时间列的引用。\n\n返回单列日期/时间值的表表达式。\n\n定义日期/时间值的单列表的布尔表达式。\n\n注意\n有关对布尔表达式的约束，可查看 CALCULATE 函数。\n\n\n注意\nFilter 表达式具有 CALCULATE 函数中描述的限制。\n\n\n\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/closingbalancequarter/"
    },
    "CLOSINGBALANCEYEAR": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/closingbalanceyear-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/closingbalanceyear-function-dax",
        "description-en-us": "Evaluates the expression at the last date of the year in the current context.\nThe year_end_date parameter is a string literal of a date, in the same locale as the locale of the client where the workbook was created. The year portion of the date is ignored.\n\nThe dates argument can be any of the following:\n\nA reference to a date/time column.\n\nA table expression that returns a single column of date/time values.\n\nA Boolean expression that defines a single-column table of date/time values.\n\nNote\nConstraints on Boolean expressions are described in CALCULATE function.\n\n\nNote\nThe filter expression has restrictions described in CALCULATE function.\n\n\n\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Time intelligence functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/time-intelligence-functions-dax",
        "category-zh-cn": "时间智能函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/time-intelligence-functions-dax",
        "description-zh-cn": "计算当前上下文中该年份最后一个日期的表达式  。\nyear_end_date 参数是日期的字符串文本，采用的区域设置与创建工作簿的客户端的区域设置相同。 日期的年份部分会被忽略。\n\ndates 参数可以是以下任一项：\n\n对日期/时间列的引用。\n\n返回单列日期/时间值的表表达式。\n\n定义日期/时间值的单列表的布尔表达式。\n\n注意\n有关对布尔表达式的约束，可查看 CALCULATE 函数。\n\n\n注意\nFilter 表达式具有 CALCULATE 函数中描述的限制。\n\n\n\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/closingbalanceyear/"
    },
    "DATEADD": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/dateadd-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/dateadd-function-dax",
        "description-en-us": "Returns a table that contains a column of dates, shifted either forward or backward in time by the specified number of intervals from the dates in the current context.\nA reference to a date/time column,\n\nA table expression that returns a single column of date/time values,\n\nA Boolean expression that defines a single-column table of date/time values.\n\nNote\nConstraints on Boolean expressions are described in the topic, CALCULATE function.\n\n\nIf the number specified for number_of_intervals is positive, the dates in dates are moved forward in time; if the number is negative, the dates in dates are shifted back in time.\n\nThe interval parameter is an enumeration, not a set of strings; therefore values should not be enclosed in quotation marks. Also, the values: year, quarter, month, day should be spelled in full when using them.\n\nThe result table includes only dates that exist in the dates column.\n\nIf the dates in the current context do not form a contiguous interval, the function returns an error.\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Time intelligence functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/time-intelligence-functions-dax",
        "category-zh-cn": "时间智能函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/time-intelligence-functions-dax",
        "description-zh-cn": "返回一个表，此表包含一列日期，日期从当前上下文中的日期开始按指定的间隔数向未来推移或者向过去推移。\n对日期/时间列的引用，\n\n返回单列日期/时间值的表表达式，\n\n定义日期/时间值的单列表的布尔表达式。\n\n注意\n有关对布尔表达式的约束，可查看 CALCULATE 函数主题。\n\n\n如果为 number_of_intervals 指定了正数，则 dates 中的日期向未来推移；如果指定的数字为负数，则 dates 中的日期向过去推移    。\n\ninterval 参数是一个枚举，而不是一组字符串；因此不应将值括在引号中  。 此外，在使用值 year、quarter、month 和 day 时应将它们拼写完整。\n\n结果表只包括 dates 列中存在的日期  。\n\n如果当前上下文中的日期未形成连续间隔，函数则会返回错误。\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/dateadd/"
    },
    "DATESBETWEEN": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/datesbetween-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/datesbetween-function-dax",
        "description-en-us": "Returns a table that contains a column of dates that begins with a specified start date and continues until a specified end date.\nIn the most common use case, Dates is a reference to the date column of a marked date table.\n\nIf StartDate is BLANK, then StartDate will be the earliest value in the Dates column.\n\nIf EndDate is BLANK, then EndDate will be the latest value in the Dates column.\n\nDates used as the StartDate and EndDate are inclusive. So, for example, if the StartDate value is July 1, 2019, then that date will be included in the returned table (providing the date exists in the Dates column).\n\nThe returned table can only contain dates stored in the Dates column. So, for example, if the Dates column starts from July 1, 2017, and the StartDate value is July 1, 2016, the returned table will start from July 1, 2017.\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Time intelligence functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/time-intelligence-functions-dax",
        "category-zh-cn": "时间智能函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/time-intelligence-functions-dax",
        "description-zh-cn": "返回一个包含一列日期的表，这些日期以指定开始日期，一直持续到指定的结束日期。\n在最常见的用例中，Dates 是对已标记的日期表的日期列的引用。\n\n如果 StartDate 为空，则 StartDate 将是“Dates”列中的最早值。\n\n如果 EndDate 为空，则 EndDate 将是“Dates”列中的最晚值。\n\n用作 StartDate 和 EndDate 的日期包括在内。 因此例如，如果 StartDate 值为 2019 年 7 月 1 日，则该日期将包含在已返回的表中（前提是“Dates”列中存在该日期）。\n\n返回的表只能包含存储在“Dates”列中的日期。 因此例如，如果“Dates”列从 2017 年 7 月 1 日开始，并且 StartDate 值是 2016 年 7 月 1 日，则返回的表将从 2017 年 7 月 1 日开始。\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/datesbetween/"
    },
    "DATESINPERIOD": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/datesinperiod-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/datesinperiod-function-dax",
        "description-en-us": "Returns a table that contains a column of dates that begins with a specified start date and continues for the specified number and type of date intervals.\nIn the most common use case, dates is a reference to the date column of a marked date table.\n\nIf the number specified for number_of_intervals is positive, dates are moved forward in time; if the number is negative, dates are shifted backward in time.\n\nThe interval parameter is an enumeration. Valid values are DAY, MONTH, QUARTER, and YEAR. Because it's an enumeration, values aren't passed in as strings. So don't enclose them within quotation marks.\n\nThe returned table can only contain dates stored in the dates column. So, for example, if the dates column starts from July 1, 2017, and the start_date value is July 1, 2016, the returned table will start from July 1, 2017.\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Time intelligence functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/time-intelligence-functions-dax",
        "category-zh-cn": "时间智能函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/time-intelligence-functions-dax",
        "description-zh-cn": "返回一个表，此表包含一列日期，日期以指定的开始日期开始，并按照指定的日期间隔一直持续到指定的数字。\n在最常见的用例中，日期是对已标记的日期表的日期列的引用。\n\n如果为 number_of_intervals 指定了正数，则日期向未来推移；如果指定了负数，则日期向过去推移。\n\ninterval 参数是必需的。 有效值为 DAY、MONTH、QUARTER 和 YEAR。 由于这是一个枚举，值不作为字符串传入。 因此不要将它们放在引号内。\n\n返回的表只能包含存储在“日期”列中的日期。 因此例如，如果日期列从 2017 年 7 月 1 日开始，并且 start_date 值是 2016 年 7 月 1 日，则返回的表将从 2017 年 7 月 1 日开始 。\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/datesinperiod/"
    },
    "DATESMTD": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/datesmtd-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/datesmtd-function-dax",
        "description-en-us": "Returns a table that contains a column of the dates for the month to date, in the current context.\nA reference to a date/time column.\n\nA table expression that returns a single column of date/time values.\n\nA Boolean expression that defines a single-column table of date/time values.\n\nNote\nConstraints on Boolean expressions are described in the topic, CALCULATE function.\n\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Time intelligence functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/time-intelligence-functions-dax",
        "category-zh-cn": "时间智能函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/time-intelligence-functions-dax",
        "description-zh-cn": "返回一个表，此表包含当前上下文中该月份至今的一列日期。\n对日期/时间列的引用。\n\n返回单列日期/时间值的表表达式。\n\n定义日期/时间值的单列表的布尔表达式。\n\n注意\n有关对布尔表达式的约束，可查看 CALCULATE 函数主题。\n\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/datesmtd/"
    },
    "DATESQTD": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/datesqtd-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/datesqtd-function-dax",
        "description-en-us": "Returns a table that contains a column of the dates for the quarter to date, in the current context.\nA reference to a date/time column.\n\nA table expression that returns a single column of date/time values.\n\nA Boolean expression that defines a single-column table of date/time values.\n\nNote\nConstraints on Boolean expressions are described in the topic, CALCULATE function.\n\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Time intelligence functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/time-intelligence-functions-dax",
        "category-zh-cn": "时间智能函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/time-intelligence-functions-dax",
        "description-zh-cn": "返回一个表，此表包含当前上下文中该季度至今的一列日期。\n对日期/时间列的引用。\n\n返回单列日期/时间值的表表达式。\n\n定义日期/时间值的单列表的布尔表达式。\n\n注意\n有关对布尔表达式的约束，可查看 CALCULATE 函数主题。\n\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/datesqtd/"
    },
    "DATESYTD": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/datesytd-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/datesytd-function-dax",
        "description-en-us": "Returns a table that contains a column of the dates for the year to date, in the current context.\nA reference to a date/time column,\n\nA table expression that returns a single column of date/time values,\n\nA Boolean expression that defines a single-column table of date/time values.\n\nNote\nConstraints on Boolean expressions are described in the topic, CALCULATE function.\n\n\nThe year_end_date parameter is a string literal of a date, in the same locale as the locale of the client where the workbook was created. The year portion of the date is ignored.  Depending on locale, the format might be something like \"m-dd\" or \"dd-m\".\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Time intelligence functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/time-intelligence-functions-dax",
        "category-zh-cn": "时间智能函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/time-intelligence-functions-dax",
        "description-zh-cn": "返回一个表，此表包含当前上下文中该年份至今的一列日期。\n对日期/时间列的引用，\n\n返回单列日期/时间值的表表达式，\n\n定义日期/时间值的单列表的布尔表达式。\n\n注意\n有关对布尔表达式的约束，可查看 CALCULATE 函数主题。\n\n\nyear_end_date 参数是日期的字符串文本，采用的区域设置与创建工作簿的客户端的区域设置相同  。 日期的年份部分会被忽略。  格式可能类似于“m-dd”或“dd-m”，具体取决于区域设置。\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/datesytd/"
    },
    "ENDOFMONTH": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/endofmonth-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/endofmonth-function-dax",
        "description-en-us": "Returns the last date of the month in the current context for the specified column of dates.\nThe dates argument can be any of the following:\n\nA reference to a date/time column.\nA table expression that returns a single column of date/time values.\nA Boolean expression that defines a single-column table of date/time values.\n\n\nConstraints on Boolean expressions are described in the topic, CALCULATE function.\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Time intelligence functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/time-intelligence-functions-dax",
        "category-zh-cn": "时间智能函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/time-intelligence-functions-dax",
        "description-zh-cn": "返回当前上下文中指定日期列的月份的最后一个日期。\ndates 参数可以是以下任一项  ：\n\n对日期/时间列的引用。\n返回单列日期/时间值的表表达式。\n定义日期/时间值的单列表的布尔表达式。\n\n\n有关对布尔表达式的约束，可查看 CALCULATE 函数主题。\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/endofmonth/"
    },
    "ENDOFQUARTER": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/endofquarter-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/endofquarter-function-dax",
        "description-en-us": "Returns the last date of the quarter in the current context for the specified column of dates.\nThe dates argument can be any of the following:\n\nA reference to a date/time column,\nA table expression that returns a single column of date/time values,\nA Boolean expression that defines a single-column table of date/time values.\n\n\nConstraints on Boolean expressions are described in the topic, CALCULATE function.\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Time intelligence functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/time-intelligence-functions-dax",
        "category-zh-cn": "时间智能函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/time-intelligence-functions-dax",
        "description-zh-cn": "为指定的日期列返回当前上下文的季度最后一日。\ndates 参数可以是以下任一项  ：\n\n对日期/时间列的引用，\n返回单列日期/时间值的表表达式，\n定义日期/时间值的单列表的布尔表达式。\n\n\n有关对布尔表达式的约束，可查看 CALCULATE 函数主题。\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/endofquarter/"
    },
    "ENDOFYEAR": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/endofyear-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/endofyear-function-dax",
        "description-en-us": "Returns the last date of the year in the current context for the specified column of dates.\nThe dates argument can be any of the following:\n\nA reference to a date/time column,\nA table expression that returns a single column of date/time values,\nA Boolean expression that defines a single-column table of date/time values.\n\n\nConstraints on Boolean expressions are described in the topic, CALCULATE function.\n\nThe year_end_date parameter is a string literal of a date, in the same locale as the locale of the client where the workbook was created. The year portion of the date is ignored.\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Time intelligence functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/time-intelligence-functions-dax",
        "category-zh-cn": "时间智能函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/time-intelligence-functions-dax",
        "description-zh-cn": "返回当前上下文中指定日期列的年份的最后一个日期。\ndates 参数可以是以下任一项  ：\n\n对日期/时间列的引用，\n返回单列日期/时间值的表表达式，\n定义日期/时间值的单列表的布尔表达式。\n\n\n有关对布尔表达式的约束，可查看 CALCULATE 函数主题。\n\nyear_end_date 参数是日期的字符串文本，采用的区域设置与创建工作簿的客户端的区域设置相同  。 日期的年份部分会被忽略。\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/endofyear/"
    },
    "FIRSTDATE": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/firstdate-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/firstdate-function-dax",
        "description-en-us": "Returns the first date in the current context for the specified column of dates.\nThe dates argument can be any of the following:\n\nA reference to a date/time column.\nA table expression that returns a single column of date/time values.\nA Boolean expression that defines a single-column table of date/time values.\n\n\nConstraints on Boolean expressions are described in the topic, CALCULATE function.\n\nWhen the current context is a single date, the date returned by the FIRSTDATE and LASTDATE functions will be equal.\n\nThe Return value is a table that contains a single column and single value. Therefore, this function can be used as an argument to any function that requires a table in its arguments. Also, the returned value can be used whenever a date value is required.\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Time intelligence functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/time-intelligence-functions-dax",
        "category-zh-cn": "时间智能函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/time-intelligence-functions-dax",
        "description-zh-cn": "返回当前上下文中指定日期列的第一个日期。\ndates 参数可以是以下任一项  ：\n\n对日期/时间列的引用。\n返回单列日期/时间值的表表达式。\n定义日期/时间值的单列表的布尔表达式。\n\n\n有关对布尔表达式的约束，可查看 CALCULATE 函数主题。\n\n当前上下文是单个日期时，FIRSTDATE 和 LASTDATE 函数返回的日期将相等。\n\n“返回值”是一个包含单个列和单个值的表。 因此，该函数可用作任何参数中需要表的函数的参数。 另外，只要需要日期值，就可以使用返回值。\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/firstdate/"
    },
    "FIRSTNONBLANK": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/firstnonblank-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/firstnonblank-function-dax",
        "description-en-us": "Returns the first value in the column, column, filtered by the current context, where the expression is not blank.\nThe column argument can be any of the following:\n\nA reference to any column.\nA table with a single column.\n\n\nA Boolean expression that defines a single-column table .\n\nConstraints on Boolean expressions are described in the topic, CALCULATE function.\n\nThis function is typically used to return the first value of a column for which the expression is not blank. For example, you could get the last value for which there were sales of a product.\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Time intelligence functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/time-intelligence-functions-dax",
        "category-zh-cn": "时间智能函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/time-intelligence-functions-dax",
        "description-zh-cn": "返回按当前上下文筛选的 column 列中的第一个值，其中表达式不为空  。\ncolumn 参数可以是以下任一项  ：\n\n对任何列的引用。\n具有单个列的表。\n\n\n定义单列表的布尔表达式。\n\n有关对布尔表达式的约束，可查看 CALCULATE 函数主题。\n\n此函数通常用于返回表达式不为空的列的第一个值。 例如，可以获取产品存在销售额的列的最后一个值。\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/firstnonblank/"
    },
    "FIRSTNONBLANKVALUE": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/firstnonblankvalue-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/firstnonblankvalue-function-dax",
        "description-en-us": "Evaluates an expression filtered by the sorted values of a column and returns the first value of the expression that is not blank.\nThe column argument can be any of the following:\n\nA reference to any column.\nA table with a single column.\n\n\nThis function is different from FIRSTNONBLANK in that the <column> is added to the filter context for the evaluation of <expression>.\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Time intelligence functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/time-intelligence-functions-dax",
        "category-zh-cn": "时间智能函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/time-intelligence-functions-dax",
        "description-zh-cn": "对通过已排序的列值筛选的表达式求值，并返回不为空的表达式的第一个值。\n列参数可为下述任一项：\n\n对任何列的引用。\n具有单个列的表。\n\n\n此函数与 FIRSTNONBLANK 不同，区别是在筛选器上下文中添加了 <column> 来对 <expression> 求值。\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/firstnonblankvalue/"
    },
    "LASTDATE": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/lastdate-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/lastdate-function-dax",
        "description-en-us": "Returns the last date in the current context for the specified column of dates.\nThe dates argument can be any of the following:\n\nA reference to a date/time column,\nA table expression that returns a single column of date/time values,\nA Boolean expression that defines a single-column table of date/time values.\n\n\nConstraints on Boolean expressions are described in the topic, CALCULATE function.\n\nWhen the current context is a single date, the date returned by the FIRSTDATE and LASTDATE functions will be equal.\n\nTechnically, the Return value is a table that contains a single column and single value. Therefore, this function can be used as an argument to any function that requires a table in its arguments. Also, the returned value can be used whenever a date value is required.\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Time intelligence functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/time-intelligence-functions-dax",
        "category-zh-cn": "时间智能函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/time-intelligence-functions-dax",
        "description-zh-cn": "返回当前上下文中指定日期列的最后一个日期。\ndates 参数可以是以下任一项  ：\n\n对日期/时间列的引用，\n返回单列日期/时间值的表表达式，\n定义日期/时间值的单列表的布尔表达式。\n\n\n有关对布尔表达式的约束，可查看 CALCULATE 函数主题。\n\n当前上下文是单个日期时，FIRSTDATE 和 LASTDATE 函数返回的日期将相等。\n\n从技术上讲，返回值是一个包含单个列和单个值的表。 因此，该函数可用作任何参数中需要表的函数的参数。 另外，只要需要日期值，就可以使用返回值。\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/lastdate/"
    },
    "LASTNONBLANK": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/lastnonblank-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/lastnonblank-function-dax",
        "description-en-us": "Returns the last value in the column, column, filtered by the current context, where the expression is not blank.\nThe column argument can be any of the following:\n\nA reference to any column.\nA table with a single column.\nA Boolean expression that defines a single-column table\n\n\nConstraints on Boolean expressions are described in the topic, CALCULATE function.\n\nThis function is typically used to return the last value of a column for which the expression is not blank. For example, you could get the last value for which there were sales of a product.\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Time intelligence functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/time-intelligence-functions-dax",
        "category-zh-cn": "时间智能函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/time-intelligence-functions-dax",
        "description-zh-cn": "返回按当前上下文筛选的 column 列中的最后一个值，其中表达式不为空  。\ncolumn 参数可以是以下任一项  ：\n\n对任何列的引用。\n具有单个列的表。\n定义单列表的布尔表达式\n\n\n有关对布尔表达式的约束，可查看 CALCULATE 函数主题。\n\n此函数通常用于返回表达式不为空的列的最后一个值。 例如，可以获取产品存在销售额的列的最后一个值。\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/lastnonblank/"
    },
    "LASTNONBLANKVALUE": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/lastnonblankvalue-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/lastnonblankvalue-function-dax",
        "description-en-us": "Evaluates an expression filtered by the sorted values of a column and returns the last value of the expression that is not blank.\nThe column argument can be any of the following:\n\nA reference to any column.\nA table with a single column.\n\n\nThis function is different from LASTNONBLANK in that the <column> is added to the filter context for the evaluation of <expression>.\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Time intelligence functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/time-intelligence-functions-dax",
        "category-zh-cn": "时间智能函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/time-intelligence-functions-dax",
        "description-zh-cn": "对通过已排序的列值筛选的表达式求值，并返回不为空的表达式的最后一个值。\n列参数可为下述任一项：\n\n对任何列的引用。\n具有单个列的表。\n\n\n此函数与 LASTNONBLANK 不同，区别是在筛选器上下文中添加了 <column> 来对 <expression> 求值。\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/lastnonblankvalue/"
    },
    "NEXTDAY": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/nextday-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/nextday-function-dax",
        "description-en-us": "Returns a table that contains a column of all dates from the next day, based on the first date specified in the dates column in the current context.\nThis function returns all dates from the next day to the first date in the input parameter. For example, if the first date in the dates argument refers to June 10, 2009; then this function returns all dates equal to June 11, 2009.\n\nThe dates argument can be any of the following:\n\nA reference to a date/time column.\nA table expression that returns a single column of date/time values.\nA Boolean expression that defines a single-column table of date/time values.\n\n\nConstraints on Boolean expressions are described in the topic, CALCULATE function.\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Time intelligence functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/time-intelligence-functions-dax",
        "category-zh-cn": "时间智能函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/time-intelligence-functions-dax",
        "description-zh-cn": "根据当前上下文中的 dates 列中指定的第一个日期返回一个表，此表包含从第二天开始的所有日期的列  。\n此函数返回输入参数中从第二天到第一个日期的所有日期。 例如，如果 dates 参数中的第一个日期是指 2009 年 6 月 10 日；那么此函数返回等于 2009 年 6 月 11 日的所有日期  。\n\ndates 参数可以是以下任一项  ：\n\n对日期/时间列的引用。\n返回单列日期/时间值的表表达式。\n定义日期/时间值的单列表的布尔表达式。\n\n\n有关对布尔表达式的约束，可查看 CALCULATE 函数主题。\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/nextday/"
    },
    "NEXTMONTH": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/nextmonth-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/nextmonth-function-dax",
        "description-en-us": "Returns a table that contains a column of all dates from the next month, based on the first date in the dates column in the current context.\nThis function returns all dates from the next day to the first date in the input parameter. For example, if the first date in the dates argument refers to June 10, 2009; then this function returns all dates for the month of July, 2009.\n\nThe dates argument can be any of the following:\n\nA reference to a date/time column.\nA table expression that returns a single column of date/time values.\nA Boolean expression that defines a single-column table of date/time values.\n\n\nConstraints on Boolean expressions are described in the topic, CALCULATE function.\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Time intelligence functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/time-intelligence-functions-dax",
        "category-zh-cn": "时间智能函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/time-intelligence-functions-dax",
        "description-zh-cn": "根据当前上下文中的 dates 列中的第一个日期返回一个表，此表包含从下个月开始的所有日期的列  。\n此函数返回输入参数中从第二天到第一个日期的所有日期。 例如，如果 date 参数中的第一个日期是指 2009 年 6 月 10 日;然后此函数将返回 2009 年 7 月的所有日期  。\n\ndates 参数可以是以下任一项  ：\n\n对日期/时间列的引用。\n返回单列日期/时间值的表表达式。\n定义日期/时间值的单列表的布尔表达式。\n\n\n有关对布尔表达式的约束，可查看 CALCULATE 函数主题。\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/nextmonth/"
    },
    "NEXTQUARTER": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/nextquarter-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/nextquarter-function-dax",
        "description-en-us": "Returns a table that contains a column of all dates in the next quarter, based on the first date specified in the dates column, in the current context.\nThis function returns all dates in the next quarter, based on the first date in the input parameter. For example, if the first date in the dates column refers to June 10, 2009, this function returns all dates for the quarter July to September, 2009.\n\nThe dates argument can be any of the following:\n\nA reference to a date/time column.\nA table expression that returns a single column of date/time values.\nA Boolean expression that defines a single-column table of date/time values.\n\n\nConstraints on Boolean expressions are described in the topic, CALCULATE function.\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Time intelligence functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/time-intelligence-functions-dax",
        "category-zh-cn": "时间智能函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/time-intelligence-functions-dax",
        "description-zh-cn": "根据当前上下文中的 dates 列中指定的第一个日期返回一个表，其中包含下季度所有日期的列  。\n此函数根据输入参数中的第一个日期返回下一季度的所有日期。 例如，如果“日期”列中的第一个日期是 2009 年 6 月 10 日，则此函数将返回 2009 年 7 月至 9 月这一季度的所有日期  。\n\ndates 参数可以是以下任一项  ：\n\n对日期/时间列的引用。\n返回单列日期/时间值的表表达式。\n定义日期/时间值的单列表的布尔表达式。\n\n\n有关对布尔表达式的约束，可查看 CALCULATE 函数主题。\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/nextquarter/"
    },
    "NEXTYEAR": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/nextyear-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/nextyear-function-dax",
        "description-en-us": "Returns a table that contains a column of all dates in the next year, based on the first date in the dates column, in the current context.\nThis function returns all dates in the next year, based on the first date in the input column. For example, if the first date in the dates column refers to the year 2007, this function returns all dates for the year 2008.\n\nThe dates argument can be any of the following:\n\nA reference to a date/time column.\nA table expression that returns a single column of date/time values.\nA Boolean expression that defines a single-column table of date/time values.\n\n\nConstraints on Boolean expressions are described in the topic, CALCULATE function.\n\nThe year_end_date parameter is a string literal of a date, in the same locale as the locale of the client where the workbook was created. The year portion of the date is ignored.\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Time intelligence functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/time-intelligence-functions-dax",
        "category-zh-cn": "时间智能函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/time-intelligence-functions-dax",
        "description-zh-cn": "根据 dates 列中的第一个日期，返回一个表，表中的一列包含当前上下文中明年的所有日期  。\n此函数根据输入列中的第一个日期返回下一年的所有日期。 如果 dates 列中的第一个日期是 2007 年，则此函数返回 2008 年的所有日期  。\n\ndates 参数可以是以下任一项  ：\n\n对日期/时间列的引用。\n返回单列日期/时间值的表表达式。\n定义日期/时间值的单列表的布尔表达式。\n\n\n有关对布尔表达式的约束，可查看 CALCULATE 函数主题。\n\nyear_end_date 参数是日期的字符串文本，采用的区域设置与创建工作簿的客户端的区域设置相同  。 日期的年份部分会被忽略。\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/nextyear/"
    },
    "OPENINGBALANCEMONTH": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/openingbalancemonth-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/openingbalancemonth-function-dax",
        "description-en-us": "Evaluates the expression at the first date of the month in the current context.\nThe dates argument can be any of the following:\n\nA reference to a date/time column.\nA table expression that returns a single column of date/time values.\nA Boolean expression that defines a single-column table of date/time values.\n\n\nConstraints on Boolean expressions are described in the topic, CALCULATE function.\n\nThe filter expression has restrictions described in the topic, CALCULATE function.\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Time intelligence functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/time-intelligence-functions-dax",
        "category-zh-cn": "时间智能函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/time-intelligence-functions-dax",
        "description-zh-cn": "计算当前上下文中该月份第一个日期的表达式  。\ndates 参数可以是以下任一项  ：\n\n对日期/时间列的引用。\n返回单列日期/时间值的表表达式。\n定义日期/时间值的单列表的布尔表达式。\n\n\n有关对布尔表达式的约束，可查看 CALCULATE 函数主题。\n\nfilter 表达式具有 CALCULATE 函数主题中描述的限制。\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/openingbalancemonth/"
    },
    "OPENINGBALANCEQUARTER": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/openingbalancequarter-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/openingbalancequarter-function-dax",
        "description-en-us": "Evaluates the expression at the first date of the quarter, in the current context.\nThe dates argument can be any of the following:\n\nA reference to a date/time column.\nA table expression that returns a single column of date/time values.\nA Boolean expression that defines a single-column table of date/time values.\n\n\nConstraints on Boolean expressions are described in the topic, CALCULATE function.\n\nThe filter expression has restrictions described in the topic, CALCULATE function.\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Time intelligence functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/time-intelligence-functions-dax",
        "category-zh-cn": "时间智能函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/time-intelligence-functions-dax",
        "description-zh-cn": "计算当前上下文中该季度第一个日期的表达式  。\ndates 参数可以是以下任一项  ：\n\n对日期/时间列的引用。\n返回单列日期/时间值的表表达式。\n定义日期/时间值的单列表的布尔表达式。\n\n\n有关对布尔表达式的约束，可查看 CALCULATE 函数主题。\n\nfilter 表达式具有 CALCULATE 函数主题中描述的限制。\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/openingbalancequarter/"
    },
    "OPENINGBALANCEYEAR": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/openingbalanceyear-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/openingbalanceyear-function-dax",
        "description-en-us": "Evaluates the expression at the first date of the year in the current context.\nThe dates argument can be any of the following:\n\nA reference to a date/time column.\nA table expression that returns a single column of date/time values.\nA Boolean expression that defines a single-column table of date/time values.\n\n\nConstraints on Boolean expressions are described in the topic, CALCULATE function.\n\nThe filter expression has restrictions described in the topic, CALCULATE function.\n\nThe year_end_date parameter is a string literal of a date, in the same locale as the locale of the client where the workbook was created. The year portion of the date is ignored.\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Time intelligence functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/time-intelligence-functions-dax",
        "category-zh-cn": "时间智能函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/time-intelligence-functions-dax",
        "description-zh-cn": "计算当前上下文中该年份第一个日期的表达式  。\ndates 参数可以是以下任一项  ：\n\n对日期/时间列的引用。\n返回单列日期/时间值的表表达式。\n定义日期/时间值的单列表的布尔表达式。\n\n\n有关对布尔表达式的约束，可查看 CALCULATE 函数主题。\n\nfilter 表达式具有 CALCULATE 函数主题中描述的限制。\n\nyear_end_date 参数是日期的字符串文本，采用的区域设置与创建工作簿的客户端的区域设置相同  。 日期的年份部分会被忽略。\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/openingbalanceyear/"
    },
    "PARALLELPERIOD": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/parallelperiod-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/parallelperiod-function-dax",
        "description-en-us": "Returns a table that contains a column of dates that represents a period parallel to the dates in the specified dates column, in the current context, with the dates shifted a number of intervals either forward in time or back in time.\nThis function takes the current set of dates in the column specified by dates, shifts the first date and the last date the specified number of intervals, and then returns all contiguous dates between the two shifted dates. If the interval is a partial range of month, quarter, or year then any partial months in the result are also filled out to complete the entire interval.\n\nThe dates argument can be any of the following:\n\nA reference to a date/time column,\nA table expression that returns a single column of date/time values,\nA Boolean expression that defines a single-column table of date/time values.\n\n\nConstraints on Boolean expressions are described in the topic, CALCULATE function.\n\nIf the number specified for number_of_intervals is positive, the dates in dates are moved forward in time; if the number is negative, the dates in dates are shifted back in time.\n\nThe interval parameter is an enumeration, not a set of strings; therefore values should not be enclosed in quotation marks. Also, the values: year, quarter, month should be spelled in full when using them.\n\nThe result table includes only dates that appear in the values of the underlying table column.\n\nThe PARALLELPERIOD function is similar to the DATEADD function except that PARALLELPERIOD always returns full periods at the given granularity level instead of the partial periods that DATEADD returns. For example, if you have a selection of dates that starts at June 10 and finishes at June 21 of the same year, and you want to shift that selection forward by one month then the PARALLELPERIOD function will return all dates from the next month (July 1 to July 31); however, if DATEADD is used instead, then the result will include only dates from July 10 to July 21.\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Time intelligence functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/time-intelligence-functions-dax",
        "category-zh-cn": "时间智能函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/time-intelligence-functions-dax",
        "description-zh-cn": "返回一个表，此表包含一列日期，表示与当前上下文中指定的 dates 列中的日期平行的时间段，日期是按间隔数向未来推移或者向过去推移的  。\n此函数获取由 dates 指定的列中的当前日期集，将第一个日期和最后一个日期移动指定的间隔数，然后返回两个移动日期之间的所有连续日期  。 如果间隔是月份、季度或年份的部分范围，那么结果中的任何部分月份也将被填充以完成整个时间间隔。\n\ndates 参数可以是以下任一项  ：\n\n对日期/时间列的引用，\n返回单列日期/时间值的表表达式，\n定义日期/时间值的单列表的布尔表达式。\n\n\n有关对布尔表达式的约束，可查看 CALCULATE 函数主题。\n\n如果为 number_of_intervals 指定了正数，则 dates 中的日期向未来推移；如果指定的数字为负数，则 dates 中的日期向过去推移    。\n\ninterval 参数是一个枚举，而不是一组字符串；因此不应将值括在引号中  。 此外，在使用值 year、quarter、month 时应将它们拼写完整。\n\n结果表只包含出现在基础表列的值中的日期。\n\nPARALLELPERIOD 函数类似于 DATEADD 函数，只是 PARALLELPERIOD 总是返回在给定粒度级别处的完整周期，而不是 DATEADD 返回的部分周期。 例如，如果你选择了从 6 月 10 日开始并在同年 6 月 21 日结束的日期，并且想将选择提前一个月，那么 PARALLELPERIOD 函数将返回下个月（7 月 1 日至 7 月 31 日）的所有日期；然而，如果使用的是 DATEADD，那么结果将只包含 7 月 10 日到 7 月 21 日的日期。\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/parallelperiod/"
    },
    "PREVIOUSDAY": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/previousday-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/previousday-function-dax",
        "description-en-us": "Returns a table that contains a column of all dates representing the day that is previous to the first date in the dates column, in the current context.\nThis function determines the first date in the input parameter, and then returns all dates corresponding to the day previous to that first date. For example, if the first date in the dates argument refers to June 10, 2009; this function returns all dates equal to June 9, 2009.\n\nThe dates argument can be any of the following:\n\nA reference to a date/time column.\nA table expression that returns a single column of date/time values.\nA Boolean expression that defines a single-column table of date/time values.\n\n\nConstraints on Boolean expressions are described in the topic, CALCULATE function.\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Time intelligence functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/time-intelligence-functions-dax",
        "category-zh-cn": "时间智能函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/time-intelligence-functions-dax",
        "description-zh-cn": "返回一个表，此表包含的某一列中所有日期所表示的日期均在当前上下文的 dates 列中的第一个日期之前  。\n此函数确定输入参数中的第一个日期，然后返回与该第一个日期之前的日期相对应的所有日期。 例如，如果 dates 参数中的第一个日期是指 2009 年 6月 10 日；那么此函数会返回等于 2009 年 6 月 9 日的所有日期  。\n\ndates 参数可以是以下任一项  ：\n\n对日期/时间列的引用。\n返回单列日期/时间值的表表达式。\n定义日期/时间值的单列表的布尔表达式。\n\n\n有关对布尔表达式的约束，可查看 CALCULATE 函数主题。\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/previousday/"
    },
    "PREVIOUSMONTH": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/previousmonth-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/previousmonth-function-dax",
        "description-en-us": "Returns a table that contains a column of all dates from the previous month, based on the first date in the Dates column, in the current context.\nThis function returns all dates from the previous month, using the first date in the column used as input. For example, if the first date in the Dates argument refers to June 10, 2009, this function returns all dates for the month of May, 2009.\n\nThe Dates argument can be any of the following:\n\nA reference to a date/time column.\nA table expression that returns a single column of date/time values.\nA Boolean expression that defines a single-column table of date/time values.\n\n\nConstraints on Boolean expressions are described in the topic, CALCULATE.\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Time intelligence functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/time-intelligence-functions-dax",
        "category-zh-cn": "时间智能函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/time-intelligence-functions-dax",
        "description-zh-cn": "根据当前上下文中的 Dates 列中的第一个日期返回一个表，此表包含上一月份所有日期的列。\n此函数使用用作输入的列中的第一个日期返回上一月份的所有日期。 例如，如果 Dates 参数中的第一个日期是指 2009 年 6 月 10 日，此函数则将返回 2009 年 5 月的所有日期。\n\nDates 参数可以是以下任一项：\n\n对日期/时间列的引用。\n返回单列日期/时间值的表表达式。\n定义日期/时间值的单列表的布尔表达式。\n\n\n有关对布尔表达式的约束，可查看 CALCULATE 主题。\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/previousmonth/"
    },
    "PREVIOUSQUARTER": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/previousquarter-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/previousquarter-function-dax",
        "description-en-us": "Returns a table that contains a column of all dates from the previous quarter, based on the first date in the dates column, in the current context.\nThis function returns all dates from the previous quarter, using the first date in the input column. For example, if the first date in the dates argument refers to June 10, 2009,  this function returns all dates for the quarter January to March, 2009.\n\nThe dates argument can be any of the following:\n\nA reference to a date/time column.\nA table expression that returns a single column of date/time values.\nA Boolean expression that defines a single-column table of date/time values.\n\n\nConstraints on Boolean expressions are described in the topic, CALCULATE.\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Time intelligence functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/time-intelligence-functions-dax",
        "category-zh-cn": "时间智能函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/time-intelligence-functions-dax",
        "description-zh-cn": "根据当前上下文中的 dates 列中的第一个日期返回一个表，此表包含上一季度所有日期的列  。\n此函数使用输入列中的第一个日期返回上一季度的所有日期。 例如，如果“日期”参数中的第一个日期指 2009 年 6 月 10 日，则此函数返回 2009 年 1 月到 3 月这一季度的所有日期。\n\ndates 参数可以是以下任一项  ：\n\n对日期/时间列的引用。\n返回单列日期/时间值的表表达式。\n定义日期/时间值的单列表的布尔表达式。\n\n\n有关对布尔表达式的约束，可查看 CALCULATE 主题。\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/previousquarter/"
    },
    "PREVIOUSYEAR": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/previousyear-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/previousyear-function-dax",
        "description-en-us": "Returns a table that contains a column of all dates from the previous year, given the last date in the dates column, in the current context.\nThis function returns all dates from the previous year given the latest date in the input parameter. For example, if the latest date in the dates argument refers to the year 2009, then this function returns all dates for the year of 2008, up to the specified year_end_date.\n\nThe dates argument can be any of the following:\n\nA reference to a date/time column.\nA table expression that returns a single column of date/time values.\nA Boolean expression that defines a single-column table of date/time values.\n\n\nConstraints on Boolean expressions are described in the topic, CALCULATE.\n\nThe year_end_date parameter is a string literal of a date, in the same locale as the locale of the client where the workbook was created. The year portion of the date is ignored.\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Time intelligence functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/time-intelligence-functions-dax",
        "category-zh-cn": "时间智能函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/time-intelligence-functions-dax",
        "description-zh-cn": "基于当前上下文中的“日期”列中的最后一个日期，返回一个表，该表包含上一年所有日期的列  。\n此函数基于输入参数中给定的最新日期返回上一年的所有日期。 例如，如果“日期”参数中的最新日期指的是 2009 年，则此函数返回 2008 年的所有日期，直到指定的“year_end_date”为止   。\n\ndates 参数可以是以下任一项  ：\n\n对日期/时间列的引用。\n返回单列日期/时间值的表表达式。\n定义日期/时间值的单列表的布尔表达式。\n\n\n有关对布尔表达式的约束，可查看 CALCULATE 主题。\n\nyear_end_date 参数是日期的字符串文本，采用的区域设置与创建工作簿的客户端的区域设置相同  。 日期的年份部分会被忽略。\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/previousyear/"
    },
    "SAMEPERIODLASTYEAR": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/sameperiodlastyear-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/sameperiodlastyear-function-dax",
        "description-en-us": "Returns a table that contains a column of dates shifted one year back in time from the dates in the specified dates column, in the current context.\nThe dates argument can be any of the following:\n\nA reference to a date/time column,\nA table expression that returns a single column of date/time values,\nA Boolean expression that defines a single-column table of date/time values.\n\n\nConstraints on Boolean expressions are described in the topic, CALCULATE.\n\nThe dates returned are the same as the dates returned by this equivalent formula: DATEADD(dates, -1, year)\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Time intelligence functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/time-intelligence-functions-dax",
        "category-zh-cn": "时间智能函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/time-intelligence-functions-dax",
        "description-zh-cn": "返回一个表，其中包含指定 dates 列中的日期在当前上下文中前一年的日期列  。\ndates 参数可以是以下任一项  ：\n\n对日期/时间列的引用，\n返回单列日期/时间值的表表达式，\n定义日期/时间值的单列表的布尔表达式。\n\n\n有关对布尔表达式的约束，可查看 CALCULATE 主题。\n\n返回的日期和等效公式 DATEADD(dates, -1, year) 返回的日期相同\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/sameperiodlastyear/"
    },
    "STARTOFMONTH": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/startofmonth-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/startofmonth-function-dax",
        "description-en-us": "Returns the first date of the month in the current context for the specified column of dates.\nThe dates argument can be any of the following:\n\nA reference to a date/time column.\nA table expression that returns a single column of date/time values.\nA Boolean expression that defines a single-column table of date/time values.\n\n\nConstraints on Boolean expressions are described in the topic, CALCULATE.\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Time intelligence functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/time-intelligence-functions-dax",
        "category-zh-cn": "时间智能函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/time-intelligence-functions-dax",
        "description-zh-cn": "返回当前上下文中指定日期列的月份的第一个日期。\ndates 参数可以是以下任一项  ：\n\n对日期/时间列的引用。\n返回单列日期/时间值的表表达式。\n定义日期/时间值的单列表的布尔表达式。\n\n\n有关对布尔表达式的约束，可查看 CALCULATE 主题。\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/startofmonth/"
    },
    "STARTOFQUARTER": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/startofquarter-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/startofquarter-function-dax",
        "description-en-us": "Returns the first date of the quarter in the current context for the specified column of dates.\nThe dates argument can be any of the following:\n\nA reference to a date/time column.\nA table expression that returns a single column of date/time values.\nA Boolean expression that defines a single-column table of date/time values.\n\n\nConstraints on Boolean expressions are described in the topic, CALCULATE.\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Time intelligence functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/time-intelligence-functions-dax",
        "category-zh-cn": "时间智能函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/time-intelligence-functions-dax",
        "description-zh-cn": "为指定的日期列返回当前上下文中季度的第一个日期。\ndates 参数可以是以下任一项  ：\n\n对日期/时间列的引用。\n返回单列日期/时间值的表表达式。\n定义日期/时间值的单列表的布尔表达式。\n\n\n有关对布尔表达式的约束，可查看 CALCULATE 主题。\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/startofquarter/"
    },
    "STARTOFYEAR": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/startofyear-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/startofyear-function-dax",
        "description-en-us": "Returns the first date of the year in the current context for the specified column of dates.\nThe dates argument can be any of the following:\n\nA reference to a date/time column.\nA table expression that returns a single column of date/time values.\nA Boolean expression that defines a single-column table of date/time values.\n\n\nConstraints on Boolean expressions are described in the topic, CALCULATE.\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Time intelligence functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/time-intelligence-functions-dax",
        "category-zh-cn": "时间智能函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/time-intelligence-functions-dax",
        "description-zh-cn": "返回当前上下文中指定日期列的年份的第一个日期。\ndates 参数可以是以下任一项  ：\n\n对日期/时间列的引用。\n返回单列日期/时间值的表表达式。\n定义日期/时间值的单列表的布尔表达式。\n\n\n有关对布尔表达式的约束，可查看 CALCULATE 主题。\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/startofyear/"
    },
    "TOTALMTD": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/totalmtd-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/totalmtd-function-dax",
        "description-en-us": "Evaluates the value of the expression for the month to date, in the current context.\nThe dates argument can be any of the following:\n\nA reference to a date/time column.\nA table expression that returns a single column of date/time values.\nA Boolean expression that defines a single-column table of date/time values.\n\n\nConstraints on Boolean expressions are described in the topic, CALCULATE.\n\nThe filter expression has restrictions described in the topic, CALCULATE.\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Time intelligence functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/time-intelligence-functions-dax",
        "category-zh-cn": "时间智能函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/time-intelligence-functions-dax",
        "description-zh-cn": "计算当前上下文中该月份至今的表达式的值  。\ndates 参数可以是以下任一项  ：\n\n对日期/时间列的引用。\n返回单列日期/时间值的表表达式。\n定义日期/时间值的单列表的布尔表达式。\n\n\n有关对布尔表达式的约束，可查看 CALCULATE 主题。\n\nFilter 表达式具有主题 CALCULATE 中描述的限制。\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/totalmtd/"
    },
    "TOTALQTD": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/totalqtd-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/totalqtd-function-dax",
        "description-en-us": "Evaluates the value of the expression for the dates in the quarter to date, in the current context.\nThe dates argument can be any of the following:\n\nA reference to a date/time column.\nA table expression that returns a single column of date/time values.\nA Boolean expression that defines a single-column table of date/time values.\n\n\nConstraints on Boolean expressions are described in the topic, CALCULATE.\n\nThe filter expression has restrictions described in the topic, CALCULATE.\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Time intelligence functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/time-intelligence-functions-dax",
        "category-zh-cn": "时间智能函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/time-intelligence-functions-dax",
        "description-zh-cn": "计算当前上下文中该季度至今的日期的表达式的值  。\ndates 参数可以是以下任一项  ：\n\n对日期/时间列的引用。\n返回单列日期/时间值的表表达式。\n定义日期/时间值的单列表的布尔表达式。\n\n\n有关对布尔表达式的约束，可查看 CALCULATE 主题。\n\nFilter 表达式具有主题 CALCULATE 中描述的限制。\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/totalqtd/"
    },
    "TOTALYTD": {
        "url-en-us": "https://learn.microsoft.com/en-us/dax/totalytd-function-dax",
        "url-zh-cn": "https://learn.microsoft.com/zh-cn/dax/totalytd-function-dax",
        "description-en-us": "Evaluates the year-to-date value of the expression in the current context.\nThe dates argument can be any of the following:\n\nA reference to a date/time column.\nA table expression that returns a single column of date/time values.\nA Boolean expression that defines a single-column table of date/time values.\n\n\nConstraints on Boolean expressions are described in the topic, CALCULATE.\n\nThe filter expression has restrictions described in the topic, CALCULATE.\n\nThe year_end_date parameter is a string literal of a date, in the same locale as the locale of the client where the workbook was created. The year portion of the date is not required and is ignored. For example, the following formula specifies a (fiscal) year_end_date of 6/30 in an EN-US locale workbook.\n= TOTALYTD(SUM(InternetSales_USD[SalesAmount_USD]),DateTime[DateKey], ALL('DateTime'), \"6/30\")  \n\nIn this example, year_end_date can be specified as \"6/30\", \"Jun 30\", \"30 June\", or any string that resolves to a month/day. However, it is recommended you specify year_end_date using \"month/day\" (as shown) to ensure the string resolves to a date.\n\nThis function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\n",
        "category-en-us": "Time intelligence functions",
        "url-category-en-us": "https://learn.microsoft.com/en-us/dax/time-intelligence-functions-dax",
        "category-zh-cn": "时间智能函数",
        "url-category-zh-cn": "https://learn.microsoft.com/en-us/dax/time-intelligence-functions-dax",
        "description-zh-cn": "计算当前上下文中表达式的 year-to-date 值  。\ndates 参数可以是以下任一项  ：\n\n对日期/时间列的引用。\n返回单列日期/时间值的表表达式。\n定义日期/时间值的单列表的布尔表达式。\n\n\n有关对布尔表达式的约束，可查看 CALCULATE 主题。\n\nFilter 表达式具有主题 CALCULATE 中描述的限制。\n\nyear_end_date 参数是日期的字符串文本，采用的区域设置与创建工作簿的客户端的区域设置相同  。 日期的年份部分不是必需的，并将被忽略。 例如，下面的公式在 EN-US 区域设置工作簿中指定 (fiscal) year_end_date 为 6/30。\n= TOTALYTD(SUM(InternetSales_USD[SalesAmount_USD]),DateTime[DateKey], ALL('DateTime'), \"6/30\")  \n\n在此示例中，可以将 year_end_date 指定为“6/30”、“Jun 30”、“30 June”或解析为月/日的任何字符串。 但是，建议使用“月/日”（如下所示）指定 year_end_date，以确保字符串解析为日期。\n\n在已计算的列或行级安全性 (RLS) 规则中使用时，不支持在 DirectQuery 模式下使用此函数。\n\n",
        "url-dax-guide": "https://dax.guide/totalytd/"
    }
}